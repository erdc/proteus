# Proteus Documentation

Accessible at https://erdc.github.io/proteus-doc

## Description

This is the root directory of the documentation. The documentation is
built from reStructuredText and the python docstrings using sphinx. To
build the html type 'make html' or see the Makefile for additional
formats. The documentation starts in index.rst and is organized as a
tree using the toctree entry in each .rst file. The api, scripts, and
test docs are/will be generated from the docstrings using the sphinx
autodoc extension. See the files in api and tests for examples. Note
that for autodoc to work the python interpreter must have access to
the files. The scripts and test/problemDescriptions paths are thus
appended in conf.py so that these modules, though not part of the
proteus module, are accessible to python during the sphinx build
process.

## Build Proteus Documentation Locally

Make sure dependencies specific to generation of the documentation are
installed:

```bash
pip install sphinx sphinx_rtd_theme breathe exhale
```

Clone this repository inside proteus repository (where `${PROTEUS}` is the path
to the root directory of your proteus installation):

```bash
cd ${PROTEUS}
git clone https://github.com/erdc/proteus-doc
```

Build documentation from root directory of this repository: 

```bash
cd proteus-doc
make html
```

The documentation can then be viewed in your favorite browser by opening
`../../proteus-website/index.html`


## Edit or Add Files

All files are in the `source/` directory:
- **Index file:** `source/index.rst`
- **Models files:** `source/models/[...].rst`
- **Tools files:** `source/tools/[...].rst`


## Update .io site

1. Clone repository as `proteus-website` one level below proteus 
```bash
cd ${PROTEUS}/..
git clone https://github.com/erdc/proteus-doc proteus-website
```
2. Switch to `gh-pages` branch
```bash
cd proteus-website
git checkout gh-pages
```
3. Create new local branch from `gh-pages` (if it exists already, just checkout
into it)
```bash
git checkout -b username/gh-pages
```
4. Generate documentation from proteus-doc folder
```bash
cd ${PROTEUS}/proteus-doc
make html
```
5. Commit changed or added files in proteus-website folder
6. Push changes to github and create pull request from `username/gh-pages` to
`gh-pages`
>>>>>>> 4a69fecea... README: how to update .io site

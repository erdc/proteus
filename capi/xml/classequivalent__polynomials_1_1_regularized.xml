<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classequivalent__polynomials_1_1_regularized" kind="class" language="C++" prot="public">
    <compoundname>equivalent_polynomials::Regularized</compoundname>
    <includes refid="equivalent__polynomials_8h" local="no">/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>nSpace</declname>
        <defname>nSpace</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nP</declname>
        <defname>nP</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nQ</declname>
        <defname>nQ</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classequivalent__polynomials_1_1_regularized_1ab877ab0a2a79d1c89e1693493d2917d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>equivalent_polynomials::Regularized&lt; nSpace, nP, nQ &gt;::Regularized</definition>
        <argsstring>(bool useExact=false)</argsstring>
        <name>Regularized</name>
        <param>
          <type>bool</type>
          <declname>useExact</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" line="14" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" bodystart="14" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classequivalent__polynomials_1_1_regularized_1a44ae1c5215481ba6e330053d22621907" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void equivalent_polynomials::Regularized&lt; nSpace, nP, nQ &gt;::calculate</definition>
        <argsstring>(const double *phi_dof, const double *phi_nodes, const double *xi_r)</argsstring>
        <name>calculate</name>
        <param>
          <type>const double *</type>
          <declname>phi_dof</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>phi_nodes</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>xi_r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" line="16" column="17" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" bodystart="16" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classequivalent__polynomials_1_1_regularized_1aabd4f62c46b591c95e7b905352efd878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void equivalent_polynomials::Regularized&lt; nSpace, nP, nQ &gt;::set_quad</definition>
        <argsstring>(unsigned int q)</argsstring>
        <name>set_quad</name>
        <param>
          <type>unsigned int</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" line="18" column="17" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classequivalent__polynomials_1_1_regularized_1a6a4c38ee9722407f79c565e10e7a4c0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double equivalent_polynomials::Regularized&lt; nSpace, nP, nQ &gt;::H</definition>
        <argsstring>(double eps, double phi)</argsstring>
        <name>H</name>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" line="20" column="19" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" bodystart="20" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classequivalent__polynomials_1_1_regularized_1a17cd58c615647ba1b6dcade3726968cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double equivalent_polynomials::Regularized&lt; nSpace, nP, nQ &gt;::ImH</definition>
        <argsstring>(double eps, double phi)</argsstring>
        <name>ImH</name>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" line="33" column="19" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classequivalent__polynomials_1_1_regularized_1a29aff2a2c27d9e44fd99213731f9c827" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double equivalent_polynomials::Regularized&lt; nSpace, nP, nQ &gt;::D</definition>
        <argsstring>(double eps, double phi)</argsstring>
        <name>D</name>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" line="37" column="19" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" bodystart="37" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" line="12" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials.h" bodystart="11" bodyend="48"/>
    <listofallmembers>
      <member refid="classequivalent__polynomials_1_1_regularized_1a44ae1c5215481ba6e330053d22621907" prot="public" virt="non-virtual"><scope>equivalent_polynomials::Regularized</scope><name>calculate</name></member>
      <member refid="classequivalent__polynomials_1_1_regularized_1a29aff2a2c27d9e44fd99213731f9c827" prot="public" virt="non-virtual"><scope>equivalent_polynomials::Regularized</scope><name>D</name></member>
      <member refid="classequivalent__polynomials_1_1_regularized_1a6a4c38ee9722407f79c565e10e7a4c0f" prot="public" virt="non-virtual"><scope>equivalent_polynomials::Regularized</scope><name>H</name></member>
      <member refid="classequivalent__polynomials_1_1_regularized_1a17cd58c615647ba1b6dcade3726968cd" prot="public" virt="non-virtual"><scope>equivalent_polynomials::Regularized</scope><name>ImH</name></member>
      <member refid="classequivalent__polynomials_1_1_regularized_1ab877ab0a2a79d1c89e1693493d2917d6" prot="public" virt="non-virtual"><scope>equivalent_polynomials::Regularized</scope><name>Regularized</name></member>
      <member refid="classequivalent__polynomials_1_1_regularized_1aabd4f62c46b591c95e7b905352efd878" prot="public" virt="non-virtual"><scope>equivalent_polynomials::Regularized</scope><name>set_quad</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classproteus_1_1cpp_r_a_n_s3_p_sed__base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>proteus::cppRANS3PSed_base</compoundname>
    <derivedcompoundref refid="classproteus_1_1cpp_r_a_n_s3_p_sed" prot="public" virt="non-virtual">proteus::cppRANS3PSed&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</derivedcompoundref>
    <includes refid="_r_a_n_s3_p_sed_8h" local="no">/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1ade94832d6627ba9e925c8a1747a326e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual proteus::cppRANS3PSed_base::~cppRANS3PSed_base</definition>
        <argsstring>()</argsstring>
        <name>~cppRANS3PSed_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" line="16" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a6d8b4ed2c6082bd488aa3cfb83035037" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void proteus::cppRANS3PSed_base::setSedClosure</definition>
        <argsstring>(double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>setSedClosure</name>
        <reimplementedby refid="classproteus_1_1cpp_r_a_n_s3_p_sed_1a3615f265b1da3620220c885262c96e13">setSedClosure</reimplementedby>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" line="17" column="18" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" bodystart="17" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a42b2e1a6af9e5a0e67e619842b7bb90a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::cppRANS3PSed_base::calculateResidual</definition>
        <argsstring>(double *mesh_trial_ref, double *mesh_grad_trial_ref, double *mesh_dof, double *mesh_velocity_dof, double MOVING_DOMAIN, double PSTAB, int *mesh_l2g, double *dV_ref, double *p_trial_ref, double *p_grad_trial_ref, double *p_test_ref, double *p_grad_test_ref, double *q_p, double *q_grad_p, double *ebqe_p, double *ebqe_grad_p, double *vel_trial_ref, double *vel_grad_trial_ref, double *vel_test_ref, double *vel_grad_test_ref, double *mesh_trial_trace_ref, double *mesh_grad_trial_trace_ref, double *dS_ref, double *p_trial_trace_ref, double *p_grad_trial_trace_ref, double *p_test_trace_ref, double *p_grad_test_trace_ref, double *vel_trial_trace_ref, double *vel_grad_trial_trace_ref, double *vel_test_trace_ref, double *vel_grad_test_trace_ref, double *normal_ref, double *boundaryJac_ref, double eb_adjoint_sigma, double *elementDiameter, double *nodeDiametersArray, double hFactor, int nElements_global, int nElementBoundaries_owned, double useRBLES, double useMetrics, double alphaBDF, double epsFact_rho, double epsFact_mu, double sigma, double rho_0, double nu_0, double rho_1, double nu_1, double rho_s, double smagorinskyConstant, int turbulenceClosureModel, double Ct_sge, double Cd_sge, double C_dc, double C_b, const double *eps_solid, const double *q_velocity_fluid, const double *q_velocityStar_fluid, const double *q_vos, const double *q_dvos_dt, const double *q_grad_vos, const double *q_dragAlpha, const double *q_dragBeta, const double *q_mass_source, const double *q_turb_var_0, const double *q_turb_var_1, const double *q_turb_var_grad_0, double *q_eddy_viscosity, int *p_l2g, int *vel_l2g, double *p_dof, double *u_dof, double *v_dof, double *w_dof, double *g, const double useVF, double *vf, double *phi, double *normal_phi, double *kappa_phi, double *q_mom_u_acc, double *q_mom_v_acc, double *q_mom_w_acc, double *q_mass_adv, double *q_mom_u_acc_beta_bdf, double *q_mom_v_acc_beta_bdf, double *q_mom_w_acc_beta_bdf, double *q_dV, double *q_dV_last, double *q_velocity_sge, double *ebqe_velocity_star, double *q_cfl, double *q_numDiff_u, double *q_numDiff_v, double *q_numDiff_w, double *q_numDiff_u_last, double *q_numDiff_v_last, double *q_numDiff_w_last, int *sdInfo_u_u_rowptr, int *sdInfo_u_u_colind, int *sdInfo_u_v_rowptr, int *sdInfo_u_v_colind, int *sdInfo_u_w_rowptr, int *sdInfo_u_w_colind, int *sdInfo_v_v_rowptr, int *sdInfo_v_v_colind, int *sdInfo_v_u_rowptr, int *sdInfo_v_u_colind, int *sdInfo_v_w_rowptr, int *sdInfo_v_w_colind, int *sdInfo_w_w_rowptr, int *sdInfo_w_w_colind, int *sdInfo_w_u_rowptr, int *sdInfo_w_u_colind, int *sdInfo_w_v_rowptr, int *sdInfo_w_v_colind, int offset_p, int offset_u, int offset_v, int offset_w, int stride_p, int stride_u, int stride_v, int stride_w, double *globalResidual, int nExteriorElementBoundaries_global, int *exteriorElementBoundariesArray, int *elementBoundaryElementsArray, int *elementBoundaryLocalElementBoundariesArray, double *ebqe_vf_ext, double *bc_ebqe_vf_ext, double *ebqe_phi_ext, double *bc_ebqe_phi_ext, double *ebqe_normal_phi_ext, double *ebqe_kappa_phi_ext, const double *ebqe_vos_ext, const double *ebqe_turb_var_0, const double *ebqe_turb_var_1, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, int *isAdvectiveFluxBoundary_p, int *isAdvectiveFluxBoundary_u, int *isAdvectiveFluxBoundary_v, int *isAdvectiveFluxBoundary_w, int *isDiffusiveFluxBoundary_u, int *isDiffusiveFluxBoundary_v, int *isDiffusiveFluxBoundary_w, double *ebqe_bc_p_ext, double *ebqe_bc_flux_mass_ext, double *ebqe_bc_flux_mom_u_adv_ext, double *ebqe_bc_flux_mom_v_adv_ext, double *ebqe_bc_flux_mom_w_adv_ext, double *ebqe_bc_u_ext, double *ebqe_bc_flux_u_diff_ext, double *ebqe_penalty_ext, double *ebqe_bc_v_ext, double *ebqe_bc_flux_v_diff_ext, double *ebqe_bc_w_ext, double *ebqe_bc_flux_w_diff_ext, double *q_x, double *q_velocity, double *ebqe_velocity, double *flux, double *elementResidual_p, int *elementFlags, int *boundaryFlags, double *barycenters, double *wettedAreas, double *netForces_p, double *netForces_v, double *netMoments, double *ncDrag, double LAG_MU_FR, double *q_mu_fr_last, double *q_mu_fr)=0</argsstring>
        <name>calculateResidual</name>
        <reimplementedby refid="classproteus_1_1cpp_r_a_n_s3_p_sed_1a16154c2580876f204569cecf92fd899d">calculateResidual</reimplementedby>
        <param>
          <type>double *</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>double</type>
          <declname>PSTAB</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_grad_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_grad_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eb_adjoint_sigma</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>nodeDiametersArray</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_owned</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsFact_rho</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsFact_mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rho_0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu_0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rho_1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu_1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rho_s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>smagorinskyConstant</declname>
        </param>
        <param>
          <type>int</type>
          <declname>turbulenceClosureModel</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ct_sge</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Cd_sge</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C_dc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C_b</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>eps_solid</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_velocity_fluid</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_velocityStar_fluid</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_vos</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_dvos_dt</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_grad_vos</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_dragAlpha</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_dragBeta</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_mass_source</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_turb_var_0</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_turb_var_1</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_turb_var_grad_0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_eddy_viscosity</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>p_l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>useVF</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>normal_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kappa_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_u_acc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_v_acc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_w_acc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mass_adv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_u_acc_beta_bdf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_v_acc_beta_bdf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_w_acc_beta_bdf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_dV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_dV_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_velocity_sge</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_velocity_star</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_u_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_v_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_w_last</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_u_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_u_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_v_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_v_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_w_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_w_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_v_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_v_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_u_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_u_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_w_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_w_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_w_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_w_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_u_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_u_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_v_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_v_colind</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>globalResidual</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_vf_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_ebqe_vf_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_phi_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_ebqe_phi_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_normal_phi_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_kappa_phi_ext</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ebqe_vos_ext</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ebqe_turb_var_0</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ebqe_turb_var_1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_p_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mom_u_adv_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mom_v_adv_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mom_w_adv_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_u_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_u_diff_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_v_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_v_diff_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_w_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_w_diff_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_velocity</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_velocity</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>elementResidual_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementFlags</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>boundaryFlags</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>barycenters</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>wettedAreas</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>netForces_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>netForces_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>netMoments</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ncDrag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>LAG_MU_FR</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mu_fr_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mu_fr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" line="34" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a0e03eb14fbfe753bad4898d54c5ae205" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::cppRANS3PSed_base::calculateJacobian</definition>
        <argsstring>(double *mesh_trial_ref, double *mesh_grad_trial_ref, double *mesh_dof, double *mesh_velocity_dof, double MOVING_DOMAIN, double PSTAB, int *mesh_l2g, double *dV_ref, double *p_trial_ref, double *p_grad_trial_ref, double *p_test_ref, double *p_grad_test_ref, double *q_p, double *q_grad_p, double *ebqe_p, double *ebqe_grad_p, double *vel_trial_ref, double *vel_grad_trial_ref, double *vel_test_ref, double *vel_grad_test_ref, double *mesh_trial_trace_ref, double *mesh_grad_trial_trace_ref, double *dS_ref, double *p_trial_trace_ref, double *p_grad_trial_trace_ref, double *p_test_trace_ref, double *p_grad_test_trace_ref, double *vel_trial_trace_ref, double *vel_grad_trial_trace_ref, double *vel_test_trace_ref, double *vel_grad_test_trace_ref, double *normal_ref, double *boundaryJac_ref, double eb_adjoint_sigma, double *elementDiameter, double *nodeDiametersArray, double hFactor, int nElements_global, double useRBLES, double useMetrics, double alphaBDF, double epsFact_rho, double epsFact_mu, double sigma, double rho_0, double nu_0, double rho_1, double nu_1, double rho_s, double smagorinskyConstant, int turbulenceClosureModel, double Ct_sge, double Cd_sge, double C_dg, double C_b, const double *eps_solid, const double *q_velocity_fluid, const double *q_velocityStar_fluid, const double *q_vos, const double *q_dvos_dt, const double *q_grad_vos, const double *q_dragAlpha, const double *q_dragBeta, const double *q_mass_source, const double *q_turb_var_0, const double *q_turb_var_1, const double *q_turb_var_grad_0, int *p_l2g, int *vel_l2g, double *p_dof, double *u_dof, double *v_dof, double *w_dof, double *g, const double useVF, double *vf, double *phi, double *normal_phi, double *kappa_phi, double *q_mom_u_acc_beta_bdf, double *q_mom_v_acc_beta_bdf, double *q_mom_w_acc_beta_bdf, double *q_dV, double *q_dV_last, double *q_velocity_sge, double *ebqe_velocity_star, double *q_cfl, double *q_numDiff_u_last, double *q_numDiff_v_last, double *q_numDiff_w_last, int *sdInfo_u_u_rowptr, int *sdInfo_u_u_colind, int *sdInfo_u_v_rowptr, int *sdInfo_u_v_colind, int *sdInfo_u_w_rowptr, int *sdInfo_u_w_colind, int *sdInfo_v_v_rowptr, int *sdInfo_v_v_colind, int *sdInfo_v_u_rowptr, int *sdInfo_v_u_colind, int *sdInfo_v_w_rowptr, int *sdInfo_v_w_colind, int *sdInfo_w_w_rowptr, int *sdInfo_w_w_colind, int *sdInfo_w_u_rowptr, int *sdInfo_w_u_colind, int *sdInfo_w_v_rowptr, int *sdInfo_w_v_colind, int *csrRowIndeces_p_p, int *csrColumnOffsets_p_p, int *csrRowIndeces_p_u, int *csrColumnOffsets_p_u, int *csrRowIndeces_p_v, int *csrColumnOffsets_p_v, int *csrRowIndeces_p_w, int *csrColumnOffsets_p_w, int *csrRowIndeces_u_p, int *csrColumnOffsets_u_p, int *csrRowIndeces_u_u, int *csrColumnOffsets_u_u, int *csrRowIndeces_u_v, int *csrColumnOffsets_u_v, int *csrRowIndeces_u_w, int *csrColumnOffsets_u_w, int *csrRowIndeces_v_p, int *csrColumnOffsets_v_p, int *csrRowIndeces_v_u, int *csrColumnOffsets_v_u, int *csrRowIndeces_v_v, int *csrColumnOffsets_v_v, int *csrRowIndeces_v_w, int *csrColumnOffsets_v_w, int *csrRowIndeces_w_p, int *csrColumnOffsets_w_p, int *csrRowIndeces_w_u, int *csrColumnOffsets_w_u, int *csrRowIndeces_w_v, int *csrColumnOffsets_w_v, int *csrRowIndeces_w_w, int *csrColumnOffsets_w_w, double *globalJacobian, int nExteriorElementBoundaries_global, int *exteriorElementBoundariesArray, int *elementBoundaryElementsArray, int *elementBoundaryLocalElementBoundariesArray, double *ebqe_vf_ext, double *bc_ebqe_vf_ext, double *ebqe_phi_ext, double *bc_ebqe_phi_ext, double *ebqe_normal_phi_ext, double *ebqe_kappa_phi_ext, const double *ebqe_vos_ext, const double *ebqe_turb_var_0, const double *ebqe_turb_var_1, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, int *isAdvectiveFluxBoundary_p, int *isAdvectiveFluxBoundary_u, int *isAdvectiveFluxBoundary_v, int *isAdvectiveFluxBoundary_w, int *isDiffusiveFluxBoundary_u, int *isDiffusiveFluxBoundary_v, int *isDiffusiveFluxBoundary_w, double *ebqe_bc_p_ext, double *ebqe_bc_flux_mass_ext, double *ebqe_bc_flux_mom_u_adv_ext, double *ebqe_bc_flux_mom_v_adv_ext, double *ebqe_bc_flux_mom_w_adv_ext, double *ebqe_bc_u_ext, double *ebqe_bc_flux_u_diff_ext, double *ebqe_penalty_ext, double *ebqe_bc_v_ext, double *ebqe_bc_flux_v_diff_ext, double *ebqe_bc_w_ext, double *ebqe_bc_flux_w_diff_ext, int *csrColumnOffsets_eb_p_p, int *csrColumnOffsets_eb_p_u, int *csrColumnOffsets_eb_p_v, int *csrColumnOffsets_eb_p_w, int *csrColumnOffsets_eb_u_p, int *csrColumnOffsets_eb_u_u, int *csrColumnOffsets_eb_u_v, int *csrColumnOffsets_eb_u_w, int *csrColumnOffsets_eb_v_p, int *csrColumnOffsets_eb_v_u, int *csrColumnOffsets_eb_v_v, int *csrColumnOffsets_eb_v_w, int *csrColumnOffsets_eb_w_p, int *csrColumnOffsets_eb_w_u, int *csrColumnOffsets_eb_w_v, int *csrColumnOffsets_eb_w_w, int *elementFlags, double mu_fr, double *q_mu_fr_last, double *q_mu_fr)=0</argsstring>
        <name>calculateJacobian</name>
        <reimplementedby refid="classproteus_1_1cpp_r_a_n_s3_p_sed_1a284f966d66aead7b051aadc6e16fc749">calculateJacobian</reimplementedby>
        <param>
          <type>double *</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>double</type>
          <declname>PSTAB</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_grad_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_grad_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eb_adjoint_sigma</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>nodeDiametersArray</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsFact_rho</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsFact_mu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rho_0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu_0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rho_1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu_1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rho_s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>smagorinskyConstant</declname>
        </param>
        <param>
          <type>int</type>
          <declname>turbulenceClosureModel</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ct_sge</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Cd_sge</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C_dg</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C_b</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>eps_solid</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_velocity_fluid</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_velocityStar_fluid</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_vos</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_dvos_dt</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_grad_vos</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_dragAlpha</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_dragBeta</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_mass_source</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_turb_var_0</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_turb_var_1</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_turb_var_grad_0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>p_l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>useVF</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>normal_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kappa_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_u_acc_beta_bdf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_v_acc_beta_bdf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mom_w_acc_beta_bdf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_dV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_dV_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_velocity_sge</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_velocity_star</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_u_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_v_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_numDiff_w_last</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_u_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_u_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_v_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_v_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_w_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_u_w_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_v_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_v_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_u_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_u_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_w_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_v_w_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_w_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_w_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_u_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_u_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_v_rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>sdInfo_w_v_colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_p_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_p_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_p_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_p_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_p_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_p_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_p_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_p_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_u_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_u_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_u_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_u_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_u_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_u_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_u_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_u_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_v_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_v_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_v_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_v_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_v_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_v_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_v_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_v_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_w_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_w_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_w_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_w_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_w_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_w_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrRowIndeces_w_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_w_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_vf_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_ebqe_vf_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_phi_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_ebqe_phi_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_normal_phi_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_kappa_phi_ext</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ebqe_vos_ext</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ebqe_turb_var_0</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ebqe_turb_var_1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isAdvectiveFluxBoundary_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_p_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mom_u_adv_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mom_v_adv_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_mom_w_adv_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_u_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_u_diff_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_v_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_v_diff_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_w_ext</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_bc_flux_w_diff_ext</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_p_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_p_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_p_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_p_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_u_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_u_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_u_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_u_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_v_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_v_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_v_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_v_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_w_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_w_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_w_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>csrColumnOffsets_eb_w_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementFlags</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mu_fr_last</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_mu_fr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" line="212" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a7b7be81f7e6d7787143b19ead7fcc305" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::cppRANS3PSed_base::calculateVelocityAverage</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int *exteriorElementBoundariesArray, int nInteriorElementBoundaries_global, int *interiorElementBoundariesArray, int *elementBoundaryElementsArray, int *elementBoundaryLocalElementBoundariesArray, double *mesh_dof, double *mesh_velocity_dof, double MOVING_DOMAIN, int *mesh_l2g, double *mesh_trial_trace_ref, double *mesh_grad_trial_trace_ref, double *normal_ref, double *boundaryJac_ref, int *vel_l2g, double *u_dof, double *v_dof, double *w_dof, double *vos_dof, double *vel_trial_trace_ref, double *ebqe_velocity, double *velocityAverage)=0</argsstring>
        <name>calculateVelocityAverage</name>
        <reimplementedby refid="classproteus_1_1cpp_r_a_n_s3_p_sed_1a8cd3bdf88c25aedebab6f789c97fc5aa">calculateVelocityAverage</reimplementedby>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundariesArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vos_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ebqe_velocity</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>velocityAverage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" line="383" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>proteus::cppRANS3PSed_base</label>
        <link refid="classproteus_1_1cpp_r_a_n_s3_p_sed__base"/>
      </node>
      <node id="2">
        <label>proteus::cppRANS3PSed&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="classproteus_1_1cpp_r_a_n_s3_p_sed"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" line="14" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mprans/RANS3PSed.h" bodystart="13" bodyend="405"/>
    <listofallmembers>
      <member refid="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a0e03eb14fbfe753bad4898d54c5ae205" prot="public" virt="pure-virtual"><scope>proteus::cppRANS3PSed_base</scope><name>calculateJacobian</name></member>
      <member refid="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a42b2e1a6af9e5a0e67e619842b7bb90a" prot="public" virt="pure-virtual"><scope>proteus::cppRANS3PSed_base</scope><name>calculateResidual</name></member>
      <member refid="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a7b7be81f7e6d7787143b19ead7fcc305" prot="public" virt="pure-virtual"><scope>proteus::cppRANS3PSed_base</scope><name>calculateVelocityAverage</name></member>
      <member refid="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1a6d8b4ed2c6082bd488aa3cfb83035037" prot="public" virt="virtual"><scope>proteus::cppRANS3PSed_base</scope><name>setSedClosure</name></member>
      <member refid="classproteus_1_1cpp_r_a_n_s3_p_sed__base_1ade94832d6627ba9e925c8a1747a326e7" prot="public" virt="virtual"><scope>proteus::cppRANS3PSed_base</scope><name>~cppRANS3PSed_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

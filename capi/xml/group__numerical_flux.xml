<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__numerical_flux" kind="group">
    <compoundname>numericalFlux</compoundname>
    <title>numericalFlux</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__numerical_flux_1gacf51bddfd436712de63e708d852cdb72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorLesaintRaviartNumericalFlux</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int speedEvalFlag, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *H, double *dH, double *flux, double *dflux_left, double *dflux_right)</argsstring>
        <name>calculateInteriorLesaintRaviartNumericalFlux</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>speedEvalFlag</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>H</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dH</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="22" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9435" bodyend="9568" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="22" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga9a48edcbf906b7cfe226b3191f8ba435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalAdvectiveFluxConvexOneSonicPoint</definition>
        <argsstring>(double sonicPoint, double sonicFlux, int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *f, double *df, double *flux, double *dflux_left, double *dflux_right)</argsstring>
        <name>calculateInteriorNumericalAdvectiveFluxConvexOneSonicPoint</name>
        <param>
          <type>double</type>
          <declname>sonicPoint</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sonicFlux</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at interior element boundaries for simple scalar nonlinear hyperbolic pdes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="39" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="14" bodyend="178" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="39" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga51848546b69e2e674e82cd3bab661695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFluxRusanov</definition>
        <argsstring>(double safetyFactor, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nQuadraturePoints_element, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *df_element, double *flux, double *dflux)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFluxRusanov</name>
        <param>
          <type>double</type>
          <declname>safetyFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_element</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="56" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="326" bodyend="461" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="56" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaa38f4983fd072e1bfe29140c32b915a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalDiffusiveFlux</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateInteriorNumericalDiffusiveFlux</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
<para>Calculate the diffusive flux at interior element boundary quadrature points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="78" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="891" bodyend="986" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="78" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga209c5cc7586d69022c47ec810e642bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateInteriorNumericalDiffusiveFluxJacobian</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *l2g, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateInteriorNumericalDiffusiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
<para>Calculate the diffusive flux Jacobian at interior element boundary quadrature points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="94" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="1255" bodyend="1429" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="94" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga21c83a07fe2c47514a51e549ada9b52a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalAdvectiveFlux</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *f, double *df, double *flux, double *dflux_left, double *dflux_right)</argsstring>
        <name>calculateInteriorNumericalAdvectiveFlux</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at interior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="116" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="3927" bodyend="4087" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="116" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga764af18b422d4adb7710b0f1631ca8c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateInteriorNumericalAdvectiveFluxJacobian</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *dflux_left, double *dflux_right, double *v, double *fluxJacobian)</argsstring>
        <name>updateInteriorNumericalAdvectiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at interior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="132" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4092" bodyend="4141" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="132" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga7bf01a6709031a919f4a9bdbf6eba4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalAdvectiveFlux_average</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *f, double *df, double *flux, double *dflux_left, double *dflux_right)</argsstring>
        <name>calculateInteriorNumericalAdvectiveFlux_average</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at interior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="145" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4233" bodyend="4310" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="145" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga56114b7eef1088321cdeba30833366c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFlux_NoBC</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *inflowFlag, double *n, double *f, double *df, double *flux, double *dflux_left)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFlux_NoBC</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <briefdescription>
<para>Update the advective flux at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="161" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4315" bodyend="4375" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="161" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaec6dd60808c18ccf4583e25680ed9a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalDiffusiveFlux_LDG_upwind</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *a, double *phi, double *V, double *penalty, double *flux)</argsstring>
        <name>calculateInteriorNumericalDiffusiveFlux_LDG_upwind</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at interior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="176" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7996" bodyend="8079" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="176" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga755839256dbf98017d3b2f1f88d30da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateInteriorNumericalDiffusiveFluxJacobian_LDG_upwind</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *dphi, double *V, double *DV, double *DV_eb, double *v, double *penalty, double *fluxJacobian, double *fluxJacobian_eb)</argsstring>
        <name>updateInteriorNumericalDiffusiveFluxJacobian_LDG_upwind</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV_eb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_eb</declname>
        </param>
        <briefdescription>
<para>Update the advective flux at at interior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="192" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8169" bodyend="8345" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="192" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga90a64ce2c443b82d26a5c980e1810a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalDiffusiveFlux_LDG_upwind</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *a, double *phi_bc, double *phi, double *V, double *penalty, double *flux)</argsstring>
        <name>calculateExteriorNumericalDiffusiveFlux_LDG_upwind</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi_bc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at interior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="213" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8525" bodyend="8587" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="213" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga168eb3a9ddf63ec80f715ff97b86eaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalDiffusiveFluxJacobian</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateGlobalExteriorNumericalDiffusiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
<para>Update the diffusive flux Jacobian at exterior element boundary quadrature points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="233" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2973" bodyend="3076" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="233" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga5036dd39c4a35afa5385235971d9f993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setInflowFlux</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int *exteriorElementBoundaries, double *inflowFlux, double *flux)</argsstring>
        <name>setInflowFlux</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>inflowFlux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
<para>Set the advective flux boundary condition at exterior element boundaries from the current exterior flux. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="254" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7973" bodyend="7990" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="254" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga83f3e93763f73b57ae1f31e769318878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateInteriorTwoSidedNumericalFluxJacobian</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *dflux_left, double *dflux_right, double *v, double *fluxJacobian_2sided)</argsstring>
        <name>updateInteriorTwoSidedNumericalFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_2sided</declname>
        </param>
        <briefdescription>
<para>Calculate the two-sided flux jacobian at at interior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="260" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4145" bodyend="4228" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="260" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaf0d1395ccd4fd36b9bbd35c6a9ba2986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFlux_NoBC</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *inflowFlag, double *n, double *f, double *df, double *flux, double *dflux_left)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFlux_NoBC</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <briefdescription>
<para>Update the advective flux at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="274" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4379" bodyend="4434" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="274" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga28393230f1e56f9289a3afbd3d1598dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorInflowNumericalAdvectiveFlux</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *inflowFlag, double *inflowFlux, double *n, double *f, double *df, double *flux, double *dflux_left)</argsstring>
        <name>calculateGlobalExteriorInflowNumericalAdvectiveFlux</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>inflowFlux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <briefdescription>
<para>Update the advective flux at exterior inflow element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="287" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7765" bodyend="7793" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="287" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaac747e5a01d4f2109a7f2db921da5a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalDiffusiveFluxJacobian_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateExteriorNumericalDiffusiveFluxJacobian_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="302" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="3593" bodyend="3679" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="302" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gabb27927a4d10d580e2ad2914927a33c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorChengShuNumericalFlux</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nQuadraturePoints_element, int nSpace, int speedEvalFlag, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *H, double *dH, double *H_element, double *dH_element, double *flux, double *dflux_left, double *dflux_right)</argsstring>
        <name>calculateInteriorChengShuNumericalFlux</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>speedEvalFlag</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>H</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dH</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>H_element</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dH_element</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="322" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13937" bodyend="14166" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="322" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gac3b11820212ce2b4361df4719074c13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCFF</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_um, const double *n, const double *bc_f_m, const double *bc_a_wm, const double *bc_a_mw, const double *bc_a_mm, const double *bc_grad_phi_w, const double *bc_grad_phi_m, const double *bc_u_w, const double *bc_u_m, const double *f_m, const double *df_m_dw, const double *a_wm, const double *a_mw, const double *a_mm, const double *grad_phi_w, const double *grad_phi_m, const double *u_w, const double *u_m, const double *penalty_w, const double *penalty_m, double *advectiveFlux_m, double *dadvectiveFlux_m_dw, double *diffusiveFlux_wm, double *diffusiveFlux_mw, double *diffusiveFlux_mm)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCFF</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_um</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_f_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_wm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_mw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_mm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_u_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_u_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>f_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>df_m_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_wm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_m</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>advectiveFlux_m</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dadvectiveFlux_m_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_wm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_mw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="341" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9773" bodyend="9951" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="341" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga372f8c0ff3addb0211e7c311192c74f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCFF_diffusiveFluxJacobian</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int nDOF_trial_element, const int *l2g, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_um, const double *n, const double *f_m, const double *df_m_dw, const double *a_wm, const double *da_wm_dw, const double *da_wm_dm, const double *a_mw, const double *da_mw_dw, const double *da_mw_dm, const double *a_mm, const double *da_mm_dw, const double *da_mm_dm, const double *grad_phi_w, const double *grad_phi_m, const double *dphi_w_w, const double *dphi_w_m, const double *dphi_m_w, const double *dphi_m_m, const double *u_w, const double *u_m, const double *v, const double *grad_v, const double *penalty_w, const double *penalty_m, double *fluxJacobian_ww, double *fluxJacobian_wm, double *fluxJacobian_mw, double *fluxJacobian_mm)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCFF_diffusiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_um</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>f_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>df_m_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_wm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_wm_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_wm_dm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mw_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mw_dm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mm_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mm_dm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_m_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_m_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_m</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_wm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_mw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="374" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="10135" bodyend="10488" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="374" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaca78a51065cec4a93ddbd31cf2cf9446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalStressFluxJacobian</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, int *isStressBoundary_u, int *isStressBoundary_v, int *isStressBoundary_w, double *n, double *dstress_u_u, double *dstress_u_v, double *dstress_u_w, double *dstress_v_u, double *dstress_v_v, double *dstress_v_w, double *dstress_w_u, double *dstress_w_v, double *dstress_w_w, double *v, double *grad_v, double *penalty, double *fluxJacobian_u_u, double *fluxJacobian_u_v, double *fluxJacobian_u_w, double *fluxJacobian_v_u, double *fluxJacobian_v_v, double *fluxJacobian_v_w, double *fluxJacobian_w_u, double *fluxJacobian_w_v, double *fluxJacobian_w_w)</argsstring>
        <name>updateExteriorNumericalStressFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isStressBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isStressBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isStressBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_u_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_u_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_u_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_v_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_v_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_v_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_w_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_w_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dstress_w_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_u_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_u_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_u_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_v_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_v_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_v_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_w_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_w_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_w_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="413" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="14592" bodyend="14849" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="413" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaaf938f69b5099f5e97db0905cfc582fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalFluxRichards_sd</definition>
        <argsstring>(int *rowptr, int *colind, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *isSeepageFace, int *isDOFBoundary, double *n, double *bc_u, double *K, double *grad_psi, double *u, double *K_rho_g, double *penalty, double *diffusiveFlux)</argsstring>
        <name>calculateExteriorNumericalFluxRichards_sd</name>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isSeepageFace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>K</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_psi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>K_rho_g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="449" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="14274" bodyend="14363" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="449" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gadf5d7e13dde6fce82fc2832aa57b25bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalFluxJacobianRichards_sd</definition>
        <argsstring>(int *rowptr, int *colind, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *isDOFBoundary, double *n, double *bc_u, double *K, double *dK, double *grad_psi, double *grad_v, double *u, double *dK_rho_g, double *v, double *penalty, double *fluxJacobian)</argsstring>
        <name>calculateExteriorNumericalFluxJacobianRichards_sd</name>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>K</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dK</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_psi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dK_rho_g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="464" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="14365" bodyend="14452" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="464" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga9680fb3d3e3df243cf128b0dc44d21ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalDiffusiveFlux_sd</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateGlobalExteriorNumericalDiffusiveFlux_sd</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="482" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2165" bodyend="2236" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="482" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga5ec9fb42238d20c8b82c279332ebf12c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalAdvectiveFluxRusanovWithEigenvalueBound</definition>
        <argsstring>(double safetyFactor, int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nQuadraturePoints_element, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *f, double *lambda_bar_element, double *flux)</argsstring>
        <name>calculateInteriorNumericalAdvectiveFluxRusanovWithEigenvalueBound</name>
        <param>
          <type>double</type>
          <declname>safetyFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambda_bar_element</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>need to add non-diagonal flux derivatives for Jacobian </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="502" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="591" bodyend="691" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="502" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga1d90ccb6bd399facdfc225ade7363bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalDiffusiveFlux_sd</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateInteriorNumericalDiffusiveFlux_sd</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="516" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="987" bodyend="1083" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="516" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga3f6c8ead7f67f090b179e14f1b953ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateInteriorNumericalDiffusiveFluxJacobian_sd</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *l2g, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateInteriorNumericalDiffusiveFluxJacobian_sd</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="534" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="1431" bodyend="1601" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="534" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga163c2a326d8f0a0a24d4e0628b70c7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalDiffusiveFlux_sd</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateExteriorNumericalDiffusiveFlux_sd</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="556" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2010" bodyend="2089" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="556" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga2661ab94749f3208c8e4b80fdffaae0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalDiffusiveFluxJacobian_sd</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateExteriorNumericalDiffusiveFluxJacobian_sd</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="577" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2856" bodyend="2969" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="577" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga786e52d331a99280611c2f7723f1f472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalDiffusiveFluxJacobian_free_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateExteriorNumericalDiffusiveFluxJacobian_free_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="600" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="3680" bodyend="3766" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="600" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gacbe78d4c56c6ccf44093ef2130ac1f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalDiffusiveFlux_LDG_upwind_sd</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *a, double *phi, double *V, double *penalty, double *flux)</argsstring>
        <name>calculateInteriorNumericalDiffusiveFlux_LDG_upwind_sd</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="621" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8081" bodyend="8164" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="621" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gac51b0c337e4afdd7fc4bacb8cbecf411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateInteriorNumericalDiffusiveFluxJacobian_LDG_upwind_sd</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *dphi, double *V, double *DV, double *DV_eb, double *v, double *penalty, double *fluxJacobian, double *fluxJacobian_eb)</argsstring>
        <name>updateInteriorNumericalDiffusiveFluxJacobian_LDG_upwind_sd</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV_eb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="637" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8347" bodyend="8520" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="637" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gada447e369ca62662725cc24299457fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalDiffusiveFlux_LDG_upwind_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *a, double *phi_bc, double *phi, double *V, double *penalty, double *flux)</argsstring>
        <name>calculateExteriorNumericalDiffusiveFlux_LDG_upwind_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi_bc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="658" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8588" bodyend="8651" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="658" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga636adba1d19d498cffd041b9223b8051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateDiffusionMatrixSplittings_LDG_sd</definition>
        <argsstring>(int aSplit, int nElements_global, int nElementBoundaries_element, int nQuadraturePoints_element, int nQuadraturePoints_elementBoundary, int nSpace, const int *rowptr, const int *colind, const double *ebq_a, const double *q_a, double *eb_aHat, double *eb_aTilde, double *aHat, double *aTilde)</argsstring>
        <name>calculateDiffusionMatrixSplittings_LDG_sd</name>
        <param>
          <type>int</type>
          <declname>aSplit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ebq_a</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>q_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>eb_aHat</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>eb_aTilde</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>aHat</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>aTilde</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="675" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9255" bodyend="9429" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="675" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga8d41d5ffa3a81e1b64f79dbed22402df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCFF_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr_wm, int *colind_wm, int *rowptr_mw, int *colind_mw, int *rowptr_mm, int *colind_mm, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_um, const double *n, const double *bc_f_m, const double *bc_a_wm, const double *bc_a_mw, const double *bc_a_mm, const double *bc_grad_phi_w, const double *bc_grad_phi_m, const double *bc_u_w, const double *bc_u_m, const double *f_m, const double *df_m_dw, const double *a_wm, const double *a_mw, const double *a_mm, const double *grad_phi_w, const double *grad_phi_m, const double *u_w, const double *u_m, const double *penalty_w, const double *penalty_m, double *advectiveFlux_m, double *dadvectiveFlux_m_dw, double *diffusiveFlux_wm, double *diffusiveFlux_mw, double *diffusiveFlux_mm)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCFF_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_wm</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_wm</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_mw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_mw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_mm</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_mm</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_um</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_f_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_wm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_mw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_mm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_u_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_u_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>f_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>df_m_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_wm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_m</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>advectiveFlux_m</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dadvectiveFlux_m_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_wm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_mw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="689" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9952" bodyend="10133" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="689" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga684ce5a019aab3c9dc4b6e3e1ef3214c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCFF_diffusiveFluxJacobian_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int nDOF_trial_element, int *rowptr_wm, int *colind_wm, int *rowptr_mw, int *colind_mw, int *rowptr_mm, int *colind_mm, const int *l2g, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_um, const double *n, const double *f_m, const double *df_m_dw, const double *a_wm, const double *da_wm_dw, const double *da_wm_dm, const double *a_mw, const double *da_mw_dw, const double *da_mw_dm, const double *a_mm, const double *da_mm_dw, const double *da_mm_dm, const double *grad_phi_w, const double *grad_phi_m, const double *dphi_w_w, const double *dphi_w_m, const double *dphi_m_w, const double *dphi_m_m, const double *u_w, const double *u_m, const double *v, const double *grad_v, const double *penalty_w, const double *penalty_m, double *fluxJacobian_ww, double *fluxJacobian_wm, double *fluxJacobian_mw, double *fluxJacobian_mm)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCFF_diffusiveFluxJacobian_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_wm</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_wm</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_mw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_mw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_mm</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_mm</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_um</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>f_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>df_m_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_wm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_wm_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_wm_dm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mw_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mw_dm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_mm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mm_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_mm_dm</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_m_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_m_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>u_m</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_m</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_wm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_mw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_mm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="728" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="10490" bodyend="10837" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="728" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga420e9db1d6b2403b842a9e4823724614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFC</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *bc_a_ww, const double *bc_a_nn, const double *bc_grad_phi_w, const double *bc_grad_phi_n, const double *bc_s_w, const double *bc_psi_w, const double *bc_psi_n, const double *a_ww, const double *a_nn, const double *grad_phi_w, const double *grad_phi_n, const double *s_w, const double *psi_w, const double *psi_n, const double *penalty_w, const double *penalty_n, double *diffusiveFlux_ww, double *diffusiveFlux_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFC</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_s_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>s_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="772" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="10839" bodyend="10992" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="772" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga068c8b7462c64989e043ab45ac221bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFC_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr_ww, int *colind_ww, int *rowptr_nn, int *colind_nn, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *bc_a_ww, const double *bc_a_nn, const double *bc_grad_phi_w, const double *bc_grad_phi_n, const double *bc_s_w, const double *bc_psi_w, const double *bc_psi_n, const double *a_ww, const double *a_nn, const double *grad_phi_w, const double *grad_phi_n, const double *s_w, const double *psi_w, const double *psi_n, const double *penalty_w, const double *penalty_n, double *diffusiveFlux_ww, double *diffusiveFlux_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFC_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_nn</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_nn</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_s_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>s_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="801" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="10994" bodyend="11149" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="801" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga1e5d2c1ceaa64bb7517db6b380e54487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFC_diffusiveFluxJacobian</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int nDOF_trial_element, const int *l2g, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *a_ww, const double *da_ww_dw, const double *da_ww_dn, const double *a_nn, const double *da_nn_dw, const double *da_nn_dn, const double *grad_phi_w, const double *grad_phi_n, const double *dphi_w_w, const double *dphi_w_n, const double *dphi_n_w, const double *dphi_n_n, const double *s_w, const double *psi_w, const double *psi_n, const double *dpsi_n_dsw, const double *dpsi_n_dpsiw, const double *v, const double *grad_v, const double *penalty_w, const double *penalty_n, double *fluxJacobian_ww, double *fluxJacobian_wn, double *fluxJacobian_nw, double *fluxJacobian_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFC_diffusiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>s_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dsw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dpsiw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_wn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="834" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="11151" bodyend="11494" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="834" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gad44448173ddb0ed6f2c383f7c96c92d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFC_diffusiveFluxJacobian_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int nDOF_trial_element, int *rowptr_ww, int *colind_ww, int *rowptr_nn, int *colind_nn, const int *l2g, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *a_ww, const double *da_ww_dw, const double *da_ww_dn, const double *a_nn, const double *da_nn_dw, const double *da_nn_dn, const double *grad_phi_w, const double *grad_phi_n, const double *dphi_w_w, const double *dphi_w_n, const double *dphi_n_w, const double *dphi_n_n, const double *s_w, const double *psi_w, const double *psi_n, const double *dpsi_n_dsw, const double *dpsi_n_dpsiw, const double *v, const double *grad_v, const double *penalty_w, const double *penalty_n, double *fluxJacobian_ww, double *fluxJacobian_wn, double *fluxJacobian_nw, double *fluxJacobian_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFC_diffusiveFluxJacobian_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_nn</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_nn</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>s_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dsw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dpsiw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_wn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="872" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="11496" bodyend="11836" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="872" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaba7775524cfcc74570e3ddce333e1f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCPP</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *bc_a_ww, const double *bc_a_nn, const double *bc_grad_phi_w, const double *bc_grad_phi_n, const double *bc_psi_w, const double *bc_psi_c, const double *bc_psi_n, const double *a_ww, const double *a_nn, const double *grad_phi_w, const double *grad_phi_n, const double *psi_w, const double *psi_c, const double *psi_n, const double *penalty_w, const double *penalty_n, double *diffusiveFlux_ww, double *diffusiveFlux_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCPP</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_c</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_c</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="914" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="11992" bodyend="12148" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="914" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gab6a8b88e4b2a9855e8afb704b64ff805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCPP_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr_ww, int *colind_ww, int *rowptr_nn, int *colind_nn, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *bc_a_ww, const double *bc_a_nn, const double *bc_grad_phi_w, const double *bc_grad_phi_n, const double *bc_psi_w, const double *bc_psi_c, const double *bc_psi_n, const double *a_ww, const double *a_nn, const double *grad_phi_w, const double *grad_phi_n, const double *psi_w, const double *psi_c, const double *psi_n, const double *penalty_w, const double *penalty_n, double *diffusiveFlux_ww, double *diffusiveFlux_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCPP_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_nn</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_nn</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_c</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_c</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="943" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="12150" bodyend="12305" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="943" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga2646ec0c28478c4b1a482c0df6570557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCPP_diffusiveFluxJacobian</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int nDOF_trial_element, const int *l2g, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *a_ww, const double *da_ww_dw, const double *da_ww_dn, const double *a_nn, const double *da_nn_dw, const double *da_nn_dn, const double *grad_phi_w, const double *grad_phi_n, const double *dphi_w_w, const double *dphi_w_n, const double *dphi_n_w, const double *dphi_n_n, const double *psi_w, const double *psi_c, const double *psi_n, const double *dpsi_n_dpsiw, const double *dpsi_n_dpsic, const double *v, const double *grad_v, const double *penalty_w, const double *penalty_n, double *fluxJacobian_ww, double *fluxJacobian_wn, double *fluxJacobian_nw, double *fluxJacobian_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCPP_diffusiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_c</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dpsiw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dpsic</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_wn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="976" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="12307" bodyend="12650" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="976" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gad24944c6c95d36be15dbbb9ea5eda086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcyFCPP_diffusiveFluxJacobian_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int nDOF_trial_element, int *rowptr_ww, int *colind_ww, int *rowptr_nn, int *colind_nn, const int *l2g, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_uw, const int *isDOFBoundary_un, int fluxBoundaryFlag_uw, int fluxBoundaryFlag_un, const double *n, const double *a_ww, const double *da_ww_dw, const double *da_ww_dn, const double *a_nn, const double *da_nn_dw, const double *da_nn_dn, const double *grad_phi_w, const double *grad_phi_n, const double *dphi_w_w, const double *dphi_w_n, const double *dphi_n_w, const double *dphi_n_n, const double *psi_w, const double *psi_c, const double *psi_n, const double *dpsi_n_dpsiw, const double *dpsi_n_dpsic, const double *v, const double *grad_v, const double *penalty_w, const double *penalty_n, double *fluxJacobian_ww, double *fluxJacobian_wn, double *fluxJacobian_nw, double *fluxJacobian_nn)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcyFCPP_diffusiveFluxJacobian_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_ww</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr_nn</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind_nn</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_uw</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_un</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_uw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fluxBoundaryFlag_un</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_ww</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_ww_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a_nn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da_nn_dn</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_w_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dphi_n_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_c</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dpsiw</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dpsi_n_dpsic</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty_n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_ww</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_wn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1014" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="12652" bodyend="12994" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1014" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga5ca395a9e86c818799c63fa04b1a598a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalFluxShallowWater_1D</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, double h_eps, double tol_u, double g, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *h, double *hu, double *flux_h, double *flux_hu)</argsstring>
        <name>calculateInteriorNumericalFluxShallowWater_1D</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h_eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol_u</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1057" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13365" bodyend="13415" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1057" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gafdff8f2ac5c88898947cfcfe6af210e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalFluxShallowWater_1D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, double h_eps, double tol_u, double g, double *n, double *h_lv, double *hu_lv, double *h_rv, double *hu_rv, double *flux_h, double *flux_hu)</argsstring>
        <name>calculateExteriorNumericalFluxShallowWater_1D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h_eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol_u</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h_lv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu_lv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h_rv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu_rv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1071" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13416" bodyend="13454" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1071" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga476a6ea5467e1c1080cac8d520ad6c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalFluxShallowWater_2D</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, double h_eps, double tol_u, double g, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *h, double *hu, double *hv, double *flux_h, double *flux_hu, double *flux_hv)</argsstring>
        <name>calculateInteriorNumericalFluxShallowWater_2D</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h_eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol_u</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1083" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13456" bodyend="13539" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1083" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga99a175fde0c473f61762a6ca036bb6df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalFluxShallowWater_2D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, double h_eps, double tol_u, double g, double *n, double *h_lq, double *hu_lq, double *hv_lq, double *h_rq, double *hu_rq, double *hv_rq, double *flux_h, double *flux_hu, double *flux_hv)</argsstring>
        <name>calculateExteriorNumericalFluxShallowWater_2D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h_eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol_u</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h_lq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu_lq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hv_lq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h_rq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu_rq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hv_rq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1099" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13541" bodyend="13609" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1099" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga0b32942af9858f825ba2ede17c984653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalFluxShallowWaterHLL_1D</definition>
        <argsstring>(int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, double h_eps, double tol_u, double g, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *h, double *hu, double *flux_h, double *flux_hu)</argsstring>
        <name>calculateInteriorNumericalFluxShallowWaterHLL_1D</name>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h_eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol_u</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1114" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13610" bodyend="13803" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1114" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaab44e869c6f1bc0f7b0dba278bd9e971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalFluxShallowWaterHLL_1D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, double h_eps, double tol_u, double g, double *n, double *h_lv, double *hu_lv, double *h_rv, double *hu_rv, double *flux_h, double *flux_hu)</argsstring>
        <name>calculateExteriorNumericalFluxShallowWaterHLL_1D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h_eps</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tol_u</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h_lv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu_lv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h_rv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>hu_rv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_h</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_hu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1128" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13804" bodyend="13934" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1128" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gac9e3aeb9854a49b6ee3b8de02878eb6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalStressFlux</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, double *n, double *bc_u, double *bc_v, double *bc_w, double *sigma, double *u, double *v, double *w, double *penalty, double *stressFlux_u, double *stressFlux_v, double *stressFlux_w)</argsstring>
        <name>calculateGlobalExteriorNumericalStressFlux</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>stressFlux_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>stressFlux_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>stressFlux_w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1140" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="14530" bodyend="14590" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1140" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gafd8a232f2c1dbbcdfc8cf9d3b28ee3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxStokes3D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, double *n, double *bc_p, double *bc_f_mass, double *p, double *f_mass, double *df_mass_du, double *df_mass_dv, double *df_mass_dw, double *flux_mass, double *flux_umom, double *flux_vmom, double *flux_wmom, double *dflux_mass_du, double *dflux_mass_dv, double *dflux_mass_dw, double *dflux_umom_dp, double *dflux_vmom_dp, double *dflux_wmom_dp, double *velocity)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxStokes3D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_wmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_wmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1161" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7369" bodyend="7627" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1161" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga131667547d3c6136233eeb9ce8621e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxNavierStokes3D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, double *n, double *bc_p, double *bc_f_mass, double *bc_f_umom, double *bc_f_vmom, double *bc_f_wmom, double *p, double *f_mass, double *f_umom, double *f_vmom, double *f_wmom, double *df_mass_du, double *df_mass_dv, double *df_mass_dw, double *df_umom_dp, double *df_umom_du, double *df_umom_dv, double *df_umom_dw, double *df_vmom_dp, double *df_vmom_du, double *df_vmom_dv, double *df_vmom_dw, double *df_wmom_dp, double *df_wmom_du, double *df_wmom_dv, double *df_wmom_dw, double *flux_mass, double *flux_umom, double *flux_vmom, double *flux_wmom, double *dflux_mass_du, double *dflux_mass_dv, double *dflux_mass_dw, double *dflux_umom_dp, double *dflux_umom_du, double *dflux_umom_dv, double *dflux_umom_dw, double *dflux_vmom_dp, double *dflux_vmom_du, double *dflux_vmom_dv, double *dflux_vmom_dw, double *dflux_wmom_dp, double *dflux_wmom_du, double *dflux_wmom_dv, double *dflux_wmom_dw, double *velocity)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxNavierStokes3D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_wmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_wmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_wmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_wmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_wmom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_wmom_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_wmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_wmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_wmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_wmom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_wmom_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1190" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="5735" bodyend="6468" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1190" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga0c85cd9a32a7cc07602bf8bc9efc5c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalDiffusiveFluxJacobian_sd</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateGlobalExteriorNumericalDiffusiveFluxJacobian_sd</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1246" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="3077" bodyend="3180" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1246" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gac31b051033faae48f46b2e3d0e72dfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxRusanov</definition>
        <argsstring>(double safetyFactor, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nQuadraturePoints_element, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *df_element, double *flux, double *dflux)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxRusanov</name>
        <param>
          <type>double</type>
          <declname>safetyFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_element</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1269" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="463" bodyend="587" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1269" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga0c8c287023f5aa633f5b98b41d56843a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxRusanovWithEigenvalueBound</definition>
        <argsstring>(double safetyFactor, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nQuadraturePoints_element, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *u, double *f, double *lambda_bar, double *flux)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxRusanovWithEigenvalueBound</name>
        <param>
          <type>double</type>
          <declname>safetyFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambda_bar</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1289" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="692" bodyend="783" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1289" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga4b6f90d04bf2e1043de2e7905649d332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFluxRusanovWithEigenvalueBound</definition>
        <argsstring>(double safetyFactor, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nQuadraturePoints_element, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *u, double *f, double *lambda_bar_element, double *flux)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFluxRusanovWithEigenvalueBound</name>
        <param>
          <type>double</type>
          <declname>safetyFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lambda_bar_element</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1306" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="784" bodyend="882" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1306" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga95e0994b847df9ac920da1a345b382ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalDiffusiveFlux</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateExteriorNumericalDiffusiveFlux</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
<para>Calculate the diffusive flux at exterior element boundary quadrature points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1324" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="1930" bodyend="2009" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1324" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga26fbcaff87162343146506010d98e485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalDiffusiveFlux</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateGlobalExteriorNumericalDiffusiveFlux</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
<para>Calculate the diffusive flux at exterior element boundary quadrature points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1344" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2093" bodyend="2163" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1344" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga9456ec13f1a93cf46fbe911fafdc6a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalDiffusiveFlux_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateExteriorNumericalDiffusiveFlux_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1362" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2523" bodyend="2579" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1362" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga33a1bcd6e5bb69229e1bd462de0f4376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalDiffusiveFlux_free_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateExteriorNumericalDiffusiveFlux_free_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1379" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2580" bodyend="2637" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1379" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga38d2a8cb0e7c06d4b6d62929d6d3cf82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalDiffusiveFlux_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateGlobalExteriorNumericalDiffusiveFlux_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1398" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2638" bodyend="2687" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1398" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga035a7298fa20367cf26818d7eefb7206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalDiffusiveFlux_free_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *bc_a, double *bc_grad_phi, double *bc_u, double *a, double *grad_phi, double *u, double *penalty, double *flux)</argsstring>
        <name>calculateGlobalExteriorNumericalDiffusiveFlux_free_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1414" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2688" bodyend="2738" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1414" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gab8b439cde6b21fd217b7353b290ff574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalDiffusiveFluxJacobian</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateExteriorNumericalDiffusiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
<para>Update the diffusive flux Jacobian at exterior element boundary quadrature points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1432" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="2743" bodyend="2854" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1432" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga87e6fc66a2e1edfb48a7b91bac7fe1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalDiffusiveFluxJacobian_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateGlobalExteriorNumericalDiffusiveFluxJacobian_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1454" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="3768" bodyend="3845" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1454" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gacab77acf0501b29d43ca628c1ab2cf4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalDiffusiveFluxJacobian_free_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateGlobalExteriorNumericalDiffusiveFluxJacobian_free_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1472" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="3846" bodyend="3923" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1472" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga9989d35af2718cf89538258db2c6a41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFlux</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *flux, double *dflux)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFlux</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1492" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4439" bodyend="4627" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1492" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga59520261d17f847c555acd43def054d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFlux</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *flux, double *dflux)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFlux</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1510" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4632" bodyend="4788" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1510" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga91342430ba035b2701b9e289bfd3b424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFlux_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *flux, double *dflux)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFlux_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1527" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4789" bodyend="4854" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1527" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga50c73edc66772fa48a932d508c8c4ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFlux_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *flux, double *dflux)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFlux_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1545" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4856" bodyend="4914" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1545" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga7ae807f0863c62b67d39a20ab3fc93b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFluxStokesP2D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, double *n, double *bc_f, double *bc_fpu, double *bc_fpv, double *f, double *fpu, double *fpv, double *df_du, double *df_dv, double *dfpu_dp, double *dfpv_dp, double *flux, double *fluxpu, double *fluxpv, double *dflux_du, double *dflux_dv, double *dfluxpu_dp, double *dfluxpv_dp)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFluxStokesP2D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpv_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpv_dp</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1562" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="4918" bodyend="5116" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1562" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gac10bbd33248e3c6f1b0be545312086e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFluxNavierStokes2D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, double *n, double *bc_p, double *bc_f_mass, double *bc_f_umom, double *bc_f_vmom, double *p, double *f_mass, double *f_umom, double *f_vmom, double *df_mass_du, double *df_mass_dv, double *df_umom_du, double *df_umom_dv, double *df_vmom_du, double *df_vmom_dv, double *flux_mass, double *flux_umom, double *flux_vmom, double *dflux_mass_du, double *dflux_mass_dv, double *dflux_umom_dp, double *dflux_umom_du, double *dflux_umom_dv, double *dflux_vmom_dp, double *dflux_vmom_du, double *dflux_vmom_dv)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFluxNavierStokes2D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1590" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="5117" bodyend="5326" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1590" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gafcac814bf62b75bd6bfe18fd9a894180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxNavierStokes2D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, double *n, double *bc_p, double *bc_f_mass, double *bc_f_umom, double *bc_f_vmom, double *p, double *oneByRho, double *f_mass, double *f_umom, double *f_vmom, double *df_mass_du, double *df_mass_dv, double *df_umom_dp, double *df_umom_du, double *df_umom_dv, double *df_vmom_dp, double *df_vmom_du, double *df_vmom_dv, double *flux_mass, double *flux_umom, double *flux_vmom, double *dflux_mass_dp, double *dflux_mass_du, double *dflux_mass_dv, double *dflux_umom_dp, double *dflux_umom_du, double *dflux_umom_dv, double *dflux_vmom_dp, double *dflux_vmom_du, double *dflux_vmom_dv, double *velocity)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxNavierStokes2D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>oneByRho</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_umom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_vmom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1626" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="5328" bodyend="5734" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1626" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga30d0a372f221ceb78869855547ae3a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxStokesP2D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, double *n, double *bc_f, double *bc_fpu, double *bc_fpv, double *f, double *fpu, double *fpv, double *df_du, double *df_dv, double *dfpu_dp, double *dfpv_dp, double *flux, double *fluxpu, double *fluxpv, double *dflux_du, double *dflux_dv, double *dfluxpu_dp, double *dfluxpv_dp)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxStokesP2D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpv_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpv_dp</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1666" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="6472" bodyend="6646" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1666" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gae025c5d639aefc08be09b21e8070deca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFluxStokesP3D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, double *n, double *bc_f, double *bc_fpu, double *bc_fpv, double *bc_fpw, double *f, double *fpu, double *fpv, double *fpw, double *df_du, double *df_dv, double *df_dw, double *dfpu_dp, double *dfpv_dp, double *dfpw_dp, double *flux, double *fluxpu, double *fluxpv, double *fluxpw, double *dflux_du, double *dflux_dv, double *dflux_dw, double *dfluxpu_dp, double *dfluxpv_dp, double *dfluxpw_dp)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFluxStokesP3D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpv_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpw_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpv_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpw_dp</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1693" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="6650" bodyend="6930" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1693" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga71c9c8ceb8ea55b0fd1232ccfe47e498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxStokesP3D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, int *isDOFBoundary_w, double *n, double *bc_f, double *bc_fpu, double *bc_fpv, double *bc_fpw, double *f, double *fpu, double *fpv, double *fpw, double *df_du, double *df_dv, double *df_dw, double *dfpu_dp, double *dfpv_dp, double *dfpw_dp, double *flux, double *fluxpu, double *fluxpv, double *fluxpw, double *dflux_du, double *dflux_dv, double *dflux_dw, double *dfluxpu_dp, double *dfluxpv_dp, double *dfluxpw_dp)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxStokesP3D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fpw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fpw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpv_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfpw_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxpw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_dw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpu_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpv_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxpw_dp</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1729" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="6934" bodyend="7180" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1729" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gabb24509c7127b6c95c144671cce279c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorNumericalAdvectiveFlux_average</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *flux, double *dflux)</argsstring>
        <name>calculateExteriorNumericalAdvectiveFlux_average</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1764" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7633" bodyend="7707" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1764" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gabdd4d01e5d9bfef597ab174356b84773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFlux_average</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_f, double *bc_df, double *u, double *f, double *df, double *flux, double *dflux)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFlux_average</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1782" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7711" bodyend="7761" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1782" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gae5404cb63f57186520f11e8fda18f19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalAdvectiveFluxJacobian</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *inflowFlag, double *dflux_left, double *v, double *fluxJacobian)</argsstring>
        <name>updateExteriorNumericalAdvectiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1799" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7797" bodyend="7840" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1799" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga02e042392e283f444cfe8b655efe72f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalAdvectiveFluxJacobian</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *inflowFlag, double *dflux_left, double *v, double *fluxJacobian)</argsstring>
        <name>updateGlobalExteriorNumericalAdvectiveFluxJacobian</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at global exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1810" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7844" bodyend="7884" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1810" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga9ca62af68bcf8aa161648730e224c91c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalAdvectiveFluxJacobian_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *inflowFlag, double *dflux_left, double *v, double *fluxJacobian)</argsstring>
        <name>updateExteriorNumericalAdvectiveFluxJacobian_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1820" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7885" bodyend="7922" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1820" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga9f85f0e74efb6d9dc2d3ea0a288e8a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalAdvectiveFluxJacobian_free</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *inflowFlag, double *dflux_left, double *v, double *fluxJacobian)</argsstring>
        <name>updateGlobalExteriorNumericalAdvectiveFluxJacobian_free</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1831" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7923" bodyend="7969" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1831" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaf76e00116c7e2f7aeb02ad7380306505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalDiffusiveFlux_LDG_upwind</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *a, double *phi_bc, double *phi, double *V, double *penalty, double *flux)</argsstring>
        <name>calculateGlobalExteriorNumericalDiffusiveFlux_LDG_upwind</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi_bc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
<para>Calculate the advective flux at at global exterior element boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1841" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8655" bodyend="8714" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1841" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gac851f821fa511959cb427739dd12581f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalDiffusiveFlux_LDG_upwind_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *a, double *phi_bc, double *phi, double *V, double *penalty, double *flux)</argsstring>
        <name>calculateGlobalExteriorNumericalDiffusiveFlux_LDG_upwind_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi_bc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1856" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8715" bodyend="8775" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1856" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gadc2cedf812f3500ee6e511e98544bce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalDiffusiveFluxJacobian_LDG_upwind</definition>
        <argsstring>(int *isDiffusiveFluxBoundary, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *dphi, double *V, double *DV, double *DV_eb, double *v, double *penalty, double *fluxJacobian, double *fluxJacobian_eb)</argsstring>
        <name>updateExteriorNumericalDiffusiveFluxJacobian_LDG_upwind</name>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV_eb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_eb</declname>
        </param>
        <briefdescription>
<para>update the flux Jacobian with the advective flux contribution at at exterior element boundaries </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1873" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8779" bodyend="8900" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1873" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga9a89d324277f01d0f96d4a48b12d275d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateExteriorNumericalDiffusiveFluxJacobian_LDG_upwind_sd</definition>
        <argsstring>(int *isDiffusiveFluxBoundary, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *dphi, double *V, double *DV, double *DV_eb, double *v, double *penalty, double *fluxJacobian, double *fluxJacobian_eb)</argsstring>
        <name>updateExteriorNumericalDiffusiveFluxJacobian_LDG_upwind_sd</name>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV_eb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1893" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="8901" bodyend="9021" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1893" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaac063ea253fe047614b3dae881666e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalDiffusiveFluxJacobian_LDG_upwind</definition>
        <argsstring>(int *isDiffusiveFluxBoundary, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *dphi, double *V, double *DV, double *DV_eb, double *v, double *penalty, double *fluxJacobian_exterior, double *fluxJacobian_eb)</argsstring>
        <name>updateGlobalExteriorNumericalDiffusiveFluxJacobian_LDG_upwind</name>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV_eb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_exterior</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_eb</declname>
        </param>
        <briefdescription>
<para>update the flux Jacobian with the advective flux contribution at at exterior element boundaries </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1915" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9025" bodyend="9136" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1915" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga28e695707f1fa0dc2830cebc8ff1cffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalDiffusiveFluxJacobian_LDG_upwind_sd</definition>
        <argsstring>(int *isDiffusiveFluxBoundary, int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *a, double *da, double *dphi, double *V, double *DV, double *DV_eb, double *v, double *penalty, double *fluxJacobian_exterior, double *fluxJacobian_eb)</argsstring>
        <name>updateGlobalExteriorNumericalDiffusiveFluxJacobian_LDG_upwind_sd</name>
        <param>
          <type>int *</type>
          <declname>isDiffusiveFluxBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>DV_eb</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_exterior</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian_eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1935" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9138" bodyend="9248" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1935" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaf94a535915c2737eebc0c6b82085e319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateExteriorLesaintRaviartNumericalFlux</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nSpace, int speedEvalFlag, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_H, double *bc_dH, double *u, double *H, double *dH, double *flux, double *dflux)</argsstring>
        <name>calculateExteriorLesaintRaviartNumericalFlux</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>speedEvalFlag</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_H</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_dH</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>H</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dH</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1957" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9569" bodyend="9674" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1957" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaa6d121ab0b1316737c9de70d86331a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorLesaintRaviartNumericalFlux</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int speedEvalFlag, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *inflowFlag, double *n, double *bc_u, double *bc_H, double *bc_dH, double *u, double *H, double *dH, double *flux, double *dflux)</argsstring>
        <name>calculateGlobalExteriorLesaintRaviartNumericalFlux</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>speedEvalFlag</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inflowFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_H</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_dH</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>H</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dH</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1976" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="9675" bodyend="9772" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1976" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga0469ef88413ee53aa27975c8557ce395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFlux_DarcyFC</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_sw, int *isDOFBoundary_psiw, double *n, double *bc_sw, double *bc_psiw, double *bc_fw, double *bc_dfw_dsw, double *bc_dfw_dpsiw, double *bc_fn, double *bc_dfn_dsw, double *bc_dfn_dpsiw, double *sw, double *psiw, double *fw, double *dfw_dsw, double *dfw_dpsiw, double *fn, double *dfn_dsw, double *dfn_dpsiw, double *fluxw, double *dfluxw_dsw, double *dfluxw_dpsiw, double *fluxn, double *dfluxn_dsw, double *dfluxn_dpsiw)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFlux_DarcyFC</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_sw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_psiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_sw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_psiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_dfw_dsw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_dfw_dpsiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_fn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_dfn_dsw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_dfn_dpsiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>psiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfw_dsw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfw_dpsiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfn_dsw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfn_dpsiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxw_dsw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxw_dpsiw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxn</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxn_dsw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dfluxn_dpsiw</declname>
        </param>
        <briefdescription>
<para>Calculate the advective (gravity) flux at at exterior element boundaries for Darcy FC does not upwind right now. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="1994" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="11842" bodyend="11988" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="1994" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaad67af4b894af6a8b2610e524a7b9ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcySplitPressure</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_u, const double *n, const double *bc_a, const double *bc_grad_phi, const double *bc_psi_w, const double *bc_psi_n, const double *a, const double *grad_phi, const double *psi_w, const double *psi_n, const double *penalty, double *diffusiveFlux)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcySplitPressure</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="2025" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="12997" bodyend="13078" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="2025" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaea8e012acd2e3566944495bf89ff1773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalFluxDarcySplitPressure_sd</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, const int *rowptr, const int *colind, const int *exteriorElementBoundaries, const int *elementBoundaryElements, const int *elementBoundaryLocalElementBoundaries, const int *isDOFBoundary_u, const double *n, const double *bc_a, const double *bc_grad_phi, const double *bc_psi_w, const double *bc_psi_n, const double *a, const double *grad_phi, const double *psi_w, const double *psi_n, const double *penalty, double *diffusiveFlux)</argsstring>
        <name>calculateGlobalExteriorNumericalFluxDarcySplitPressure_sd</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_a</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_grad_phi</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bc_psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_w</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>psi_n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>diffusiveFlux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="2043" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="13079" bodyend="13161" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="2043" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga0139dec9a84e23d66363b7013ba69d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGlobalExteriorNumericalDiffusiveFluxWithUpwindingJacobian_sd</definition>
        <argsstring>(int scale_penalty, double penalty_floor, int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nDOF_trial_element, int nSpace, int *rowptr, int *colind, int *l2g, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary, int *fluxBoundaryFlag, double *n, double *a, double *da, double *grad_phi, double *dphi, double *v, double *grad_v, double *penalty, double *fluxJacobian)</argsstring>
        <name>updateGlobalExteriorNumericalDiffusiveFluxWithUpwindingJacobian_sd</name>
        <param>
          <type>int</type>
          <declname>scale_penalty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>penalty_floor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>rowptr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fluxBoundaryFlag</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dphi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>grad_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>penalty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>fluxJacobian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="2063" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="14945" bodyend="15064" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="2063" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1gaa48e5584a28cd589a73aa46ca6fb9f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateGlobalExteriorNumericalAdvectiveFluxStokes2D</definition>
        <argsstring>(int nExteriorElementBoundaries_global, int nQuadraturePoints_elementBoundary, int nSpace, int *exteriorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, int *isDOFBoundary_p, int *isDOFBoundary_u, int *isDOFBoundary_v, double *n, double *bc_p, double *bc_f_mass, double *p, double *f_mass, double *df_mass_du, double *df_mass_dv, double *flux_mass, double *flux_umom, double *flux_vmom, double *dflux_mass_du, double *dflux_mass_dv, double *dflux_umom_dp, double *dflux_vmom_dp, double *velocity)</argsstring>
        <name>calculateGlobalExteriorNumericalAdvectiveFluxStokes2D</name>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>isDOFBoundary_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bc_f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_umom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux_vmom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_du</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_mass_dv</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_umom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_vmom_dp</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Apply basic pressure boundary penalty term for Stokes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="2086" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="7186" bodyend="7367" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="2086" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__numerical_flux_1ga85e7329ef304bd54415deccb4051f73d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateInteriorNumericalAdvectiveFluxRusanov</definition>
        <argsstring>(double safetyFactor, int nInteriorElementBoundaries_global, int nElementBoundaries_element, int nQuadraturePoints_elementBoundary, int nQuadraturePoints_element, int nSpace, int *interiorElementBoundaries, int *elementBoundaryElements, int *elementBoundaryLocalElementBoundaries, double *n, double *u, double *f, double *df, double *df_element, double *flux, double *dflux_left, double *dflux_right)</argsstring>
        <name>calculateInteriorNumericalAdvectiveFluxRusanov</name>
        <param>
          <type>double</type>
          <declname>safetyFactor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nInteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElementBoundaries_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundary</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_element</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSpace</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>interiorElementBoundaries</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElements</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundaries</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>df_element</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_left</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dflux_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" line="2110" column="13" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.c" bodystart="179" bodyend="325" declfile="/home/tridelat/PROTEUS/proteus2/proteus/numericalFlux.h" declline="2110" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>c implementation of dg numerical flux approximations </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>

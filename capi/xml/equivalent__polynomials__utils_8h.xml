<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="equivalent__polynomials__utils_8h" kind="file" language="C++">
    <compoundname>equivalent_polynomials_utils.h</compoundname>
    <includedby refid="equivalent__polynomials_8h" local="yes">equivalent_polynomials.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>equivalent_polynomials.h</label>
        <link refid="equivalent__polynomials_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>RANS2P2D.h</label>
        <link refid="_r_a_n_s2_p2_d_8h"/>
      </node>
      <node id="7">
        <label>RANS3PF2D.h</label>
        <link refid="_r_a_n_s3_p_f2_d_8h"/>
      </node>
      <node id="4">
        <label>RANS2P.h</label>
        <link refid="_r_a_n_s2_p_8h"/>
      </node>
      <node id="1">
        <label>equivalent_polynomials_utils.h</label>
        <link refid="equivalent__polynomials__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>RANS3PF.h</label>
        <link refid="_r_a_n_s3_p_f_8h"/>
      </node>
      <node id="8">
        <label>RDLS.h</label>
        <link refid="_r_d_l_s_8h"/>
      </node>
      <node id="3">
        <label>MCorr.h</label>
        <link refid="_m_corr_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceequivalent__polynomials">equivalent_polynomials</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>EQUIVALENT_POYNOMIALS_UTILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EQUIVALENT_POYNOMIALS_UTILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceequivalent__polynomials" kindref="compound">equivalent_polynomials</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpace&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1aac129889cc17bddb81c3f4658df17cff" kindref="member">_calculate_normal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>phys_nodes_cut,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>level_set_normal);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="9" refid="namespaceequivalent__polynomials_1a9c5dc3aafbd5369a96ab4b77bd36ee30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a9c5dc3aafbd5369a96ab4b77bd36ee30" kindref="member">_calculate_normal&lt;1&gt;</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>phys_nodes_cut,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>level_set_normal)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpace(1);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>level_set_normal[0]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="16" refid="namespaceequivalent__polynomials_1aca72bce4bbe55d2995559eab1b685346" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1aca72bce4bbe55d2995559eab1b685346" kindref="member">_calculate_normal&lt;2&gt;</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>phys_nodes_cut,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>level_set_normal)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpace(2);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>level_set_tangent[2];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I=0;<sp/>I<sp/>&lt;<sp/>nSpace;<sp/>I++)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_tangent[I]<sp/>=<sp/>phys_nodes_cut[3+I]<sp/>-<sp/>phys_nodes_cut[I];</highlight><highlight class="comment">//nodes<sp/>always<sp/>3D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>level_set_normal[0]<sp/>=<sp/><sp/><sp/>level_set_tangent[1];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>level_set_normal[1]<sp/>=<sp/>-<sp/>level_set_tangent[0];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm<sp/>=<sp/>std::sqrt(level_set_normal[0]*level_set_normal[0]<sp/>+</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_normal[1]*level_set_normal[1]);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I=0;<sp/>I<sp/>&lt;<sp/>nSpace;<sp/>I++)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_normal[I]<sp/>/=<sp/><sp/>norm;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I=0;<sp/>I<sp/>&lt;<sp/>nSpace;<sp/>I++)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_normal[I]<sp/>=0.0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="37" refid="namespaceequivalent__polynomials_1a444cd19232f627b0fd604d12dc0d2786" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a444cd19232f627b0fd604d12dc0d2786" kindref="member">_calculate_normal&lt;3&gt;</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>phys_nodes_cut,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>level_set_normal)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpace(3);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>level_set_tangent_a[3],<sp/>level_set_tangent_b[3];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I=0;<sp/>I<sp/>&lt;<sp/>nSpace;<sp/>I++)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_tangent_a[I]<sp/>=<sp/>phys_nodes_cut[3+I]<sp/>-<sp/>phys_nodes_cut[I];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_tangent_b[I]<sp/>=<sp/>phys_nodes_cut[6+I]<sp/>-<sp/>phys_nodes_cut[I];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>level_set_normal[0]<sp/>=<sp/><sp/><sp/>level_set_tangent_a[1]*level_set_tangent_b[2]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>level_set_tangent_a[2]*level_set_tangent_b[1];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>level_set_normal[1]<sp/>=<sp/>-<sp/>level_set_tangent_a[0]*level_set_tangent_b[2]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>level_set_tangent_a[2]*level_set_tangent_b[0];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>level_set_normal[2]<sp/>=<sp/><sp/><sp/>level_set_tangent_a[0]*level_set_tangent_b[1]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>level_set_tangent_a[1]*level_set_tangent_b[0];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm<sp/>=<sp/>std::sqrt(level_set_normal[0]*level_set_normal[0]<sp/>+</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_normal[1]*level_set_normal[1]<sp/>+</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_normal[2]*level_set_normal[2]);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I=0;<sp/>I<sp/>&lt;<sp/>nSpace;<sp/>I++)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_normal[I]<sp/>/=<sp/><sp/>norm;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I=0;<sp/>I<sp/>&lt;<sp/>nSpace;<sp/>I++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_set_normal[I]<sp/>=0.0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nP&gt;</highlight></codeline>
<codeline lineno="64" refid="namespaceequivalent__polynomials_1a4435814b30d410a29cb1e7a6e705b8b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a4435814b30d410a29cb1e7a6e705b8b9" kindref="member">_calculate_polynomial_1D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_H,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_ImH,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_D,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_H,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_ImH,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_D)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>_H<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>_ImH<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>_D<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDOF<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_pow_i=1.0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>nP+1;<sp/>i++,<sp/>iDOF++)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>=x_pow_i;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_H<sp/><sp/><sp/>+=<sp/>C_H[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ImH<sp/>+=<sp/>C_ImH[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_D<sp/><sp/><sp/>+=<sp/>C_D[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_pow_i<sp/>*=<sp/>xi[0];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nP&gt;</highlight></codeline>
<codeline lineno="82" refid="namespaceequivalent__polynomials_1a0a180ca78159e58074f32352fec78514" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a0a180ca78159e58074f32352fec78514" kindref="member">_calculate_polynomial_2D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_H,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_ImH,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_D,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_H,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_ImH,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_D)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>_H<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>_ImH<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>_D<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDOF<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_pow_i=1.0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>nP+1;<sp/>i++)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_pow_j=1.0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/>nP+1-i;<sp/>j++,<sp/>iDOF++)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>=x_pow_i*y_pow_j;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_H<sp/><sp/><sp/>+=<sp/>C_H[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ImH<sp/>+=<sp/>C_ImH[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_D<sp/><sp/><sp/>+=<sp/>C_D[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_pow_j<sp/>*=<sp/>xi[1];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_pow_i<sp/>*=<sp/>xi[0];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nP&gt;</highlight></codeline>
<codeline lineno="105" refid="namespaceequivalent__polynomials_1a9dfb54c74fa05339cf11f3c013974883" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a9dfb54c74fa05339cf11f3c013974883" kindref="member">_calculate_polynomial_3D</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xi,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_H,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_ImH,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>C_D,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_H,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_ImH,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>_D)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>_H<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>_ImH<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>_D<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iDOF<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_pow_i=1.0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>nP+1;<sp/>i++)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_pow_j=1.0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/>nP+1-i;<sp/>j++)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_pow_i_y_pow_j=x_pow_i*y_pow_j,<sp/>z_pow_k=1.0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k<sp/>&lt;<sp/>nP+1-i-j;<sp/>k++,<sp/>iDOF++)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>=x_pow_i_y_pow_j*z_pow_k;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_H<sp/><sp/><sp/>+=<sp/>C_H[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ImH<sp/>+=<sp/>C_ImH[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_D<sp/><sp/><sp/>+=<sp/>C_D[iDOF]*<ref refid="_headers_8h_1acf2aa06bc881a993584c334b2b7c6e03" kindref="member">psi</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_pow_k<sp/>*=<sp/>xi[2];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_pow_j<sp/>*=<sp/>xi[1];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_pow_i<sp/>*=<sp/>xi[0];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1aa9667f8d96a139bc9c49c71354fd9807" kindref="member">XX</ref>(0),<ref refid="namespaceequivalent__polynomials_1a4f3f83682900019b1ea30dbe32f04096" kindref="member">XY</ref>(1),<ref refid="namespaceequivalent__polynomials_1a0050579f6172dc53308a1d7e870f49cb" kindref="member">XZ</ref>(2),<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>(3),<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>(4),<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>(5),<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>(6),<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>(7),<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>(8);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpace&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a77afc2537dcd45118cf32d871719ad99" kindref="member">det</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="138" refid="namespaceequivalent__polynomials_1a8317d777c216cd662d4389421e86bc86" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a8317d777c216cd662d4389421e86bc86" kindref="member">det&lt;1&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A[0];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="144" refid="namespaceequivalent__polynomials_1a94b9bdc335720c57f61772f3ef33f6d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a94b9bdc335720c57f61772f3ef33f6d6" kindref="member">det&lt;2&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A[0]*A[3]<sp/>-<sp/>A[1]*A[2];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="150" refid="namespaceequivalent__polynomials_1a6b03d737410580f568bea11d39d5f8e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a6b03d737410580f568bea11d39d5f8e8" kindref="member">det&lt;3&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>A[<ref refid="namespaceequivalent__polynomials_1aa9667f8d96a139bc9c49c71354fd9807" kindref="member">XX</ref>]*(A[<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>])<sp/>-</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A[<ref refid="namespaceequivalent__polynomials_1a4f3f83682900019b1ea30dbe32f04096" kindref="member">XY</ref>]*(A[<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>])<sp/>+</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A[<ref refid="namespaceequivalent__polynomials_1a0050579f6172dc53308a1d7e870f49cb" kindref="member">XZ</ref>]*(A[<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpace&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a17233bbcee21881487b1da0217c4fdd9" kindref="member">inv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Ainv);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="161" refid="namespaceequivalent__polynomials_1a274f4f091991dc6f3d9ebd7c9a5a8524" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a274f4f091991dc6f3d9ebd7c9a5a8524" kindref="member">inv&lt;1&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Ainv)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[0]<sp/>=<sp/>1.0/A[0];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="167" refid="namespaceequivalent__polynomials_1abe89a58d9efc05cd9b627066dac3e367" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1abe89a58d9efc05cd9b627066dac3e367" kindref="member">inv&lt;2&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Ainv)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oneOverDet<sp/>=<sp/>1.0/<ref refid="namespaceequivalent__polynomials_1a94b9bdc335720c57f61772f3ef33f6d6" kindref="member">det&lt;2&gt;</ref>(A);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[0]<sp/>=<sp/>oneOverDet*A[3];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[1]<sp/>=<sp/>-oneOverDet*A[1];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[2]<sp/>=<sp/>-oneOverDet*A[2];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[3]<sp/>=<sp/>oneOverDet*A[0];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="177" refid="namespaceequivalent__polynomials_1a6e088125898f0bc1d56b70dcaec8de5b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceequivalent__polynomials_1a6e088125898f0bc1d56b70dcaec8de5b" kindref="member">inv&lt;3&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Ainv)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oneOverDet<sp/>=<sp/>1.0/<ref refid="namespaceequivalent__polynomials_1a6b03d737410580f568bea11d39d5f8e8" kindref="member">det&lt;3&gt;</ref>(A);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1aa9667f8d96a139bc9c49c71354fd9807" kindref="member">XX</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>]);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>]);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>]);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1a4f3f83682900019b1ea30dbe32f04096" kindref="member">XY</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a0050579f6172dc53308a1d7e870f49cb" kindref="member">XZ</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a4f3f83682900019b1ea30dbe32f04096" kindref="member">XY</ref>]);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1aa9667f8d96a139bc9c49c71354fd9807" kindref="member">XX</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a0050579f6172dc53308a1d7e870f49cb" kindref="member">XZ</ref>]);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1af63ba62549e7eda39fcdeeedad1d9b34" kindref="member">ZX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a4f3f83682900019b1ea30dbe32f04096" kindref="member">XY</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1a5d71cdba9f3ad56b8b593501eb4f93da" kindref="member">ZY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1aa9667f8d96a139bc9c49c71354fd9807" kindref="member">XX</ref>]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1a0050579f6172dc53308a1d7e870f49cb" kindref="member">XZ</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1a4f3f83682900019b1ea30dbe32f04096" kindref="member">XY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1a0050579f6172dc53308a1d7e870f49cb" kindref="member">XZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>]);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1a0050579f6172dc53308a1d7e870f49cb" kindref="member">XZ</ref>]*A[<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1aa9667f8d96a139bc9c49c71354fd9807" kindref="member">XX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1ac5ae44e4abfd29c6a8df1a167b63f412" kindref="member">YZ</ref>]);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Ainv[<ref refid="namespaceequivalent__polynomials_1a8b669ff3b96038723835272644b5a1e2" kindref="member">ZZ</ref>]<sp/>=<sp/>oneOverDet*(A[<ref refid="namespaceequivalent__polynomials_1aa9667f8d96a139bc9c49c71354fd9807" kindref="member">XX</ref>]*A[<ref refid="namespaceequivalent__polynomials_1a66658cd883b58f139d511307d2ec0e72" kindref="member">YY</ref>]<sp/>-<sp/>A[<ref refid="namespaceequivalent__polynomials_1a4f3f83682900019b1ea30dbe32f04096" kindref="member">XY</ref>]*A[<ref refid="namespaceequivalent__polynomials_1ae12febd75efb9d26932f52a301314d7d" kindref="member">YX</ref>]);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight><highlight class="comment">//equivalent_polynomials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/equivalent_polynomials_utils.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="analytical_solutions_8c" kind="file" language="C++">
    <compoundname>analyticalSolutions.c</compoundname>
    <includes refid="analytical_solutions_8h" local="yes">analyticalSolutions.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>analyticalSolutions.c</label>
        <link refid="analytical_solutions_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>analyticalSolutions.h</label>
        <link refid="analytical_solutions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__analytical_solutions_1gacbb37fa8c089b28b5218683ae436b6c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PlaneCouetteFlow_u</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>PlaneCouetteFlow_u</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Couette Flow between two parallel plates. One moving relative to the other with constant seperation (width). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>velocity of moving plate in the x-dir, <formula id="0">$ vx $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>width between plates, <formula id="1">$ h $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-axis offset, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-axis offset, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>z-axis offset, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
x-momentum equation <formula id="5">\[ \nabla^2 u_x = 0 \]</formula> <formula id="6">\[ u(y) = \frac{vx}{h} * y\]</formula> <formula id="7">\[ u(0) = 0 \]</formula> <formula id="8">\[ u(h) = vx \]</formula></para>
<para>Axis of origin: at bottom plate<linebreak/>
</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="36" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="36" bodyend="67" declfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.h" declline="18" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gab484c73a106361cb6632ecbe3faecac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diffusionSin1D</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>diffusionSin1D</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Sinusoidal 1D diffusion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>angular frequency, <formula id="9">$ \omega_x $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="10">\[ -\Delta u = f \]</formula> <formula id="11">\[ f = -(2 \pi \omega_x)^2 \sin(2 \pi \omega_x x) \]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="84" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="84" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga1b38a52b042805d73ce6ef2f874847d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diffusionSin2D</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>diffusionSin2D</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Sinusoidal 2D diffusion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-component angular frequency, <formula id="9">$ \omega_x $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-component angular frequency, <formula id="12">$ \omega_y $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="10">\[ -\Delta u = f \]</formula> <formula id="13">\[ f = -(2\pi\omega_x)^2\sin(2 \pi \omega_x x) -(2 \pi \omega_y)^2\sin(2 \pi \omega_y y)\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="111" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="111" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga3c6987c2dde325822225b36cb656da85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diffusionSin3D</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>diffusionSin3D</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Sinusoidal 3D diffusion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-component angular frequency, <formula id="9">$ \omega_x $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-component angular frequency, <formula id="12">$ \omega_y $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>z-component angular frequency, <formula id="14">$ \omega_z $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="10">\[ -\Delta u = f \]</formula> <formula id="15">\[ f = -(2\pi\omega_x)^2\sin(2\pi\omega_x x) -(2\pi\omega_y)^2\sin(2\pi\omega_y y)-(2\pi\omega_z)^2sin(2 \pi \omega_z z)\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="141" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="141" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaa27bf92c0e02031ac21a621a9d00c149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diffusionSin1D_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u, double *r)</argsstring>
        <name>diffusionSin1D_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Sinusoidal 1D diffusion (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-component angular frequency, <formula id="9">$ \omega_x $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="16">\[ -\Delta u = -r \]</formula> <formula id="17">\[ r = (2 \pi \omega_x)^2 \sin(2 \pi \omega_x x) \]</formula> <linebreak/>
</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="172" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="172" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaa17304f96b3abd685522b6cdf25bb128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diffusionSin2D_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u, double *r)</argsstring>
        <name>diffusionSin2D_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Sinusoidal 2D diffusion (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-component angular frequency, <formula id="18">$ omega_x $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-component angular frequency, <formula id="19">$ omega_y $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="20">\[-\Delta u = -r \]</formula> <formula id="21">\[r= (2\pi\omega_x)^2\sin(2 \pi \omega_x x)+(2 \pi \omega_y)^2\sin(2 \pi \omega_y y)\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="200" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="200" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga6383b3aa517f7583783f5f73b372ff0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int diffusionSin3D_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u, double *r)</argsstring>
        <name>diffusionSin3D_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Sinusoidal 3D diffusion (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-component angular frequency, <formula id="18">$ omega_x $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-component angular frequency, <formula id="19">$ omega_y $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>z-component angular frequency, <formula id="22">$ omega_z $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="20">\[-\Delta u = -r \]</formula> <formula id="23">\[r=(2\pi\omega_x)^2\sin(2\pi\omega_x x) +(2\pi\omega_y)^2\sin(2\pi\omega_y y)+(2\pi\omega_z)^2sin(2 \pi \omega_z z)\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="231" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="231" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga8400a5a823e80620da7f2e071659561c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearAD_DiracIC</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u)</argsstring>
        <name>LinearAD_DiracIC</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Linear Advective Diffusion Dirac Initial Condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of</para>
<para><formula id="30">\[ u_t + \nabla \cdot (b u - a \nabla u) = 0\]</formula></para>
<para>on an infinite domain with dirac initial data</para>
<para><formula id="31">\[u_0 = \int u_0 \delta(x - x_0)\]</formula></para>
<para>also returns advective, diffusive, and total flux</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="273" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="273" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gae9af8e2affdb06660ab67e1e6f438980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearAD_DiracIC_advectiveVelocity</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *f)</argsstring>
        <name>LinearAD_DiracIC_advectiveVelocity</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Advective Diffusion Dirac Initial Condition(advective velocity) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array, vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of</para>
<para><formula id="30">\[ u_t + \nabla \cdot (b u - a \nabla u) = 0\]</formula></para>
<para>on an infinite domain with dirac initial data</para>
<para><formula id="31">\[u_0 = \int u_0 \delta(x - x_0)\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="337" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="337" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga08bde89e03ea8c28bdbe10e878b2e89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearAD_DiracIC_diffusiveVelocity</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *f)</argsstring>
        <name>LinearAD_DiracIC_diffusiveVelocity</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Advective Diffusion Dirac Initial Condition(diffusive velocity) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array, vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of</para>
<para><formula id="30">\[ u_t + \nabla \cdot (b u - a \nabla u) = 0\]</formula></para>
<para>on an infinite domain with dirac initial data</para>
<para><formula id="31">\[u_0 = \int u_0 \delta(x - x_0)\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="381" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="381" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga2bf9013d22891c618d00964e512d78ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearAD_DiracIC_du</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *f)</argsstring>
        <name>LinearAD_DiracIC_du</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Advective Diffusion Dirac Initial Condition (du) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array, vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of</para>
<para><formula id="30">\[ u_t + \nabla \cdot (b u - a \nabla u) = 0\]</formula></para>
<para>on an infinite domain with dirac initial data</para>
<para><formula id="31">\[u_0 = \int u_0 \delta(x - x_0)\]</formula></para>
<para>also returns advective, diffusive, and total flux</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="423" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="423" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gab0132ce276c7d9ec0da6288fc9e27973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearAD_DiracIC_totalVelocity</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *f)</argsstring>
        <name>LinearAD_DiracIC_totalVelocity</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Advective Diffusion Dirac Initial Condition(total velocity) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array, vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of</para>
<para><formula id="30">\[ u_t + \nabla \cdot (b u - a \nabla u) = 0\]</formula></para>
<para>on an infinite domain with dirac initial data</para>
<para><formula id="31">\[u_0 = \int u_0 \delta(x - x_0)\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="471" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="471" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaa3f08cf4fd7c6aa74dcc25d34127b2d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearAD_SteadyState</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u)</argsstring>
        <name>LinearAD_SteadyState</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Linear Advection-Diffusion Steady State. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="32">$ b $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="33">\[(bu - au_x)_x = 0\]</formula> <formula id="34">\[ u(0) = 1\]</formula> <formula id="35">\[ u(1) = 0\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="508" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="508" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gae06e06a09b9ad151004d3e438337fcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Decay_DiracIC</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u)</argsstring>
        <name>LinearADR_Decay_DiracIC</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Decay Dirac Initial Condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[10]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of <verbatim>\f[ u_t + \nabla \cdot(bu - a \nabla u) + cu= 0 \f]

on an infinite domain with Dirac initial data.
Also returns the fluxes (by inheritance).
</verbatim></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="566" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="566" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga80051bda689b13a352183a668d0401f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Decay_DiracIC_dr</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u, double *dr)</argsstring>
        <name>LinearADR_Decay_DiracIC_dr</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dr</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Decay Dirac Initial Condition (dr) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[10]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dr</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of <verbatim>\f[ u_t + \nabla \cdot(bu - a \nabla u) + cu= 0 \f]

on an infinite domain with Dirac initial data.
Also returns the fluxes (by inheritance).
</verbatim></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="613" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="613" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaa978bb8023e2279d21d97ac0e57593bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Decay_DiracIC_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u, double *r)</argsstring>
        <name>LinearADR_Decay_DiracIC_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Decay Dirac Initial Condition (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[10]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The exact solution of <verbatim>\f[ u_t + \nabla \cdot(bu - a \nabla u) + cu= 0 \f]

on an infinite domain with Dirac initial data.
Also returns the fluxes (by inheritance).
</verbatim></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="652" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="652" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga2ba8debc8c33446da363d88503a1ac34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Sine</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>LinearADR_Sine</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Sine function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="37">$ \omega[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="38">$ \omega_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An exact solution and source term for</para>
<para><formula id="39">\[ \nabla \cdot (\vec b u - \ddot a \nabla u) + c u + d = 0 \]</formula></para>
<para>where</para>
<para><formula id="40">\[ u(x) = sin(\vec \omega \cdot \vec x + \omega_0) = sin(Ax - b)\]</formula> <formula id="41">\[r(u,x) = - ((\ddot a \vec \omega) \cdot \vec \omega) u - (\vec b \cdot \vec \omega) cos(Ax - b)\]</formula> <formula id="42">\[ = c u + D cos(Ax - b) \]</formula> <formula id="43">\[ = cu + d \]</formula></para>
<para>also returns the advective, diffusive, and total velocity at a point.</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="691" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="691" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gad870808ac02dfa561b11f39da536762a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Sine_advectiveVelocity</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *f)</argsstring>
        <name>LinearADR_Sine_advectiveVelocity</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Sine function (advective velocity) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="37">$ \omega[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="38">$ \omega_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4:6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:15]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="44">$ a[0:3,0:3] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[16]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array (vector)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An exact solution and source term for</para>
<para><formula id="39">\[ \nabla \cdot (\vec b u - \ddot a \nabla u) + c u + d = 0 \]</formula></para>
<para>where</para>
<para><formula id="40">\[ u(x) = sin(\vec \omega \cdot \vec x + \omega_0) = sin(Ax - b)\]</formula> <formula id="41">\[r(u,x) = - ((\ddot a \vec \omega) \cdot \vec \omega) u - (\vec b \cdot \vec \omega) cos(Ax - b)\]</formula> <formula id="42">\[ = c u + D cos(Ax - b) \]</formula> <formula id="43">\[ = cu + d \]</formula></para>
<para>returns the advective velocity at a point.</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="749" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="749" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga42d6d124e2b7c4e4f4448ffedaf7768e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Sine_diffusiveVelocity</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *f)</argsstring>
        <name>LinearADR_Sine_diffusiveVelocity</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Sine function (diffusive velocity) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="37">$ \omega[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="38">$ \omega_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4:6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:15]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="44">$ a[0:3,0:3] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[16]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array (vector)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An exact solution and source term for</para>
<para><formula id="39">\[ \nabla \cdot (\vec b u - \ddot a \nabla u) + c u + d = 0 \]</formula></para>
<para>where</para>
<para><formula id="40">\[ u(x) = sin(\vec \omega \cdot \vec x + \omega_0) = sin(Ax - b)\]</formula> <formula id="41">\[r(u,x) = - ((\ddot a \vec \omega) \cdot \vec \omega) u - (\vec b \cdot \vec \omega) cos(Ax - b)\]</formula> <formula id="42">\[ = c u + D cos(Ax - b) \]</formula> <formula id="43">\[ = cu + d \]</formula></para>
<para>returns the diffusive velocity at a point.</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="802" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="802" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga278c31c293ef7480b10494c33737972a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Sine_dr</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u, double *dr)</argsstring>
        <name>LinearADR_Sine_dr</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dr</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Sine function (dr) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="37">$ \omega[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="38">$ \omega_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4:6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:15]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="44">$ a[0:3,0:3] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[16]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dr</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An exact solution and source term for</para>
<para><formula id="39">\[ \nabla \cdot (\vec b u - \ddot a \nabla u) + c u + d = 0 \]</formula></para>
<para>where</para>
<para><formula id="45">\[ u(x) = sin[\vec \omega \cdot \vec x + \omega_0) ] = sin(Ax - b) \f \f[r(u,x) = - ((\ddot a \vec \omega) \cdot \vec \omega) u - (\vec b \cdot \vec \omega) cos(Ax - b)\]</formula> <formula id="42">\[ = c u + D cos(Ax - b) \]</formula> <formula id="43">\[ = cu + d \]</formula></para>
<para>also returns the advective, diffusive, and total velocity at a point.</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="851" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="851" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga23eee10efbdf6cc68c3fb689e7627154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Sine_du</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *f)</argsstring>
        <name>LinearADR_Sine_du</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Sine function (du) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="37">$ \omega[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="38">$ \omega_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array (vector)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An exact solution and source term for</para>
<para><formula id="39">\[ \nabla \cdot (\vec b u - \ddot a \nabla u) + c u + d = 0 \]</formula></para>
<para>where</para>
<para><formula id="40">\[ u(x) = sin(\vec \omega \cdot \vec x + \omega_0) = sin(Ax - b)\]</formula> <formula id="41">\[r(u,x) = - ((\ddot a \vec \omega) \cdot \vec \omega) u - (\vec b \cdot \vec \omega) cos(Ax - b)\]</formula> <formula id="42">\[ = c u + D cos(Ax - b) \]</formula> <formula id="43">\[ = cu + d \]</formula></para>
<para>also returns the advective, diffusive, and total velocity at a point.</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="890" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="890" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaf2882702e4addac01e556348fe0f78ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Sine_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u, double *r)</argsstring>
        <name>LinearADR_Sine_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Sine function (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="37">$ \omega[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="38">$ \omega_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4:6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:15]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="44">$ a[0:3,0:3] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[16]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An exact solution and source term for</para>
<para><formula id="39">\[ \nabla \cdot (\vec b u - \ddot a \nabla u) + c u + d = 0 \]</formula></para>
<para>where</para>
<para><formula id="40">\[ u(x) = sin(\vec \omega \cdot \vec x + \omega_0) = sin(Ax - b)\]</formula> <formula id="41">\[r(u,x) = - ((\ddot a \vec \omega) \cdot \vec \omega) u - (\vec b \cdot \vec \omega) cos(Ax - b)\]</formula> <formula id="42">\[ = c u + D cos(Ax - b) \]</formula> <formula id="43">\[ = cu + d \]</formula></para>
<para>also returns the advective, diffusive, and total velocity at a point.</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="938" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="938" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga0b796cae20f7733dafd782b9cc2c79a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LinearADR_Sine_totalVelocity</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *f)</argsstring>
        <name>LinearADR_Sine_totalVelocity</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Linear Avection Diffusion Reaction Sine function (total velocity) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="37">$ \omega[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="38">$ \omega_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4:6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:15]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="44">$ a[0:3,0:3] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[16]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array (vector)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An exact solution and source term for</para>
<para><formula id="39">\[ \nabla \cdot (\vec b u - \ddot a \nabla u) + c u + d = 0 \]</formula></para>
<para>where</para>
<para><formula id="40">\[ u(x) = sin(\vec \omega \cdot \vec x + \omega_0) = sin(Ax - b)\]</formula> <formula id="41">\[r(u,x) = - ((\ddot a \vec \omega) \cdot \vec \omega) u - (\vec b \cdot \vec \omega) cos(Ax - b)\]</formula> <formula id="42">\[ = c u + D cos(Ax - b) \]</formula> <formula id="43">\[ = cu + d \]</formula></para>
<para>returns the total velocity at a point.</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="997" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="997" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga1a762a7a4c98ddf4ae6785c522604eab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NonlinearAD_SteadyState</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u)</argsstring>
        <name>NonlinearAD_SteadyState</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Nonlinear Advection-Diffusion Steady State. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="46">$ q $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="47">$ r $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="32">$ b $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="48">\[(bu^q - a(u^r)_x)_x = 0\]</formula> <formula id="34">\[ u(0) = 1\]</formula> <formula id="35">\[ u(1) = 0\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1036" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1036" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga25b05765337d0a0a8a2d3030f50de065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NonlinearADR_Decay_DiracIC</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u)</argsstring>
        <name>NonlinearADR_Decay_DiracIC</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Non Linear Avection Diffusion Reaction Decay Dirac Initial Condition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[10]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[11]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="49">$ d $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dr</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The approximate analytical solution of <verbatim>\f[ u_t + \nabla \cdot(bu - a \nabla u) + cu^d= 0 \f]

on an infinite domain with Dirac initial data.
Also returns the fluxes (by inheritance).
</verbatim></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1164" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1164" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gac024a80be0164d41344ffb14734ff7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NonlinearADR_Decay_DiracIC_dr</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u, double *dr)</argsstring>
        <name>NonlinearADR_Decay_DiracIC_dr</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dr</declname>
        </param>
        <briefdescription>
<para>Non Linear Avection Diffusion Reaction Decay Dirac Initial Condition (dr) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[10]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[11]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="49">$ d $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dr</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The approximate analytical solution of <verbatim>\f[ u_t + \nabla \cdot(bu - a \nabla u) + cu^d= 0 \f]

on an infinite domain with Dirac initial data.
Also returns the fluxes (by inheritance).
</verbatim></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1216" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1216" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gacf4734cee6510fb40f6038e864c26f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NonlinearADR_Decay_DiracIC_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u, double *r)</argsstring>
        <name>NonlinearADR_Decay_DiracIC_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Non Linear Avection Diffusion Reaction Decay Dirac Initial Condition (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0:2]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="24">$ b[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="25">$ n $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="27">$ tStart $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="28">$ u_0 $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7:9]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="29">$ x_0[0:2] $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[10]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="36">$ c $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[11]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="49">$ d $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The approximate analytical solution of <verbatim>\f[ u_t + \nabla \cdot(bu - a \nabla u) + cu^d= 0 \f]

on an infinite domain with Dirac initial data.
Also returns the fluxes (by inheritance).
</verbatim></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1257" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1257" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga13ce042045a861bce7a66c85b00d55bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NonlinearDAE</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double T, double *x, double *u)</argsstring>
        <name>NonlinearDAE</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>T</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Nonlinear Differential-algebraic equations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="50">$ p $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="51">\[u_t = - a*max(u,0)^p\]</formula> <formula id="52">\[u(0) = 1\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1287" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1287" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga1105d43771fb984ad11d749fdfbd6230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NonlinearDAE_f</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *f)</argsstring>
        <name>NonlinearDAE_f</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Nonlinear Differential-algebraic equations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="26">$ a $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="50">$ p $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>output array, vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="51">\[u_t = - a*max(u,0)^p\]</formula> <formula id="52">\[u(0) = 1\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1330" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1330" bodyend="1350"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga0e9ee485059c83d19aa4fe36c19a27a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PlanePoiseuilleFlow_u</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>PlanePoiseuilleFlow_u</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Poiseuille Flow between two parallel fixed plates with constant seperation (width). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>width between the plates, <formula id="1">$ h $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>viscosity of fluid, <formula id="53">$ \mu $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>the pressure gradient, <formula id="54">$ \nabla p $</formula> (neg) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>the rate of flow per unit width, <formula id="46">$ q $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-axis offset, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-axis offset, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para>z-axis offset, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
x-momentum equation <formula id="55">\[ (\nabla p + \mu \nabla^2 u)_x = 0 \]</formula> <formula id="56">\[ u(y) = 4 u_{max} y (\frac{h-y}{h^2}) \]</formula> <formula id="57">\[ u(0) = u(h) = 0 \]</formula> <formula id="58">\[ u(h/2) = u_{max} \]</formula> <formula id="59">\[u_{max} = \frac{-\nabla p}{8 \mu} h^2 = \frac{3}{2} \frac{q}{h} \]</formula></para>
<para><formula id="60">$ u_{max} $</formula> = maximum velocity at the centerline<linebreak/>
Axis of origin: at bottom plate<linebreak/>
 <simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1380" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1380" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gae1ffca305a0d97599df6073a2a372120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PoiseuillePipeFlow</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>PoiseuillePipeFlow</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Poiseuille Flow through a circular pipe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of pipe, <formula id="61">$ R $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>viscosity of fluid, <formula id="53">$ \mu $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>the pressure gradient, <formula id="54">$ \nabla p $</formula> (neg) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>the rate of flow, <formula id="62">$ Q $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-axis offset, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-axis offset, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para>z-axis offset, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
x-momentum equation <formula id="55">\[ (\nabla p + \mu \nabla^2 u)_x = 0 \]</formula> <formula id="63">\[ u(r) = u_{max} (1 - \frac{r^2}{R^2}) \]</formula> <formula id="64">\[ u(0) = u_{max} \]</formula> <formula id="65">\[ u(R) = 0 \]</formula> <formula id="66">\[ u_{max} = -\nabla p \frac{R^2}{4 \mu}= \frac{2Q}{\pi R^2}\]</formula></para>
<para><formula id="60">$ u_{max} $</formula> = maximum velocity at the centerline<linebreak/>
Axis of origin: at center of pipe<linebreak/>
</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1466" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1466" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga1f21552251a084499afd8dcb0e8514e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PoiseuillePipeFlow_P</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>PoiseuillePipeFlow_P</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Poiseuille Flow through a circular pipe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>radius of pipe, <formula id="61">$ R $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>viscosity of fluid, <formula id="53">$ \mu $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>the pressure gradient, <formula id="54">$ \nabla p $</formula> (neg) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>the rate of flow, <formula id="62">$ Q $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of pipe, <formula id="67">$ L $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>x-axis offset, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para>y-axis offset, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para>z-axis offset, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="68">\[ p - p_0 = -\nabla p L(1-x)\]</formula></para>
<para><formula id="69">$ p_0 =p(L)$</formula> = 0, the atmospheric pressure at the outflow<linebreak/>
Axis of origin: at center of pipe<linebreak/>
</para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1554" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1554" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga45a73975e83f31d1fb02cd1704355a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poissonsEquationExp1D</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u)</argsstring>
        <name>poissonsEquationExp1D</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Poisson Exponential Equation 1D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="70">$ K $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="71">\[-u_{xx} - f = 0\]</formula> <formula id="72">\[u = K x(1-x)y(1-y)z(1-z)e^{x^2 + y^2 + z^2}\]</formula> <formula id="73">\[f = -K \{[y(1-y)z(1-z)][4x^3 - 4x^2 + 6x - 2]+ [x(1-x)z(1-z)][4y^3 - 4y^2 + 6y - 2]+ [x(1-x)y(1-y)][4z^3 - 4z^2 + 6z - 2]\}e^{x^2 + y^2 + z^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1620" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1620" bodyend="1641"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga0e86c52c97b48886d082a09ea6c2a1d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poissonsEquationExp2D</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u)</argsstring>
        <name>poissonsEquationExp2D</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Poisson Exponential Equation 2D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="70">$ K $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="71">\[-u_{xx} - f = 0\]</formula> <formula id="72">\[u = K x(1-x)y(1-y)z(1-z)e^{x^2 + y^2 + z^2}\]</formula> <formula id="73">\[f = -K \{[y(1-y)z(1-z)][4x^3 - 4x^2 + 6x - 2]+ [x(1-x)z(1-z)][4y^3 - 4y^2 + 6y - 2]+ [x(1-x)y(1-y)][4z^3 - 4z^2 + 6z - 2]\}e^{x^2 + y^2 + z^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1659" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1659" bodyend="1672"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaf73fac4860037252bacde0429873fb3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poissonsEquationExp3D</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u)</argsstring>
        <name>poissonsEquationExp3D</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Poisson Exponential Equation 3D. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="70">$ K $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="71">\[-u_{xx} - f = 0\]</formula> <formula id="72">\[u = K x(1-x)y(1-y)z(1-z)e^{x^2 + y^2 + z^2}\]</formula> <formula id="73">\[f = -K \{[y(1-y)z(1-z)][4x^3 - 4x^2 + 6x - 2]+ [x(1-x)z(1-z)][4y^3 - 4y^2 + 6y - 2]+ [x(1-x)y(1-y)][4z^3 - 4z^2 + 6z - 2]\}e^{x^2 + y^2 + z^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1690" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1690" bodyend="1705"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gacb0c2f9c88b790c4f884c8ba9ec3ff32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poissonsEquationExp3D_dr</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u, double *dr)</argsstring>
        <name>poissonsEquationExp3D_dr</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dr</declname>
        </param>
        <briefdescription>
<para>Poisson Exponential Equation 3D (dr) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="70">$ K $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dr</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="71">\[-u_{xx} - f = 0\]</formula> <formula id="72">\[u = K x(1-x)y(1-y)z(1-z)e^{x^2 + y^2 + z^2}\]</formula> <formula id="73">\[f = -K \{[y(1-y)z(1-z)][4x^3 - 4x^2 + 6x - 2]+ [x(1-x)z(1-z)][4y^3 - 4y^2 + 6y - 2]+ [x(1-x)y(1-y)][4z^3 - 4z^2 + 6z - 2]\}e^{x^2 + y^2 + z^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1724" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1724" bodyend="1734"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaf09c73242819668a535dc86ecc3e1750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poissonsEquationExp1D_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u, double *r)</argsstring>
        <name>poissonsEquationExp1D_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Poisson Exponential Equation 1D (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="70">$ K $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="71">\[-u_{xx} - f = 0\]</formula> <formula id="72">\[u = K x(1-x)y(1-y)z(1-z)e^{x^2 + y^2 + z^2}\]</formula> <formula id="73">\[f = -K \{[y(1-y)z(1-z)][4x^3 - 4x^2 + 6x - 2]+ [x(1-x)z(1-z)][4y^3 - 4y^2 + 6y - 2]+ [x(1-x)y(1-y)][4z^3 - 4z^2 + 6z - 2]\}e^{x^2 + y^2 + z^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1754" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1754" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga10d607685c5f6e55574d0267512c62ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poissonsEquationExp2D_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u, double *r)</argsstring>
        <name>poissonsEquationExp2D_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Poisson Exponential Equation 2D (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="70">$ K $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="71">\[-u_{xx} - f = 0\]</formula> <formula id="72">\[u = K x(1-x)y(1-y)z(1-z)e^{x^2 + y^2 + z^2}\]</formula> <formula id="73">\[f = -K \{[y(1-y)z(1-z)][4x^3 - 4x^2 + 6x - 2]+ [x(1-x)z(1-z)][4y^3 - 4y^2 + 6y - 2]+ [x(1-x)y(1-y)][4z^3 - 4z^2 + 6z - 2]\}e^{x^2 + y^2 + z^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1787" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1787" bodyend="1803"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga163c483ea13b49f7bdf6c0576b19abf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poissonsEquationExp3D_r</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *X, double *u, double *r)</argsstring>
        <name>poissonsEquationExp3D_r</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Poisson Exponential Equation 3D (reaction) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para><formula id="70">$ K $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="71">\[-u_{xx} - f = 0\]</formula> <formula id="72">\[u = K x(1-x)y(1-y)z(1-z)e^{x^2 + y^2 + z^2}\]</formula> <formula id="73">\[f = -K \{[y(1-y)z(1-z)][4x^3 - 4x^2 + 6x - 2]+ [x(1-x)z(1-z)][4y^3 - 4y^2 + 6y - 2]+ [x(1-x)y(1-y)][4z^3 - 4z^2 + 6z - 2]\}e^{x^2 + y^2 + z^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1822" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1822" bodyend="1840"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gabc8dd4f4ae09d1d37622d03bed77b57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int STflowSphere_P</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>STflowSphere_P</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Stokes Flow around moving Sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s x-component of velocity, <formula id="0">$ vx $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s y-component of velocity, <formula id="74">$ vy $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s z-component of velocity, <formula id="75">$ vz $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s radius, <formula id="76">$ rs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center x-component, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center y-component, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center z-component, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7]</parametername>
</parameternamelist>
<parameterdescription>
<para>viscosity of fluid, <formula id="77">$ mu $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="78">\[ \nabla p = \mu \nabla^2 u \]</formula></para>
<para><formula id="79">\[ p = \frac{(-3 * rs * \mu \| \vec v\| cos\theta)}{2r^2}\]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1864" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1864" bodyend="1899"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gac2213f564eccefdc13bf3cb6341bf4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int STflowSphere_Vx</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>STflowSphere_Vx</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Stokes Flow around moving Sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s x-component of velocity, <formula id="0">$ vx $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s y-component of velocity, <formula id="74">$ vy $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s z-component of velocity, <formula id="75">$ vz $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s radius, <formula id="76">$ rs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center x-component, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center y-component, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center z-component, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7]</parametername>
</parameternamelist>
<parameterdescription>
<para>viscosity of fluid, <formula id="77">$ mu $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="78">\[ \nabla p = \mu \nabla^2 u \]</formula> <formula id="80">\[ v^r = \|\vec v \| cos\theta(1-\frac{3rs}{2r} + \frac{rs^3}{2r^3})\]</formula> <formula id="81">\[ v^\theta = -\|\vec v \| sin\theta(1-\frac{3rs}{4r} - \frac{rs^3}{4r^3})\]</formula> <formula id="82">\[v^r(r&gt;rs) = 0\]</formula> <formula id="83">\[v^\theta(r&gt;rs) = 0\]</formula> <formula id="84">\[e^R = \frac{\vec x}{\|\vec x \|} ; \{ x_x = x - xs;x_y = y-ys; x_z = z-zs\} \]</formula> <formula id="85">\[e^\theta = (e^R - \frac{\vec v}{\|\vec v \|}) - [(e^R - \frac{\vec v}{\|\vec v \|}) \cdot e^R]e^R\]</formula></para>
<para><formula id="86">\[u_x = v^r e^R_x + v^\theta e^\theta_x \]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1929" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1929" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga6e0ebc1cdd80f43414eb0d84101ae598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int STflowSphere_Vy</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>STflowSphere_Vy</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Stokes Flow around moving Sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s x-component of velocity, <formula id="0">$ vx $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s y-component of velocity, <formula id="74">$ vy $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s z-component of velocity, <formula id="75">$ vz $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s radius, <formula id="76">$ rs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center x-component, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center y-component, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center z-component, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7]</parametername>
</parameternamelist>
<parameterdescription>
<para>viscosity of fluid, <formula id="77">$ mu $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="78">\[ \nabla p = \mu \nabla^2 u \]</formula> <formula id="80">\[ v^r = \|\vec v \| cos\theta(1-\frac{3rs}{2r} + \frac{rs^3}{2r^3})\]</formula> <formula id="81">\[ v^\theta = -\|\vec v \| sin\theta(1-\frac{3rs}{4r} - \frac{rs^3}{4r^3})\]</formula> <formula id="82">\[v^r(r&gt;rs) = 0\]</formula> <formula id="83">\[v^\theta(r&gt;rs) = 0\]</formula> <formula id="84">\[e^R = \frac{\vec x}{\|\vec x \|} ; \{ x_x = x - xs;x_y = y-ys; x_z = z-zs\} \]</formula> <formula id="85">\[e^\theta = (e^R - \frac{\vec v}{\|\vec v \|}) - [(e^R - \frac{\vec v}{\|\vec v \|}) \cdot e^R]e^R\]</formula></para>
<para><formula id="87">\[u_y = v^r e^R_y + v^\theta e^\theta_y \]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="1992" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="1992" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga602389ac4b4ddb220b670ff9c16d7f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int STflowSphere_Vz</definition>
        <argsstring>(int *iwork, double *rwork, int nPoints, double t, double *x, double *u)</argsstring>
        <name>STflowSphere_Vz</name>
        <param>
          <type>int *</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rwork</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPoints</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Stokes Flow around moving Sphere. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwork</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[0]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s x-component of velocity, <formula id="0">$ vx $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[1]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s y-component of velocity, <formula id="74">$ vy $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[2]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s z-component of velocity, <formula id="75">$ vz $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s radius, <formula id="76">$ rs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center x-component, <formula id="2">$ xs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[5]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center y-component, <formula id="3">$ ys $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[6]</parametername>
</parameternamelist>
<parameterdescription>
<para>Sphere&apos;s center z-component, <formula id="4">$ zs $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rwork[7]</parametername>
</parameternamelist>
<parameterdescription>
<para>viscosity of fluid, <formula id="77">$ mu $</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>- total number of points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>NOT USED </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>input array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>output array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<formula id="78">\[ \nabla p = \mu \nabla^2 u \]</formula> <formula id="80">\[ v^r = \|\vec v \| cos\theta(1-\frac{3rs}{2r} + \frac{rs^3}{2r^3})\]</formula> <formula id="81">\[ v^\theta = -\|\vec v \| sin\theta(1-\frac{3rs}{4r} - \frac{rs^3}{4r^3})\]</formula> <formula id="82">\[v^r(r&gt;rs) = 0\]</formula> <formula id="83">\[v^\theta(r&gt;rs) = 0\]</formula> <formula id="84">\[e^R = \frac{\vec x}{\|\vec x \|} ; \{ x_x = x - xs;x_y = y-ys; x_z = z-zs\} \]</formula> <formula id="85">\[e^\theta = (e^R - \frac{\vec v}{\|\vec v \|}) - [(e^R - \frac{\vec v}{\|\vec v \|}) \cdot e^R]e^R\]</formula></para>
<para><formula id="88">\[u_z = v^r e^R_z + v^\theta e^\theta_z \]</formula></para>
<para><simplesect kind="return"><para>status code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="2055" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="2055" bodyend="2088"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__analytical_solutions_1gae103bacd0ce284b66771dc3d06420616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coords</definition>
        <argsstring>(double vx, double vy, double vz, double xS, double yS, double zS, double *x, double *r, double *theta, double *norm_v, double *eR, double *eTHETA)</argsstring>
        <name>coords</name>
        <param>
          <type>double</type>
          <declname>vx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vz</declname>
        </param>
        <param>
          <type>double</type>
          <declname>xS</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yS</declname>
        </param>
        <param>
          <type>double</type>
          <declname>zS</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>norm_v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>eTHETA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="2093" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="2093" bodyend="2161"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gac0d5ac1b71bf68c8383846ab25b5b2fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vel</definition>
        <argsstring>(double rS, double norm_v, double r, double theta, double *vR, double *vTHETA)</argsstring>
        <name>vel</name>
        <param>
          <type>double</type>
          <declname>rS</declname>
        </param>
        <param>
          <type>double</type>
          <declname>norm_v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vR</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vTHETA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="2163" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="2163" bodyend="2175"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1gaa5dbc4bd7b917ccdf247a0cf5d1a0596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double uOfX_df</definition>
        <argsstring>(double nlC, double lu)</argsstring>
        <name>uOfX_df</name>
        <param>
          <type>double</type>
          <declname>nlC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="2177" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="2177" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga78fd0f02221f2c8a663f3cb772326a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double uOfX_f</definition>
        <argsstring>(double a, double b, double nlC, double nlD, double x, double lu)</argsstring>
        <name>uOfX_f</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nlC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nlD</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="2181" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="2181" bodyend="2184"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double f</definition>
        <argsstring>(double C, double b, double a, int q, int r)</argsstring>
        <name>f</name>
        <param>
          <type>double</type>
          <declname>C</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="2185" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="2185" bodyend="2208"/>
      </memberdef>
      <memberdef kind="function" id="group__analytical_solutions_1ga31fe0a5e02da8c2ed2761f3aabf86e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double df</definition>
        <argsstring>(double C, double b, double a, int q, int r)</argsstring>
        <name>df</name>
        <param>
          <type>double</type>
          <declname>C</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" line="2209" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c" bodystart="2209" bodyend="2234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>analytical<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="analytical_solutions_8h" kindref="compound">analyticalSolutions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__analytical_solutions_1gacbb37fa8c089b28b5218683ae436b6c8" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gacbb37fa8c089b28b5218683ae436b6c8" kindref="member">PlaneCouetteFlow_u</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>Couette<sp/>Flow<sp/>between<sp/>two<sp/>parallel<sp/>plates.<sp/>One<sp/>moving<sp/>relative<sp/>to<sp/>the<sp/>other<sp/>with<sp/>constant<sp/>seperation<sp/>(width).</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>Flow<sp/>is<sp/>axial.<sp/>u<sp/>!=<sp/>0,<sp/>v<sp/>=<sp/>w<sp/>=<sp/>0<sp/>[Plates<sp/>are<sp/>very<sp/>wide(z)<sp/>and<sp/>very<sp/>long(x)]</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>vx<sp/>=<sp/>Velocity<sp/>of<sp/>moving<sp/>plate<sp/>in<sp/>the<sp/>x-dir.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>h<sp/><sp/>=<sp/>width<sp/>between<sp/>plates<sp/>in<sp/>the<sp/>y-dir.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>Axis<sp/>of<sp/>orgin:<sp/>bottom<sp/>plate</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>xs,ys,zs<sp/>=<sp/>axis<sp/>offset</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/>\del^2(\vecV)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>d^2u/dy^2<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>u(y)<sp/>=vx/h<sp/>*<sp/>Y</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>u(0)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>u(h)<sp/>=<sp/>vx</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>=rwork[0],<sp/>h=rwork[1];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ys=rwork[3];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref><sp/>=<sp/>x[i*3+1]<sp/>-<sp/>ys;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>*(<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>/h);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__analytical_solutions_1gab484c73a106361cb6632ecbe3faecac2" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gab484c73a106361cb6632ecbe3faecac2" kindref="member">diffusionSin1D</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_x<sp/>=<sp/>iwork[0];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>-pow(2.0*PI*omega_x,2.0)*sin(2.0*PI*omega_x*x[i*3+0]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111" refid="group__analytical_solutions_1ga1b38a52b042805d73ce6ef2f874847d2" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga1b38a52b042805d73ce6ef2f874847d2" kindref="member">diffusionSin2D</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_x=iwork[0];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_y=iwork[1];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>-pow(2.0*PI*omega_x,2.0)*sin(2.0*PI*omega_x*x[i*3+0])<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-pow(2.0*PI*omega_y,2.0)*sin(2.0*PI*omega_y*x[i*3+1])<sp/>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141" refid="group__analytical_solutions_1ga3c6987c2dde325822225b36cb656da85" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga3c6987c2dde325822225b36cb656da85" kindref="member">diffusionSin3D</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_x=2.0*PI*iwork[0];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_y=2.0*PI*iwork[1];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_z=2.0*PI*iwork[2];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>-pow(2.0*PI*omega_x,2.0)*sin(2.0*PI*omega_x*x[i*3+0])<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-pow(2.0*PI*omega_y,2.0)*sin(2.0*PI*omega_y*x[i*3+1])</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-pow(2.0*PI*omega_z,2.0)*sin(2.0*PI*omega_z*x[i*3+2])<sp/>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172" refid="group__analytical_solutions_1gaa27bf92c0e02031ac21a621a9d00c149" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaa27bf92c0e02031ac21a621a9d00c149" kindref="member">diffusionSin1D_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_x=iwork[0];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/>pow(2.0*PI*omega_x,2.0)*sin(2.0*PI*omega_x<sp/>*<sp/>x[i*3+0]);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200" refid="group__analytical_solutions_1gaa17304f96b3abd685522b6cdf25bb128" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaa17304f96b3abd685522b6cdf25bb128" kindref="member">diffusionSin2D_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_x=iwork[0];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_y=iwork[1];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/>pow(2.0*PI*omega_x,2.0)<sp/>*<sp/>sin(2.0*PI*omega_x<sp/>*<sp/>x[i*3+0])<sp/>+</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(2.0*PI*omega_y,2.0)<sp/>*<sp/>sin(2.0*PI*omega_y<sp/>*<sp/>x[i*3+1])<sp/>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231" refid="group__analytical_solutions_1ga6383b3aa517f7583783f5f73b372ff0e" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga6383b3aa517f7583783f5f73b372ff0e" kindref="member">diffusionSin3D_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_x=iwork[0];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_y=iwork[1];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega_z=iwork[2];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/>pow(2.0*PI*omega_x,2.0)<sp/>*<sp/>sin(2.0*PI*omega_x<sp/>*<sp/>x[i*3+0])<sp/>+</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(2.0*PI*omega_y,2.0)<sp/>*<sp/>sin(2.0*PI*omega_y<sp/>*<sp/>x[i*3+1])<sp/>+</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(2.0*PI*omega_z,2.0)<sp/>*<sp/>sin(2.0*PI*omega_z<sp/>*<sp/>x[i*3+2])<sp/>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273" refid="group__analytical_solutions_1ga8400a5a823e80620da7f2e071659561c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga8400a5a823e80620da7f2e071659561c" kindref="member">LinearAD_DiracIC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>exact<sp/>solution<sp/>of</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>u_t<sp/>+<sp/>\deld(b<sp/>u<sp/>-<sp/>a<sp/>\grad<sp/>u)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>an<sp/>infinite<sp/>domain<sp/>with<sp/>dirac<sp/>initial<sp/>data</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/>u0<sp/>=<sp/>\int<sp/>u0<sp/>\delta(x<sp/>-<sp/>x0)</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/>also<sp/>returns<sp/>advective,<sp/>diffusive,<sp/>and<sp/>total<sp/>flux</highlight></codeline>
<codeline lineno="284"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[3]={rwork[0],rwork[1],rwork[2]};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a08a4b8173deed2dbe6993d906ff006cb" kindref="member">n</ref>=rwork[3],<sp/>a=rwork[4],<sp/>tStart=rwork[5],<sp/>u0=rwork[6];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0[3]={rwork[7],rwork[8],rwork[9]};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[3],<sp/>exp_arg,<sp/>yDoty,<sp/>t<sp/>=<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref><sp/>+<sp/>tStart;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yDoty=0.0,j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[j]<sp/>=<sp/>x[i*3+j]<sp/>-<sp/>x0[j]<sp/>-<sp/>b[j]*t;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yDoty<sp/>+=<sp/>y[j]*y[j];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp_arg<sp/>=<sp/>yDoty<sp/>/<sp/>(4.0<sp/>*<sp/>a<sp/>*<sp/>t)<sp/>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp_arg<sp/>&gt;<sp/>100)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>u0*exp(-exp_arg)<sp/>/<sp/>pow(<sp/>(4.0*a*PI*t),(<ref refid="_headers_8h_1a08a4b8173deed2dbe6993d906ff006cb" kindref="member">n</ref>/2.0)<sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337" refid="group__analytical_solutions_1gae9af8e2affdb06660ab67e1e6f438980" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gae9af8e2affdb06660ab67e1e6f438980" kindref="member">LinearAD_DiracIC_advectiveVelocity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[3]={rwork[0],rwork[1],rwork[2]};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(nPoints*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga8400a5a823e80620da7f2e071659561c" kindref="member">LinearAD_DiracIC</ref>(iwork,<sp/>rwork,<sp/><sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>=<sp/>b[j]*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381" refid="group__analytical_solutions_1ga08bde89e03ea8c28bdbe10e878b2e89e" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga08bde89e03ea8c28bdbe10e878b2e89e" kindref="member">LinearAD_DiracIC_diffusiveVelocity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=rwork[4];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga2bf9013d22891c618d00964e512d78ab" kindref="member">LinearAD_DiracIC_du</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>=<sp/>-a<sp/>*<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423" refid="group__analytical_solutions_1ga2bf9013d22891c618d00964e512d78ab" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga2bf9013d22891c618d00964e512d78ab" kindref="member">LinearAD_DiracIC_du</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[3]={rwork[0],rwork[1],rwork[2]};</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=rwork[4],<sp/>tStart=rwork[5];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0[3]={rwork[7],rwork[8],rwork[9]};</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[3],<sp/>t=<ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref><sp/>+<sp/>tStart;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(nPoints*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga8400a5a823e80620da7f2e071659561c" kindref="member">LinearAD_DiracIC</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[j]<sp/>=<sp/>x[i*3+j]<sp/>-<sp/>x0[j]<sp/>-<sp/>b[j]*t;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>=<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*2.0*y[j]<sp/>/<sp/>(4.0*a*t);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="group__analytical_solutions_1gab0132ce276c7d9ec0da6288fc9e27973" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gab0132ce276c7d9ec0da6288fc9e27973" kindref="member">LinearAD_DiracIC_totalVelocity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*f_adv<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(nPoints*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1gae9af8e2affdb06660ab67e1e6f438980" kindref="member">LinearAD_DiracIC_advectiveVelocity</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/>f_adv);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>+=<sp/><ref refid="group__analytical_solutions_1ga08bde89e03ea8c28bdbe10e878b2e89e" kindref="member">LinearAD_DiracIC_diffusiveVelocity</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>+=<sp/>f_adv[i*3+j];</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(f_adv);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508" refid="group__analytical_solutions_1gaa3f08cf4fd7c6aa74dcc25d34127b2d2" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaa3f08cf4fd7c6aa74dcc25d34127b2d2" kindref="member">LinearAD_SteadyState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>exact<sp/>solution<sp/>for</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>(bu<sp/>-<sp/>au_x)_x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/>u(0)<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/>u(1)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="514"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>b=rwork[0],<sp/>a=rwork[1];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/><ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref>=0.0,<sp/>C;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref><sp/>=<sp/>(1.0/(exp(b/a)-1.0));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>C<sp/>=<sp/>(-<ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref>)*exp(b/a);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref><sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>(-<ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref>)*exp(b*x/a)<sp/>-<sp/>C;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>1.0<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="group__analytical_solutions_1gae06e06a09b9ad151004d3e438337fcc8" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gae06e06a09b9ad151004d3e438337fcc8" kindref="member">LinearADR_Decay_DiracIC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="568"><highlight class="comment">The<sp/>exact<sp/>solution<sp/>of</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/>u_t<sp/>+<sp/>\deld(bu<sp/>-<sp/>a<sp/>\grad<sp/>u)<sp/>+<sp/>cu=<sp/>0</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>an<sp/>infinite<sp/>domain<sp/>with<sp/>Dirac<sp/>initial<sp/>data.</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/>Also<sp/>returns<sp/>the<sp/>fluxes<sp/>(by<sp/>inheritance).</highlight></codeline>
<codeline lineno="574"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[10],<sp/>tStart=rwork[5];<sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref><sp/>+<sp/>tStart;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga8400a5a823e80620da7f2e071659561c" kindref="member">LinearAD_DiracIC</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>*=<sp/>exp(-<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*t);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613" refid="group__analytical_solutions_1ga80051bda689b13a352183a668d0401f6" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga80051bda689b13a352183a668d0401f6" kindref="member">LinearADR_Decay_DiracIC_dr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dr)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[10];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1gae06e06a09b9ad151004d3e438337fcc8" kindref="member">LinearADR_Decay_DiracIC</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dr[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652" refid="group__analytical_solutions_1gaa978bb8023e2279d21d97ac0e57593bf" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaa978bb8023e2279d21d97ac0e57593bf" kindref="member">LinearADR_Decay_DiracIC_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[10];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1gae06e06a09b9ad151004d3e438337fcc8" kindref="member">LinearADR_Decay_DiracIC</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>*<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691" refid="group__analytical_solutions_1ga2ba8debc8c33446da363d88503a1ac34" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga2ba8debc8c33446da363d88503a1ac34" kindref="member">LinearADR_Sine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/>An<sp/>exact<sp/>solution<sp/>and<sp/>source<sp/>term<sp/>for</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/><sp/>\deld<sp/>(\vec<sp/>b<sp/>u<sp/>-<sp/>\ten<sp/>a<sp/>\grad<sp/>u)<sp/>+<sp/>c<sp/>u<sp/>+<sp/>d<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/>where</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/>u(x)<sp/>=<sp/>sin[\gvec<sp/>\omega<sp/>\cdot<sp/>\vec<sp/>x<sp/>+<sp/>\omega_0)<sp/>]<sp/>=<sp/>sin(Ax<sp/>-<sp/>b)</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/><sp/>r(u,x)<sp/>=<sp/>-<sp/>[(\ten<sp/>a<sp/>\gvec<sp/>\omega]<sp/>\cdot<sp/>\gvec<sp/>\omega)<sp/>u</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(\vec<sp/>b<sp/>\cdot<sp/>\omega)<sp/>cos(Ax<sp/>-<sp/>b)</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>c<sp/>u<sp/>+<sp/>D<sp/>cos(Ax<sp/>-<sp/>b)</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>cu<sp/>+<sp/>d</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/>also<sp/>returns<sp/>the<sp/>advective,<sp/>diffusive,<sp/>and<sp/>total<sp/>flux<sp/>at<sp/>a<sp/>point.</highlight></codeline>
<codeline lineno="706"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega[3]={rwork[0],rwork[1],rwork[2]};</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega0=rwork[3];</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref><sp/>=<sp/>omega[0]*x[i*3+0]<sp/>+<sp/>omega[1]*x[i*3+1]<sp/>+<sp/>omega[2]*x[i*3+2]<sp/>+<sp/>omega0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>sin(<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749" refid="group__analytical_solutions_1gad870808ac02dfa561b11f39da536762a" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gad870808ac02dfa561b11f39da536762a" kindref="member">LinearADR_Sine_advectiveVelocity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[3]={rwork[4],rwork[5],rwork[6]};</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(nPoints<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;<sp/>%d<sp/>x<sp/>=<sp/>%f,<sp/>%f,<sp/>%f\n&quot;,i,x[i*3+0],x[i*3+1],x[i*3+2]);</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga2ba8debc8c33446da363d88503a1ac34" kindref="member">LinearADR_Sine</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/>t,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>=<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*b[j];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref><sp/>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802" refid="group__analytical_solutions_1ga42d6d124e2b7c4e4f4448ffedaf7768e" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga42d6d124e2b7c4e4f4448ffedaf7768e" kindref="member">LinearADR_Sine_diffusiveVelocity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a[3][3]={<sp/>{rwork[7],rwork[8],rwork[9]},{rwork[10],rwork[11],rwork[12]},{rwork[13],rwork[14],rwork[15]}<sp/>};</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*du<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(nPoints*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga23eee10efbdf6cc68c3fb689e7627154" kindref="member">LinearADR_Sine_du</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/>t,<sp/>x,<sp/>du);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>multiplication<sp/>of<sp/>matrix<sp/>a(3x3)<sp/>and<sp/>a<sp/>vector<sp/>x<sp/>of<sp/>nPoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>=<sp/>-(<sp/>a[j][0]*du[i*3+j]<sp/>+<sp/>a[j][1]*du[i*3+j]<sp/>+<sp/>a[j][2]*du[i*3+j]<sp/>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(du);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851" refid="group__analytical_solutions_1ga278c31c293ef7480b10494c33737972a" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga278c31c293ef7480b10494c33737972a" kindref="member">LinearADR_Sine_dr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dr)</highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[16];</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga2ba8debc8c33446da363d88503a1ac34" kindref="member">LinearADR_Sine</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/>t,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dr[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="890" refid="group__analytical_solutions_1ga23eee10efbdf6cc68c3fb689e7627154" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga23eee10efbdf6cc68c3fb689e7627154" kindref="member">LinearADR_Sine_du</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega[3]={rwork[0],rwork[1],rwork[2]};</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega0=rwork[3];</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref><sp/>=<sp/>cos(<sp/>omega[0]*x[i*3+0]<sp/>+<sp/>omega[1]*x[i*3+1]<sp/>+<sp/>omega[2]*x[i*3+2]<sp/>+<sp/>omega0<sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>=<sp/>omega[j]<sp/>*<sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938" refid="group__analytical_solutions_1gaf2882702e4addac01e556348fe0f78ae" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaf2882702e4addac01e556348fe0f78ae" kindref="member">LinearADR_Sine_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega[3]={rwork[0],rwork[1],rwork[2]};</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega0=rwork[3];</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b[3]={rwork[4],rwork[5],rwork[6]};</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a[3][3]={<sp/>{rwork[7],rwork[8],rwork[9]},{rwork[10],rwork[11],rwork[12]},{rwork[13],rwork[14],rwork[15]}};</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[16];<sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>,<sp/><ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref>,<sp/>E;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MM[3];</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga2ba8debc8c33446da363d88503a1ac34" kindref="member">LinearADR_Sine</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/>t,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>multiplication<sp/>of<sp/>3x3<sp/>matrix<sp/>and<sp/>3x1<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MM[j]<sp/>=<sp/>a[j][0]*omega[0]<sp/>+<sp/>a[j][1]*omega[1]<sp/>+<sp/>a[j][2]*omega[2];</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>E<sp/>=<sp/>-<sp/>(<sp/>MM[0]*omega[0]<sp/>+<sp/>MM[1]*omega[1]<sp/>+<sp/>MM[2]*omega[2]<sp/>)<sp/>-<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dot<sp/>product<sp/>of<sp/>vector<sp/>b<sp/>and<sp/>vector<sp/>omega</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref><sp/>=<sp/>-(<sp/>b[0]*omega[0]<sp/>+<sp/>b[1]*omega[1]<sp/>+<sp/>b[2]*omega[2]<sp/>);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref><sp/>=<sp/>omega[0]*x[i*3+0]<sp/>+<sp/>omega[1]*x[i*3+1]<sp/>+<sp/>omega[2]*x[i*3+2]<sp/>+<sp/>omega0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>+<sp/><ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref>*cos(<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>)<sp/>+<sp/>E*sin(<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="997" refid="group__analytical_solutions_1ga0b796cae20f7733dafd782b9cc2c79a4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga0b796cae20f7733dafd782b9cc2c79a4" kindref="member">LinearADR_Sine_totalVelocity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>iret;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*f_adv<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)malloc(nPoints*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1gad870808ac02dfa561b11f39da536762a" kindref="member">LinearADR_Sine_advectiveVelocity</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/>t,<sp/>x,<sp/>f_adv);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>+=<sp/><ref refid="group__analytical_solutions_1ga42d6d124e2b7c4e4f4448ffedaf7768e" kindref="member">LinearADR_Sine_diffusiveVelocity</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/>t,<sp/>x,<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>+=<sp/>f_adv[i*3+j];</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(f_adv);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1035"><highlight class="comment">/********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036" refid="group__analytical_solutions_1ga1a762a7a4c98ddf4ae6785c522604eab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga1a762a7a4c98ddf4ae6785c522604eab" kindref="member">NonlinearAD_SteadyState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/>(bu^q<sp/>-<sp/>a(u^r)_x)_x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/>u(0)<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/>u(1)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1041"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret=0;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>=iwork[0],<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>=iwork[1];</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b=rwork[0],<sp/>a=rwork[1];</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>lu,<sp/>f0,<sp/>ff,<sp/>fC;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C,<sp/>rtmC=0.0,<sp/>Ctmp,<sp/>dC,<sp/>nlC=0.0,<sp/>nlD=0.0;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==2<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==1)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;Solving<sp/>for<sp/>sqrt(-C)<sp/>for<sp/>q=2,<sp/>r=1\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtmC<sp/>=<sp/>sqrt(1.5);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fabs(<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(rtmC,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)<sp/>)<sp/>&gt;<sp/>1.0E-8<sp/>)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtmC<sp/>-=<sp/>(<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(rtmC,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)<sp/>/<sp/><ref refid="group__analytical_solutions_1ga31fe0a5e02da8c2ed2761f3aabf86e0d" kindref="member">df</ref>(rtmC,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;sqrt(-C)=<sp/>%lf<sp/>\n&quot;</highlight><highlight class="normal">,rtmC);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==1<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==2)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\nSolving<sp/>for<sp/>C<sp/>in<sp/>q=1,r=2\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>1.0<sp/>+<sp/>1.0E-10;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0<sp/>=<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(C,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;f0<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>f0);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fabs(<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(C,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>))<sp/>&gt;<sp/>(1.0E-7*fabs(f0)<sp/>+<sp/>1.0E-7))</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dC<sp/>=<sp/>-<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(C,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)/<ref refid="group__analytical_solutions_1ga31fe0a5e02da8c2ed2761f3aabf86e0d" kindref="member">df</ref>(C,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;dc<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,dC);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ctmp<sp/>=<sp/>C<sp/>+<sp/>dC;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(fabs(ff=<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(Ctmp,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>))<sp/>&gt;<sp/>0.99*fabs(fC=<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(C,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)))<sp/>||<sp/>(Ctmp<sp/>&lt;=<sp/>1.0)<sp/>)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;f(%lf)<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>Ctmp,<sp/>ff);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;f(%lf)<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,<sp/>C,<sp/>fC);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;ls\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dC<sp/>*=<sp/>0.9<sp/>;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ctmp<sp/>=<sp/>C<sp/>+<sp/>dC<sp/>;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;out\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;%lf<sp/>\n&quot;</highlight><highlight class="normal">,Ctmp);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>we<sp/>printing<sp/>the<sp/>new<sp/>values<sp/>from<sp/>the<sp/>functions<sp/>f<sp/>&amp;<sp/>df?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>f(%lf)<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,Ctmp,<sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(Ctmp,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>));</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;df(%lf)<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,Ctmp,<sp/><ref refid="group__analytical_solutions_1ga31fe0a5e02da8c2ed2761f3aabf86e0d" kindref="member">df</ref>(Ctmp,b,a,<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>));</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C=Ctmp;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;C<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,C);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlC<sp/>=<sp/>C;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlD<sp/>=<sp/>0.5*(2.0*C*log(C*(C-1))<sp/>-<sp/>4.0*C<sp/>+<sp/>2.0<sp/>-<sp/>b/a);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;D<sp/>=<sp/>%lf\n&quot;</highlight><highlight class="normal">,nlD);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;q,r<sp/>not<sp/>implemented\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Main<sp/>Loop<sp/>for<sp/>uOfX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==1<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==2)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1gaa3f08cf4fd7c6aa74dcc25d34127b2d2" kindref="member">LinearAD_SteadyState</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/>t,<sp/>X,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)<sp/>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==2<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==1)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>rtmC<sp/>*<sp/>tanh(<sp/>(-b*rtmC/a)*(x<sp/>-<sp/>1.0)<sp/>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>1.0<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==1<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==2)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lu<sp/>=<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i];</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0<sp/>=<sp/><ref refid="group__analytical_solutions_1ga78fd0f02221f2c8a663f3cb772326a1c" kindref="member">uOfX_f</ref>(a,<sp/>b,<sp/>nlC,<sp/>nlD,<sp/>x,<sp/>lu)<sp/>;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>fabs(<ref refid="group__analytical_solutions_1ga78fd0f02221f2c8a663f3cb772326a1c" kindref="member">uOfX_f</ref>(a,<sp/>b,<sp/>nlC,<sp/>nlD,<sp/>x,<sp/>lu))<sp/>&gt;<sp/>(1.0E-6*fabs(f0)<sp/>+<sp/>1.0E-6)<sp/>)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lu<sp/>-=<sp/><ref refid="group__analytical_solutions_1ga78fd0f02221f2c8a663f3cb772326a1c" kindref="member">uOfX_f</ref>(a,<sp/>b,<sp/>nlC,<sp/>nlD,<sp/>x,<sp/>lu)<sp/>/<sp/><ref refid="group__analytical_solutions_1gaa5dbc4bd7b917ccdf247a0cf5d1a0596" kindref="member">uOfX_df</ref>(nlC,<sp/>lu)<sp/>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>lu;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;q,r<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164" refid="group__analytical_solutions_1ga25b05765337d0a0a8a2d3030f50de065" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga25b05765337d0a0a8a2d3030f50de065" kindref="member">NonlinearADR_Decay_DiracIC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1166"><highlight class="comment">The<sp/>approximate<sp/>analytical<sp/>solution<sp/>of</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/><sp/><sp/><sp/>u_t<sp/>+<sp/>\deld(bu<sp/>-<sp/>a<sp/>\grad<sp/>u)<sp/>+<sp/>cu^d=<sp/>0</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>an<sp/>infinite<sp/>domain<sp/>with<sp/>Dirac<sp/>initial<sp/>data.</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/><sp/><sp/><sp/>Also<sp/>returns<sp/>the<sp/>fluxes<sp/>(by<sp/>inheritance).</highlight></codeline>
<codeline lineno="1172"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[10],<sp/>d=rwork[11],<sp/>tStart=rwork[5];</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref><sp/>+<sp/>tStart;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga8400a5a823e80620da7f2e071659561c" kindref="member">LinearAD_DiracIC</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>*=<sp/>exp(<sp/>-(2.0*<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*t*pow(<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i],(d-1.0)))/(d+1.0)<sp/>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1216" refid="group__analytical_solutions_1gac024a80be0164d41344ffb14734ff7dc" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gac024a80be0164d41344ffb14734ff7dc" kindref="member">NonlinearADR_Decay_DiracIC_dr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dr)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[10],<sp/>d=rwork[11];</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga25b05765337d0a0a8a2d3030f50de065" kindref="member">NonlinearADR_Decay_DiracIC</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dr[i]<sp/>=<sp/>d*<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*pow(<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i],(d-1.0));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="group__analytical_solutions_1gacf4734cee6510fb40f6038e864c26f2d" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gacf4734cee6510fb40f6038e864c26f2d" kindref="member">NonlinearADR_Decay_DiracIC_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>iret;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=rwork[10],<sp/>d=rwork[11];</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>iret<sp/>=<sp/><ref refid="group__analytical_solutions_1ga25b05765337d0a0a8a2d3030f50de065" kindref="member">NonlinearADR_Decay_DiracIC</ref>(iwork,<sp/>rwork,<sp/>nPoints,<sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/>x,<sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*pow(<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i],d);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iret;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287" refid="group__analytical_solutions_1ga13ce042045a861bce7a66c85b00d55bf" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga13ce042045a861bce7a66c85b00d55bf" kindref="member">NonlinearDAE</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>exact<sp/>solution<sp/>of</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/><sp/><sp/><sp/>u_t<sp/>=<sp/>-<sp/>a<sp/>max(u,0)^p</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"><sp/><sp/><sp/><sp/>u(0)<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1293"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<sp/>t,<sp/>a=rwork[0],<sp/>p=rwork[1];</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>x[i*3+0];</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>1.0)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/><sp/>exp(<sp/>-a*t<sp/>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref><sp/>=<sp/>1.0/(1.0<sp/>-<sp/>p);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>pow(<sp/><ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(<sp/>(1.0<sp/>-<sp/>(1.0<sp/>-<sp/>p)*a*t),<sp/>0.0<sp/>),<sp/><ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1330" refid="group__analytical_solutions_1ga1105d43771fb984ad11d749fdfbd6230" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga1105d43771fb984ad11d749fdfbd6230" kindref="member">NonlinearDAE_f</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>exact<sp/>solution<sp/>of</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/><sp/><sp/><sp/>u_t<sp/>=<sp/>-<sp/>a<sp/>max(u,0)^p</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/><sp/><sp/><sp/>u(0)<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1336"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=rwork[0],<sp/>p=rwork[1];</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j]<sp/>=<sp/>-a*pow(<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(<ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>[i*3+j],0.0),p)<sp/>;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1380" refid="group__analytical_solutions_1ga0e9ee485059c83d19aa4fe36c19a27a6" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga0e9ee485059c83d19aa4fe36c19a27a6" kindref="member">PlanePoiseuilleFlow_u</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/><sp/>Poiseuille<sp/>Flow<sp/>between<sp/>two<sp/>parallel<sp/>fixed<sp/>plates<sp/>with<sp/>constant<sp/>seperation<sp/>(width)</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"></highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/><sp/>h<sp/><sp/>=<sp/>width<sp/>between<sp/>plates</highlight></codeline>
<codeline lineno="1386"><highlight class="comment"><sp/><sp/>GradP<sp/>=<sp/>Pressure<sp/>gradient<sp/>(neg.)</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/><sp/>mu<sp/>=<sp/>viscosity</highlight></codeline>
<codeline lineno="1388"><highlight class="comment"><sp/><sp/>q<sp/>=<sp/>rate<sp/>of<sp/>flow<sp/>per<sp/>unit<sp/>width<sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="comment"><sp/><sp/>xs,ys,zs<sp/>=<sp/>axis<sp/>offset</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/><sp/>Axis<sp/>of<sp/>origin:<sp/>bottom<sp/>plate</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/><sp/>Vmax<sp/>=<sp/>maximum<sp/>velocity<sp/>at<sp/>the<sp/>centerline</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"></highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/><sp/>-\delp<sp/>+<sp/>mu<sp/>\del^2(\u_x)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"></highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/><sp/>given<sp/>either<sp/>-GradP:<sp/>u_{max}<sp/>=<sp/>-GradP<sp/>/<sp/>(2<sp/>*<sp/>mu)<sp/>*<sp/>(h/2)^2</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/>q<sp/><sp/><sp/><sp/>:<sp/>u_{max}<sp/>=<sp/>3/2<sp/>*<sp/>(q<sp/>/<sp/>h)</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"></highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/><sp/>u(y)<sp/>=<sp/>4<sp/>*<sp/>u_{max}<sp/>*<sp/>Y<sp/>*<sp/>(h-Y)<sp/>/<sp/>h^2</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"></highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/><sp/>u(0)<sp/>=<sp/>u(h)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/><sp/>u(h/2)<sp/>=<sp/>u_{max}<sp/><sp/></highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/><sp/>u_{max}<sp/>=<sp/>-GradP<sp/>/<sp/>(2<sp/>*<sp/>mu)<sp/>*<sp/>(h/2)&lt;sup&gt;2&lt;/sup&gt;\n</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/><sp/>or<sp/>\n</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/><sp/>u_{max}<sp/>=<sp/>3/2<sp/>*<sp/>(q<sp/>/<sp/>h)<sp/></highlight></codeline>
<codeline lineno="1405"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h=rwork[0],<sp/>mu=rwork[1];</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GradP<sp/>=<sp/>rwork[2],<sp/><ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref><sp/>=<sp/>rwork[3];</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ys=rwork[5];</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>umax;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GradP<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>umax<sp/>=<sp/>-GradP<sp/>*(1.0/(2.0*mu))<sp/>*<sp/>(h*h/4.0);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref><sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>umax<sp/>=<sp/>(3.0/2.0)*<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>/h;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>input<sp/>values<sp/>for<sp/>either<sp/>q(Flow<sp/>Rate<sp/>per<sp/>unit<sp/>depth)<sp/>or<sp/>GradP(Pressure<sp/>Gradient)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(0);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref><sp/>=<sp/>x[i*3+1]<sp/>-<sp/>ys;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>(4.0*umax*<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>*(h-<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>))/(h*h);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1466" refid="group__analytical_solutions_1gae1ffca305a0d97599df6073a2a372120" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gae1ffca305a0d97599df6073a2a372120" kindref="member">PoiseuillePipeFlow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/>Poiseuille<sp/>Flow<sp/>through<sp/>a<sp/>circular<sp/>pipe</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/><sp/>Velocity<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>flow<sp/>(z-dir)</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"></highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/>R<sp/><sp/>=<sp/>radius<sp/>of<sp/>pipe</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/>GradP<sp/>=<sp/>Pressure<sp/>gradient<sp/>(neg.)</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/><sp/>mu<sp/>=<sp/>viscosity<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/>Q<sp/>=<sp/>Rate<sp/>of<sp/>Flow<sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/><sp/>Axis<sp/>of<sp/>origin:<sp/>center<sp/>of<sp/>pipe</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/><sp/>xs,ys,zs<sp/>=<sp/>axis<sp/>offset</highlight></codeline>
<codeline lineno="1478"><highlight class="comment"></highlight></codeline>
<codeline lineno="1479"><highlight class="comment"><sp/><sp/>x-momentum<sp/>equation<sp/>in<sp/>cylindrical<sp/>coordinates</highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/><sp/>Vr<sp/>=<sp/>Vtheta<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/><sp/>-\\delp<sp/>+<sp/>mu<sp/>\\del^2(Vx)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"></highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/><sp/>No<sp/>transformation<sp/>of<sp/>coordinates<sp/>is<sp/>required<sp/>for<sp/>x.</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/>Vmax<sp/>=<sp/>-GradP<sp/>*<sp/>R^2/(4<sp/>*<sp/>mu)\n</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/><sp/>\n<sp/><sp/></highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/>Vmax<sp/>=<sp/>2<sp/>*<sp/>Q<sp/>/<sp/>Pipe<sp/>Area\n</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"></highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/>Vx(r)<sp/>=<sp/>Vmax<sp/>*<sp/><sp/>(1<sp/>-<sp/>r^2/R^2)</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"></highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/>Vx(0)<sp/>=<sp/>Vmax</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/>Vx(R)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/><sp/>Vmax<sp/>=<sp/>-GradP<sp/>*<sp/>R&lt;sup&gt;2&lt;/sup&gt;/(4<sp/>*<sp/>mu)\n</highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/><sp/>or\n</highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/><sp/>Vmax<sp/>=<sp/>2<sp/>*<sp/>Q<sp/>/<sp/>Pipe<sp/>Area\n</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"></highlight></codeline>
<codeline lineno="1497"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>=rwork[0],<sp/>mu<sp/>=<sp/>rwork[1];</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GradP=rwork[2],<sp/><ref refid="_headers_8h_1ab8d83b3526dced5e412b93bcc089927f" kindref="member">Q</ref>=rwork[3];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ys=rwork[5];</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>umax;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GradP<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>umax<sp/>=<sp/>-GradP<sp/>*(<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>/(4.0*mu));</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_headers_8h_1ab8d83b3526dced5e412b93bcc089927f" kindref="member">Q</ref><sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>umax<sp/>=<sp/>2.0*<ref refid="_headers_8h_1ab8d83b3526dced5e412b93bcc089927f" kindref="member">Q</ref>/(PI<sp/>*<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>input<sp/>values<sp/>for<sp/>either<sp/>Q(Flow<sp/>Rate)<sp/>or<sp/>GradP(Pressure<sp/>Gradient)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(0);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref><sp/>=<sp/>x[i*3+1]<sp/>-<sp/>ys;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>umax*(1.0<sp/>-<sp/>((<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>*<ref refid="_headers_8h_1aa565e3a13199f860447a094f48c9dd6b" kindref="member">Y</ref>)/(<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)));</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1554" refid="group__analytical_solutions_1ga1f21552251a084499afd8dcb0e8514e9" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga1f21552251a084499afd8dcb0e8514e9" kindref="member">PoiseuillePipeFlow_P</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/><sp/>Poiseuille<sp/>Flow<sp/>through<sp/>a<sp/>circular<sp/>pipe</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/><sp/>Velocity<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>flow<sp/>(z-dir)</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"></highlight></codeline>
<codeline lineno="1560"><highlight class="comment"><sp/><sp/>R<sp/><sp/>=<sp/>radius<sp/>of<sp/>pipe</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/>GradP<sp/>=<sp/>Pressure<sp/>gradient<sp/>(neg.)</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/><sp/>mu<sp/>=<sp/>viscosity<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/>Q<sp/>=<sp/>Rate<sp/>of<sp/>Flow<sp/></highlight></codeline>
<codeline lineno="1564"><highlight class="comment"><sp/><sp/>Axis<sp/>of<sp/>origin:<sp/>center<sp/>of<sp/>pipe</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/><sp/>xs,ys,zs<sp/>=<sp/>axis<sp/>offset</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/><sp/>P<sp/>=<sp/>pressure</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"></highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/><sp/>x-momentum<sp/>equation<sp/>in<sp/>cylindrical<sp/>coordinates</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/>Vr<sp/>=<sp/>Vtheta<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/>-GradP<sp/>+<sp/>mu<sp/>\del^2(Vx)<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/><sp/>For<sp/>Q<sp/>given:\n</highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/><sp/>GradP<sp/>=<sp/>(8<sp/>*<sp/>Q<sp/>*<sp/>mu)<sp/>/<sp/>(R&lt;sup&gt;2&lt;/sup&gt;<sp/>*<sp/>Pipe<sp/>Area)</highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/><sp/>assumuption:<sp/>P1<sp/>=<sp/>atmospheric<sp/>pressure<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="1575"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>=rwork[0],<sp/>mu=rwork[1];</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GradP=rwork[2],<sp/><ref refid="_headers_8h_1ab8d83b3526dced5e412b93bcc089927f" kindref="member">Q</ref>=rwork[3],<sp/><ref refid="_headers_8h_1a499d78bdc2c754c7a4cf8d39ed245e9f" kindref="member">L</ref>=rwork[4];</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xs=rwork[5];</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>X;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GradP<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1ab8d83b3526dced5e412b93bcc089927f" kindref="member">Q</ref><sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GradP<sp/>=<sp/>-<sp/>(8.0*<ref refid="_headers_8h_1ab8d83b3526dced5e412b93bcc089927f" kindref="member">Q</ref>*mu)<sp/>/<sp/>(PI*pow(<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,4.0));</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GradP<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>input<sp/>values<sp/>for<sp/>either<sp/>Q(Flow<sp/>Rate)<sp/>OR<sp/>GradP(Pressure<sp/>Gradient)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>x[i*3+0]<sp/>-<sp/>xs;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>-GradP*<ref refid="_headers_8h_1a499d78bdc2c754c7a4cf8d39ed245e9f" kindref="member">L</ref>*(1.0-X);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620" refid="group__analytical_solutions_1ga45a73975e83f31d1fb02cd1704355a2c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga45a73975e83f31d1fb02cd1704355a2c" kindref="member">poissonsEquationExp1D</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/><sp/><sp/><sp/>-u_{xx}<sp/>-<sp/>f<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>K<sp/>x(1-x)y(1-y)z(1-z)e^{x^2<sp/>+<sp/>y^2<sp/>+<sp/>z^2}</highlight></codeline>
<codeline lineno="1625"><highlight class="comment"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>-K<sp/>{\&gt;<sp/>[y(1-y)z(1-z)][4x^3<sp/>-<sp/>4x^2<sp/>+<sp/>6x<sp/>-<sp/>2]+</highlight></codeline>
<codeline lineno="1626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[x(1-x)z(1-z)][4y^3<sp/>-<sp/>4y^2<sp/>+<sp/>6y<sp/>-<sp/>2]+</highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[x(1-x)y(1-y)][4z^3<sp/>-<sp/>4z^2<sp/>+<sp/>6z<sp/>-<sp/>2]}e^{x^2<sp/>+<sp/>y^2<sp/>+<sp/>z^2}<sp/></highlight></codeline>
<codeline lineno="1628"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K=rwork[0];</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>K*x*(1.0-x)*exp(x*x);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1659" refid="group__analytical_solutions_1ga0e86c52c97b48886d082a09ea6c2a1d8" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga0e86c52c97b48886d082a09ea6c2a1d8" kindref="member">poissonsEquationExp2D</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K=rwork[0];</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>X[i*3+1];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>K*x*(1.0-x)*y*(1.0-y)*exp(x*x<sp/>+<sp/>y*y);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1690" refid="group__analytical_solutions_1gaf73fac4860037252bacde0429873fb3e" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaf73fac4860037252bacde0429873fb3e" kindref="member">poissonsEquationExp3D</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K=rwork[0];</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/><ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>X[i*3+1];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref><sp/>=<sp/>X[i*3+2];</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>K*x*(1.0-x)*y*(1.0-y)*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>*(1.0-<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>)*exp(x*x<sp/>+<sp/>y*y<sp/>+<sp/><ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1724" refid="group__analytical_solutions_1gacb0c2f9c88b790c4f884c8ba9ec3ff32" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gacb0c2f9c88b790c4f884c8ba9ec3ff32" kindref="member">poissonsEquationExp3D_dr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dr)</highlight></codeline>
<codeline lineno="1725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dr[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754" refid="group__analytical_solutions_1gaf09c73242819668a535dc86ecc3e1750" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaf09c73242819668a535dc86ecc3e1750" kindref="member">poissonsEquationExp1D_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K=rwork[0];</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];<sp/><sp/></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/>K*(4.0*(1.0-x)*pow(x,3.0)<sp/>-<sp/>4.0*x*x<sp/>+<sp/>6.0*(1.0-x)*x<sp/>-<sp/>2.0)*exp(x*x)<sp/>;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1787" refid="group__analytical_solutions_1ga10d607685c5f6e55574d0267512c62ff" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga10d607685c5f6e55574d0267512c62ff" kindref="member">poissonsEquationExp2D_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K=rwork[0];</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;nPoints;i++)</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>X[i*3+1];<sp/></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/>K*(y*(1.0-y)*(4.0*(1.0-x)*pow(x,3)<sp/>-<sp/>4.0*x*x<sp/>+<sp/>6.0*x*(1.0-x)<sp/>-<sp/>2.0)<sp/>+<sp/></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x*(1.0-x)*(4.0*(1.0-y)*pow(y,3)<sp/>-<sp/>4.0*y*y<sp/>+<sp/>6.0*y*(1.0-y)<sp/>-<sp/>2.0))*exp(x*x<sp/>+<sp/>y*y);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1822" refid="group__analytical_solutions_1ga163c483ea13b49f7bdf6c0576b19abf3" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga163c483ea13b49f7bdf6c0576b19abf3" kindref="member">poissonsEquationExp3D_r</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="1823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K=rwork[0];</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,y,<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>X[i*3+0];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>X[i*3+1];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref><sp/>=<sp/>X[i*3+2];</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>[i]<sp/>=<sp/>K*(y*(1.0-y)*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>*(1.0-<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>)*(4.0*(1.0-x)*pow(x,3)<sp/>-<sp/>4.0*x*x<sp/>+<sp/>6.0*x*(1.0-x)<sp/>-<sp/>2.0)<sp/>+</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x*(1.0-x)*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>*(1.0-<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>)*(4.0*(1.0-y)*pow(y,3)<sp/>-<sp/>4.0*y*y<sp/>+<sp/>6.0*y*(1.0-y)<sp/>-<sp/>2.0)<sp/>+</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x*(1.0-x)*y*(1.0-y)*(4.0*(1.0-<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>)*pow(<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>,3)<sp/>-<sp/>4.0*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref><sp/>+<sp/>6.0*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>*(1.0-<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>)<sp/>-<sp/>2.0))*exp(x*x<sp/>+<sp/>y*y<sp/>+<sp/><ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864" refid="group__analytical_solutions_1gabc8dd4f4ae09d1d37622d03bed77b57a" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gabc8dd4f4ae09d1d37622d03bed77b57a" kindref="member">STflowSphere_P</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/>Stokes<sp/>Flow<sp/>around<sp/>Sphere<sp/>of<sp/>radius<sp/>r^s<sp/>and<sp/>center<sp/>x^s,<sp/>y^s,<sp/>z^s.</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/>Velocity<sp/>is<sp/>u,v,w<sp/>and<sp/>viscosity<sp/>is<sp/>mu.</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/>Array<sp/>rwork<sp/>contains<sp/>all<sp/>the<sp/>above<sp/>variables.</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/>Input<sp/><sp/>:<sp/>t,<sp/>x</highlight></codeline>
<codeline lineno="1871"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>x[npoints*3]<sp/>=<sp/>{x,y,z}<sp/>for<sp/>each<sp/>point</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rwork[]<sp/>=<sp/>{uu,v,w,rS,xS,yS,zS,mu}</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/>Output<sp/>:<sp/>P</highlight></codeline>
<codeline lineno="1874"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>=rwork[0],<sp/><ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>=rwork[1],<sp/>vz=rwork[2];</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rS=rwork[3],<sp/>xS=rwork[4],<sp/>yS=rwork[5],<sp/>zS=rwork[6];</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu=rwork[7];</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eR[3],eTHETA[3];</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm_v,theta,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1gae103bacd0ce284b66771dc3d06420616" kindref="member">coords</ref>(<ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>,<ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>,vz,</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xS,yS,zS,</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[i*3],</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;theta,</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;norm_v,</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eR,</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref><sp/>&gt;=<sp/>rS)</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>(-3.0*rS*mu*norm_v*cos(theta))/(2.0*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]=0.0;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929" refid="group__analytical_solutions_1gac2213f564eccefdc13bf3cb6341bf4d4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gac2213f564eccefdc13bf3cb6341bf4d4" kindref="member">STflowSphere_Vx</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1932"><highlight class="comment"><sp/>Stokes<sp/>Flow<sp/>around<sp/>Sphere<sp/>of<sp/>radius<sp/>r^s<sp/>and<sp/>center<sp/>x^s,<sp/>y^s,<sp/>z^s.</highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/>Velocity<sp/>is<sp/>u,v,w<sp/>and<sp/>viscosity<sp/>is<sp/>mu..</highlight></codeline>
<codeline lineno="1934"><highlight class="comment"><sp/>Input<sp/><sp/>:<sp/>t,<sp/>x</highlight></codeline>
<codeline lineno="1935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>x[npoints*3]<sp/>=<sp/>{x,y,z}<sp/>for<sp/>each<sp/>point</highlight></codeline>
<codeline lineno="1936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rwork[]<sp/>=<sp/>{uu,v,w,rS,xS,yS,zS,mu}</highlight></codeline>
<codeline lineno="1937"><highlight class="comment"><sp/>Output<sp/>:<sp/>Vx</highlight></codeline>
<codeline lineno="1938"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>=rwork[0],<sp/><ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>=rwork[1],<sp/>vz=rwork[2];</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rS=rwork[3],<sp/>xS=rwork[4],<sp/>yS=rwork[5],<sp/>zS=rwork[6];</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eR[3],eTHETA[3];</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm_v,theta,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vR,vTHETA;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1gae103bacd0ce284b66771dc3d06420616" kindref="member">coords</ref>(<ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>,<ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>,vz,</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xS,yS,zS,</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[i*3],</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;theta,</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;norm_v,</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eR,</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1gac0d5ac1b71bf68c8383846ab25b5b2fa" kindref="member">vel</ref>(rS,norm_v,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,theta,&amp;vR,&amp;vTHETA);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>vR<sp/>*<sp/>eR[0]+<sp/>vTHETA<sp/>*<sp/>eTHETA[0];</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992" refid="group__analytical_solutions_1ga6e0ebc1cdd80f43414eb0d84101ae598" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga6e0ebc1cdd80f43414eb0d84101ae598" kindref="member">STflowSphere_Vy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/>Stokes<sp/>Flow<sp/>around<sp/>Sphere<sp/>of<sp/>radius<sp/>r^s<sp/>and<sp/>center<sp/>x^s,<sp/>y^s,<sp/>z^s.</highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/>Velocity<sp/>is<sp/>u,v,w<sp/>and<sp/>viscosity<sp/>is<sp/>mu.</highlight></codeline>
<codeline lineno="1997"><highlight class="comment"><sp/>Array<sp/>rwork<sp/>contains<sp/>all<sp/>the<sp/>above<sp/>variables.</highlight></codeline>
<codeline lineno="1998"><highlight class="comment"><sp/>Input<sp/><sp/>:<sp/>t,<sp/>x</highlight></codeline>
<codeline lineno="1999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>x[npoints*3]<sp/>=<sp/>{x,y,z}<sp/>for<sp/>each<sp/>point</highlight></codeline>
<codeline lineno="2000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rwork[]<sp/>=<sp/>{uu,v,w,rS,xS,yS,zS,mu}</highlight></codeline>
<codeline lineno="2001"><highlight class="comment"><sp/>Output<sp/>:<sp/>Vy</highlight></codeline>
<codeline lineno="2002"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>=rwork[0],<sp/><ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>=rwork[1],<sp/>vz=rwork[2];</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rS=rwork[3],<sp/>xS=rwork[4],<sp/>yS=rwork[5],<sp/>zS=rwork[6];</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eR[3],eTHETA[3];</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm_v,theta,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vR,vTHETA;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1gae103bacd0ce284b66771dc3d06420616" kindref="member">coords</ref>(<ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>,<ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>,vz,</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xS,yS,zS,</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[i*3],</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;theta,</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;norm_v,</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eR,</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1gac0d5ac1b71bf68c8383846ab25b5b2fa" kindref="member">vel</ref>(rS,norm_v,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,theta,&amp;vR,&amp;vTHETA);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>vR<sp/>*<sp/>eR[1]<sp/>+<sp/>vTHETA<sp/>*<sp/>eTHETA[1];</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2055" refid="group__analytical_solutions_1ga602389ac4b4ddb220b670ff9c16d7f61" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga602389ac4b4ddb220b670ff9c16d7f61" kindref="member">STflowSphere_Vz</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iwork,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rwork,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPoints,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>)</highlight></codeline>
<codeline lineno="2056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2058"><highlight class="comment"><sp/>Stokes<sp/>Flow<sp/>around<sp/>Sphere<sp/>of<sp/>radius<sp/>r^s<sp/>and<sp/>center<sp/>x^s,<sp/>y^s,<sp/>z^s.</highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/>Velocity<sp/>is<sp/>u,v,w<sp/>and<sp/>viscosity<sp/>is<sp/>mu.</highlight></codeline>
<codeline lineno="2060"><highlight class="comment"><sp/>Array<sp/>rwork<sp/>contains<sp/>all<sp/>the<sp/>above<sp/>variables.</highlight></codeline>
<codeline lineno="2061"><highlight class="comment"><sp/>Input<sp/><sp/>:<sp/>t,<sp/>x</highlight></codeline>
<codeline lineno="2062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>x[npoints*3]<sp/>=<sp/>{x,y,z}<sp/>for<sp/>each<sp/>point</highlight></codeline>
<codeline lineno="2063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>rwork[]<sp/>=<sp/>{uu,v,w,rS,xS,yS,zS,mu}</highlight></codeline>
<codeline lineno="2064"><highlight class="comment"><sp/>Output<sp/>:<sp/>Vz</highlight></codeline>
<codeline lineno="2065"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>=rwork[0],<sp/><ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>=rwork[1],<sp/>vz=rwork[2];</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rS=rwork[3],<sp/>xS=rwork[4],<sp/>yS=rwork[5],<sp/>zS=rwork[6];</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eR[3],eTHETA[3];</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm_v,theta,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vR,vTHETA;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;nPoints;<sp/>i++)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1gae103bacd0ce284b66771dc3d06420616" kindref="member">coords</ref>(<ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>,<ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>,vz,</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xS,yS,zS,</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[i*3],</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;theta,</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;norm_v,</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eR,</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__analytical_solutions_1gac0d5ac1b71bf68c8383846ab25b5b2fa" kindref="member">vel</ref>(rS,norm_v,<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,theta,&amp;vR,&amp;vTHETA);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>=<sp/>vR<sp/>*<sp/>eR[2]<sp/>+<sp/>vTHETA*<sp/>eTHETA[2];</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************/</highlight></codeline>
<codeline lineno="2093" refid="group__analytical_solutions_1gae103bacd0ce284b66771dc3d06420616" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gae103bacd0ce284b66771dc3d06420616" kindref="member">coords</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vz,</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xS,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yS,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zS,<sp/></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,<sp/></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,<sp/></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>theta,<sp/></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>norm_v,</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>eR,<sp/></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>eTHETA)</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xBar[3],</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>norm_xBar,</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>xBar_dot_v,</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>eTHETA_dot_eR,</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>norm_eTHETA;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/>*norm_v<sp/>=<sp/>sqrt(<ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>*<ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>+<ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>*<ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>+vz*vz);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>xBar[0]=x[0]-xS;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>xBar[1]=x[1]-yS;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>xBar[2]=x[2]-zS;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>norm_xBar<sp/>=<sp/>sqrt(xBar[0]*xBar[0]<sp/>+<sp/>xBar[1]*xBar[1]<sp/>+<sp/>xBar[2]*xBar[2]);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref><sp/>=<sp/>norm_xBar;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm_xBar<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eR[0]=xBar[0]/norm_xBar;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eR[1]=xBar[1]/norm_xBar;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eR[2]=xBar[2]/norm_xBar;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eR[0]=0.0;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eR[1]=0.0;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eR[2]=0.0;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/>xBar_dot_v<sp/>=<sp/>xBar[0]*<ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref><sp/>+<sp/>xBar[1]*<ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref><sp/>+<sp/>xBar[2]*vz;</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm_xBar<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>*theta<sp/>=<sp/>acos(xBar_dot_v/(norm_xBar*(*norm_v)));</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>*theta<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/>eTHETA[0]<sp/>=<sp/>eR[0]<sp/>-<sp/><ref refid="_headers_8h_1ae920d60831fd60b11f1b758a12e87eff" kindref="member">vx</ref>/(*norm_v);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>eTHETA[1]<sp/>=<sp/>eR[1]<sp/>-<sp/><ref refid="_headers_8h_1a9891a031d6c4d31d28333ae6e6f6b746" kindref="member">vy</ref>/(*norm_v);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>eTHETA[2]<sp/>=<sp/>eR[2]<sp/>-<sp/>vz/(*norm_v);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/>eTHETA_dot_eR<sp/>=<sp/>eTHETA[0]*eR[0]<sp/>+<sp/>eTHETA[1]*eR[1]<sp/>+<sp/>eTHETA[2]*eR[2];</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>eTHETA[0]<sp/>-=<sp/>eTHETA_dot_eR*eR[0];</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>eTHETA[1]<sp/>-=<sp/>eTHETA_dot_eR*eR[1];</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>eTHETA[2]<sp/>-=<sp/>eTHETA_dot_eR*eR[2];</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>norm_eTHETA<sp/>=<sp/>sqrt(eTHETA[0]*eTHETA[0]<sp/>+<sp/>eTHETA[1]*eTHETA[1]<sp/>+<sp/>eTHETA[2]*eTHETA[2]);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm_eTHETA<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA[0]/=<sp/>norm_eTHETA;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA[1]/=<sp/>norm_eTHETA;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA[2]/=<sp/>norm_eTHETA;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA[0]=0.0;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA[1]=0.0;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eTHETA[2]=0.0;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163" refid="group__analytical_solutions_1gac0d5ac1b71bf68c8383846ab25b5b2fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gac0d5ac1b71bf68c8383846ab25b5b2fa" kindref="member">vel</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rS,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm_v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>vR,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>vTHETA)</highlight></codeline>
<codeline lineno="2164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref><sp/>&gt;<sp/>rS)</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*vR<sp/>=<sp/>norm_v<sp/>*<sp/>cos(theta)<sp/>*<sp/>(<sp/>1.0<sp/>-<sp/>(3.0*rS/(2.0*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>))<sp/>+<sp/>(pow(rS,3.0)/(2.0*pow(<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,3.0)))<sp/>);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*vTHETA<sp/>=<sp/>-norm_v<sp/>*<sp/>sin(theta)<sp/>*<sp/>(<sp/>1.0<sp/>-<sp/>(3.0*rS/(4.0*<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>))<sp/>-<sp/>(pow(rS,3.0)/(4.0*pow(<ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>,3.0)))<sp/>);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*vR<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*vTHETA<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177" refid="group__analytical_solutions_1gaa5dbc4bd7b917ccdf247a0cf5d1a0596" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1gaa5dbc4bd7b917ccdf247a0cf5d1a0596" kindref="member">uOfX_df</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nlC,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lu)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(2.0*nlC/(lu-nlC)+2.0)<sp/>);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2181" refid="group__analytical_solutions_1ga78fd0f02221f2c8a663f3cb772326a1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga78fd0f02221f2c8a663f3cb772326a1c" kindref="member">uOfX_f</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nlC,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nlD,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lu)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(2.0<sp/>*<sp/>(nlC<sp/>*<sp/>log(nlC-lu)<sp/>-<sp/>(nlC-lu))<sp/>-<sp/>nlD)<sp/>-<sp/>b*x/a<sp/>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2185" refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga5f01b1fc0e3cb358aa6411861cedc62c" kindref="member">f</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="2186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==2<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==1)</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>C*tanh(b*C/a)<sp/>-<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;function<sp/>f(q=2,r=1,b=0)<sp/>returns<sp/>-99999.99\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-99999.99;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==1<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==2)</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>2.0*C*(log(C-1.0)<sp/>-<sp/>log(C))<sp/>+<sp/>2.0<sp/>+<sp/>b/a<sp/>);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;q,r<sp/>not<sp/>implemented:<sp/>function<sp/>f<sp/>returns<sp/>-99999.99\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-99999.99;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2209" refid="group__analytical_solutions_1ga31fe0a5e02da8c2ed2761f3aabf86e0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__analytical_solutions_1ga31fe0a5e02da8c2ed2761f3aabf86e0d" kindref="member">df</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>)</highlight></codeline>
<codeline lineno="2210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==2<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==1)</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>C*(1.0/pow(cosh(b*C/a),2))*(b/a)<sp/>+<sp/>tanh(b*C/a)<sp/>);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;function<sp/>df(q=2,r=1,b=0)<sp/>returns<sp/>-99999.99\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-99999.99;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_headers_8h_1a1fd0784d88f1dd3a465423f8a63d1af2" kindref="member">q</ref>==1<sp/>&amp;&amp;<sp/><ref refid="_headers_8h_1a51d5468d74b4eccfb8e26ea458562120" kindref="member">r</ref>==2)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>2.0*(log(C-1.0)<sp/>-<sp/>log(C))<sp/>+<sp/>2.0*C*(1.0/(C-1.0)<sp/>-<sp/>1.0/C)<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;q,r<sp/>not<sp/>implemented:<sp/>function<sp/>df<sp/>returns<sp/>-99999.99\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-99999.99;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/analyticalSolutions.c"/>
  </compounddef>
</doxygen>

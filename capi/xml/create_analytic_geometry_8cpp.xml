<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="create_analytic_geometry_8cpp" kind="file" language="C++">
    <compoundname>createAnalyticGeometry.cpp</compoundname>
    <includes refid="create_analytic_geometry_8h" local="no">createAnalyticGeometry.h</includes>
    <includes refid="_mesh_adapt_p_u_m_i_8h" local="yes">MeshAdaptPUMI.h</includes>
    <includes local="no">ma.h</includes>
    <includes local="no">lionPrint.h</includes>
    <incdepgraph>
      <node id="22">
        <label>list</label>
      </node>
      <node id="2">
        <label>createAnalyticGeometry.h</label>
        <link refid="create_analytic_geometry_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>iomanip</label>
      </node>
      <node id="26">
        <label>queue</label>
      </node>
      <node id="6">
        <label>apfShape.h</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="24">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>cassert</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="28">
        <label>lionPrint.h</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="7">
        <label>PCU.h</label>
      </node>
      <node id="16">
        <label>pcu_util.h</label>
      </node>
      <node id="4">
        <label>apfMDS.h</label>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="25">
        <label>apfNumbering.h</label>
      </node>
      <node id="3">
        <label>apf.h</label>
      </node>
      <node id="15">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>gmi_mesh.h</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>apfMesh2.h</label>
      </node>
      <node id="17">
        <label>MeshAdaptPUMI.h</label>
        <link refid="_mesh_adapt_p_u_m_i_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>gmi_analytic.h</label>
      </node>
      <node id="19">
        <label>set</label>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="18">
        <label>mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ma.h</label>
      </node>
      <node id="1">
        <label>createAnalyticGeometry.cpp</label>
        <link refid="create_analytic_geometry_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double boxLength</definition>
        <argsstring></argsstring>
        <name>boxLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="21" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double boxWidth</definition>
        <argsstring></argsstring>
        <name>boxWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="22" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double boxHeight</definition>
        <argsstring></argsstring>
        <name>boxHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="23" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a667023f263e0de427542a5dcda34ed03" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int edgeMap[12]</definition>
        <argsstring>[12]</argsstring>
        <name>edgeMap</name>
        <initializer>= {50,48,46,52,11,16,20,6,73,72,71,74}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="24" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a9c5ad38cc52eb8617cb0d5064f449445" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faceLoop[6]</definition>
        <argsstring>[6]</argsstring>
        <name>faceLoop</name>
        <initializer>= {80,78,76,82,42,24}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="25" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double pi</definition>
        <argsstring></argsstring>
        <name>pi</name>
        <initializer>= apf::pi</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="477" column="14" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a53b8d47f0745f99da7c42bb408632da2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int sphereFaceID</definition>
        <argsstring></argsstring>
        <name>sphereFaceID</name>
        <initializer>= 123</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="478" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double sphereRadius</definition>
        <argsstring></argsstring>
        <name>sphereRadius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="479" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double xyz_offset[3]</definition>
        <argsstring>[3]</argsstring>
        <name>xyz_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="480" column="8" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1ace69042cdfa80336df3b06b6ae5a5395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agm_bdry</type>
        <definition>agm_bdry add_bdry</definition>
        <argsstring>(gmi_model *m, gmi_ent *e)</argsstring>
        <name>add_bdry</name>
        <param>
          <type>gmi_model *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>gmi_ent *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="8" column="10" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agm_use</type>
        <definition>agm_use add_adj</definition>
        <argsstring>(gmi_model *m, agm_bdry b, int tag)</argsstring>
        <name>add_adj</name>
        <param>
          <type>gmi_model *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>agm_bdry</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="13" column="9" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="13" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a6fb78a29719167d7deeec14b05380c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert0</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert0</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="28" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a6ca69fec456b3ab4434fc3104c47cf5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert1</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert1</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="36" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1acd25296793f187704ee62cc83051ab8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert2</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert2</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="44" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a3c542e74fdb8c3504e969da8b778c9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert3</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert3</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="52" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1afceb1002de4e9751d0aa02cece7ee243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert4</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert4</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="60" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a553e9d1a1d1f4e3d2b7ced74c6dcdd53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert5</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert5</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="68" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1aecacbd68a2c9a77aff11b36270b1d290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert6</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert6</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="76" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a3fad21974d006a097ef6b87eef60d246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vert7</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>vert7</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="84" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a75149e755d63f4407adbd209b03d7338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge0</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge0</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="92" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a7133038e8601c64c6dea23005915a078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge1</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge1</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="99" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a0adfb8836041ef9f8ae82a3abe628b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge2</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge2</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="106" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a70b412367d80d6d709bd9cb7612be902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge3</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge3</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="113" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1afec02e2a021ac23cdea80f909fada9bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge4</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge4</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="120" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a6fc31569b4815da7219cd686ee801ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge5</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge5</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="127" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="127" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a1c90fbe7119c1a8793a9ae4b8f66a23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge6</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge6</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="134" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1abf9d8efb8f0b3cfa2c0b3b10e1420d74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge7</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge7</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="141" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a94f4b21bfe0a361ed239f57324a0854f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge8</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge8</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="148" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a12dfb48666a8d6399921f7ba4733e40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge9</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge9</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="155" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="155" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a88612feba69c82cca80a8a4761488b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge10</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge10</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="162" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="162" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a52d241a7f64b51cb18cac97cfa5f28d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edge11</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>edge11</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="169" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="169" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1aba347904f11248311e519647f3e3c03f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void face0</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>face0</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="176" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="176" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a8150aa7079a816ef9cfdbfa61f9ec64d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void face1</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>face1</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="183" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a4c49b9e453f7ecb52eda67b830605ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void face2</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>face2</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="190" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1affc3e371e21b086847d564f0a3c33e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void face3</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>face3</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="197" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="197" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a39cabaf828b0cc71ed13fe27e26cf223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void face4</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>face4</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="203" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a2fbd7a6fe7cee2a2e94525f2ae42216e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void face5</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>face5</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="209" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reparamVert_zero</definition>
        <argsstring>(double const from[2], double to[2], void *)</argsstring>
        <name>reparamVert_zero</name>
        <param>
          <type>double const</type>
          <declname>from</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="216" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reparamVert_one</definition>
        <argsstring>(double const from[2], double to[2], void *)</argsstring>
        <name>reparamVert_one</name>
        <param>
          <type>double const</type>
          <declname>from</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="222" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="222" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1ad674d51f582f254f4019a3f14b737bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reparamEdge_0</definition>
        <argsstring>(double const from[2], double to[2], void *)</argsstring>
        <name>reparamEdge_0</name>
        <param>
          <type>double const</type>
          <declname>from</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="230" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="230" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a9d0aa410ab1fb4a774b05ec8ecb2fbf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reparamEdge_1</definition>
        <argsstring>(double const from[2], double to[2], void *)</argsstring>
        <name>reparamEdge_1</name>
        <param>
          <type>double const</type>
          <declname>from</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="236" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a1943269e345b61673e18738afd253171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reparamEdge_2</definition>
        <argsstring>(double const from[2], double to[2], void *)</argsstring>
        <name>reparamEdge_2</name>
        <param>
          <type>double const</type>
          <declname>from</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="241" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="241" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1af696fbcbd36c00d236d75662ca1aa7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reparamEdge_3</definition>
        <argsstring>(double const from[2], double to[2], void *)</argsstring>
        <name>reparamEdge_3</name>
        <param>
          <type>double const</type>
          <declname>from</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="247" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="247" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1ad5f5e1ec2f30ceec2dfc96e58a6037a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void regionFunction</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>regionFunction</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="257" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a85e70baf5727dc20b6cf08102be0ff76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void makeBox</definition>
        <argsstring>(gmi_model *model)</argsstring>
        <name>makeBox</name>
        <param>
          <type>gmi_model *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="264" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="264" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1ada8e308f7061cd3fc6880a3aee32d7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sphereFace</definition>
        <argsstring>(double const p[2], double x[3], void *)</argsstring>
        <name>sphereFace</name>
        <param>
          <type>double const</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="482" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="482" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1adec1905579fa580af3aba5d2b6b962aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void makeSphere</definition>
        <argsstring>(gmi_model *model)</argsstring>
        <name>makeSphere</name>
        <param>
          <type>gmi_model *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="489" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="489" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="create_analytic_geometry_8cpp_1a3ff68a2decfabb322b8495769e23fd58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setParameterization</definition>
        <argsstring>(gmi_model *model, apf::Mesh2 *m)</argsstring>
        <name>setParameterization</name>
        <param>
          <type>gmi_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>apf::Mesh2 *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" line="497" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp" bodystart="497" bodyend="600"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="create_analytic_geometry_8h" kindref="compound">createAnalyticGeometry.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mesh_adapt_p_u_m_i_8h" kindref="compound">MeshAdaptPUMI.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ma.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;lionPrint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//routines<sp/>to<sp/>create<sp/>analytic<sp/>sphere<sp/>in<sp/>a<sp/>3D<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="create_analytic_geometry_8h_1ace69042cdfa80336df3b06b6ae5a5395" refkind="member"><highlight class="normal">agm_bdry<sp/><ref refid="create_analytic_geometry_8cpp_1ace69042cdfa80336df3b06b6ae5a5395" kindref="member">add_bdry</ref>(gmi_model*<sp/>m,<sp/>gmi_ent*<sp/>e)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agm_add_bdry(gmi_analytic_topo(m),<sp/>agm_from_gmi(e));</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="create_analytic_geometry_8h_1a1e749b7f673e5f971249bd7984167371" refkind="member"><highlight class="normal">agm_use<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(gmi_model*<sp/>m,<sp/>agm_bdry<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>agm*<sp/>topo<sp/>=<sp/>gmi_analytic_topo(m);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>agm_dim_from_type(agm_bounds(topo,<sp/>b).type);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>gmi_ent*<sp/>de<sp/>=<sp/>gmi_find(m,<sp/>dim<sp/>-<sp/>1,<sp/>tag);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agm_add_use(topo,<sp/>b,<sp/>agm_from_gmi(de));</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="create_analytic_geometry_8h_1a764d47fb959003eee8c61950e98930e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="22" refid="create_analytic_geometry_8h_1a17e0ae23e2e6851abaffbb8d90ee5af0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="23" refid="create_analytic_geometry_8h_1adf8727203915e79bfb80ef81abb88e3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="24" refid="create_analytic_geometry_8h_1a667023f263e0de427542a5dcda34ed03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a667023f263e0de427542a5dcda34ed03" kindref="member">edgeMap</ref>[12]<sp/>=<sp/>{50,48,46,52,11,16,20,6,73,72,71,74};</highlight></codeline>
<codeline lineno="25" refid="create_analytic_geometry_8h_1a9c5ad38cc52eb8617cb0d5064f449445" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a9c5ad38cc52eb8617cb0d5064f449445" kindref="member">faceLoop</ref>[6]<sp/>=<sp/>{80,78,76,82,42,24};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="create_analytic_geometry_8cpp_1a6fb78a29719167d7deeec14b05380c10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a6fb78a29719167d7deeec14b05380c10" kindref="member">vert0</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36" refid="create_analytic_geometry_8cpp_1a6ca69fec456b3ab4434fc3104c47cf5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a6ca69fec456b3ab4434fc3104c47cf5e" kindref="member">vert1</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="create_analytic_geometry_8cpp_1acd25296793f187704ee62cc83051ab8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1acd25296793f187704ee62cc83051ab8b" kindref="member">vert2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="create_analytic_geometry_8cpp_1a3c542e74fdb8c3504e969da8b778c9c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a3c542e74fdb8c3504e969da8b778c9c6" kindref="member">vert3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="create_analytic_geometry_8cpp_1afceb1002de4e9751d0aa02cece7ee243" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1afceb1002de4e9751d0aa02cece7ee243" kindref="member">vert4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68" refid="create_analytic_geometry_8cpp_1a553e9d1a1d1f4e3d2b7ced74c6dcdd53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a553e9d1a1d1f4e3d2b7ced74c6dcdd53" kindref="member">vert5</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="create_analytic_geometry_8cpp_1aecacbd68a2c9a77aff11b36270b1d290" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1aecacbd68a2c9a77aff11b36270b1d290" kindref="member">vert6</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="create_analytic_geometry_8cpp_1a3fad21974d006a097ef6b87eef60d246" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a3fad21974d006a097ef6b87eef60d246" kindref="member">vert7</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="create_analytic_geometry_8cpp_1a75149e755d63f4407adbd209b03d7338" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a75149e755d63f4407adbd209b03d7338" kindref="member">edge0</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="create_analytic_geometry_8cpp_1a7133038e8601c64c6dea23005915a078" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a7133038e8601c64c6dea23005915a078" kindref="member">edge1</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[0];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="create_analytic_geometry_8cpp_1a0adfb8836041ef9f8ae82a3abe628b4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a0adfb8836041ef9f8ae82a3abe628b4c" kindref="member">edge2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="create_analytic_geometry_8cpp_1a70b412367d80d6d709bd9cb7612be902" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a70b412367d80d6d709bd9cb7612be902" kindref="member">edge3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[0];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="create_analytic_geometry_8cpp_1afec02e2a021ac23cdea80f909fada9bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1afec02e2a021ac23cdea80f909fada9bd" kindref="member">edge4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="create_analytic_geometry_8cpp_1a6fc31569b4815da7219cd686ee801ff2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a6fc31569b4815da7219cd686ee801ff2" kindref="member">edge5</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[0];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="create_analytic_geometry_8cpp_1a1c90fbe7119c1a8793a9ae4b8f66a23f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a1c90fbe7119c1a8793a9ae4b8f66a23f" kindref="member">edge6</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="create_analytic_geometry_8cpp_1abf9d8efb8f0b3cfa2c0b3b10e1420d74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1abf9d8efb8f0b3cfa2c0b3b10e1420d74" kindref="member">edge7</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[0];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="create_analytic_geometry_8cpp_1a94f4b21bfe0a361ed239f57324a0854f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a94f4b21bfe0a361ed239f57324a0854f" kindref="member">edge8</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[0];</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="create_analytic_geometry_8cpp_1a12dfb48666a8d6399921f7ba4733e40c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a12dfb48666a8d6399921f7ba4733e40c" kindref="member">edge9</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[0];</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="create_analytic_geometry_8cpp_1a88612feba69c82cca80a8a4761488b9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a88612feba69c82cca80a8a4761488b9b" kindref="member">edge10</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[0];</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="create_analytic_geometry_8cpp_1a52d241a7f64b51cb18cac97cfa5f28d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a52d241a7f64b51cb18cac97cfa5f28d4" kindref="member">edge11</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[0];</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="create_analytic_geometry_8cpp_1aba347904f11248311e519647f3e3c03f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1aba347904f11248311e519647f3e3c03f" kindref="member">face0</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[1];</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="create_analytic_geometry_8cpp_1a8150aa7079a816ef9cfdbfa61f9ec64d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a8150aa7079a816ef9cfdbfa61f9ec64d" kindref="member">face1</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[0];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[1];</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="create_analytic_geometry_8cpp_1a4c49b9e453f7ecb52eda67b830605ffb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a4c49b9e453f7ecb52eda67b830605ffb" kindref="member">face2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[1];</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="create_analytic_geometry_8cpp_1affc3e371e21b086847d564f0a3c33e16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1affc3e371e21b086847d564f0a3c33e16" kindref="member">face3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[0];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>*p[1];</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203" refid="create_analytic_geometry_8cpp_1a39cabaf828b0cc71ed13fe27e26cf223" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a39cabaf828b0cc71ed13fe27e26cf223" kindref="member">face4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[1];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209" refid="create_analytic_geometry_8cpp_1a2fbd7a6fe7cee2a2e94525f2ae42216e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a2fbd7a6fe7cee2a2e94525f2ae42216e" kindref="member">face5</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>*p[0];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>*p[1];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to[2],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>(void)from;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>to[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>to[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222" refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to[2],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>(void)from;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>to[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>to[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//from<sp/>edge<sp/>parameterization<sp/>to<sp/>face<sp/>parameterization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="create_analytic_geometry_8cpp_1ad674d51f582f254f4019a3f14b737bbd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1ad674d51f582f254f4019a3f14b737bbd" kindref="member">reparamEdge_0</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to[2],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>to[0]<sp/>=<sp/>from[0];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>to[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="create_analytic_geometry_8cpp_1a9d0aa410ab1fb4a774b05ec8ecb2fbf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a9d0aa410ab1fb4a774b05ec8ecb2fbf3" kindref="member">reparamEdge_1</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to[2],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>to[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>to[1]<sp/>=<sp/>from[0];</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241" refid="create_analytic_geometry_8cpp_1a1943269e345b61673e18738afd253171" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a1943269e345b61673e18738afd253171" kindref="member">reparamEdge_2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to[2],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>to[0]<sp/>=<sp/>from[0];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>to[1]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="create_analytic_geometry_8cpp_1af696fbcbd36c00d236d75662ca1aa7e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1af696fbcbd36c00d236d75662ca1aa7e8" kindref="member">reparamEdge_3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to[2],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>to[0]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>to[1]<sp/>=<sp/>from[0];</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="create_analytic_geometry_8cpp_1ad5f5e1ec2f30ceec2dfc96e58a6037a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1ad5f5e1ec2f30ceec2dfc96e58a6037a2" kindref="member">regionFunction</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>(void)p;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>(void)x;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="create_analytic_geometry_8h_1a85e70baf5727dc20b6cf08102be0ff76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a85e70baf5727dc20b6cf08102be0ff76" kindref="member">makeBox</ref>(gmi_model*<sp/>model)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//making<sp/>a<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertPer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vertRan[1][2]<sp/>=<sp/>{{0.0,0.0}};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertexMap[8]<sp/>=<sp/>{58,56,54,60,5,10,15,2};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>gmi_ent*<sp/>g_vert[8];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>g_vert[0]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>58,<sp/><ref refid="create_analytic_geometry_8cpp_1a6fb78a29719167d7deeec14b05380c10" kindref="member">vert0</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>g_vert[1]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>56,<sp/><ref refid="create_analytic_geometry_8cpp_1a6ca69fec456b3ab4434fc3104c47cf5e" kindref="member">vert1</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>g_vert[2]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>54,<sp/><ref refid="create_analytic_geometry_8cpp_1acd25296793f187704ee62cc83051ab8b" kindref="member">vert2</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>g_vert[3]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>60,<sp/><ref refid="create_analytic_geometry_8cpp_1a3c542e74fdb8c3504e969da8b778c9c6" kindref="member">vert3</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>g_vert[4]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>5,<sp/><ref refid="create_analytic_geometry_8cpp_1afceb1002de4e9751d0aa02cece7ee243" kindref="member">vert4</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>g_vert[5]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>10,<sp/><ref refid="create_analytic_geometry_8cpp_1a553e9d1a1d1f4e3d2b7ced74c6dcdd53" kindref="member">vert5</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>g_vert[6]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>15,<sp/><ref refid="create_analytic_geometry_8cpp_1aecacbd68a2c9a77aff11b36270b1d290" kindref="member">vert6</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>g_vert[7]<sp/>=<sp/>gmi_add_analytic(model,<sp/>0,<sp/>2,<sp/><ref refid="create_analytic_geometry_8cpp_1a3fad21974d006a097ef6b87eef60d246" kindref="member">vert7</ref>,<sp/>&amp;vertPer,<sp/>vertRan,<sp/>0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgePer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>edgeRan[1][2]<sp/>=<sp/>{{0.0,1.0}};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>gmi_ent*<sp/>g_edge[12];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>g_edge[0]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>50,<sp/><ref refid="create_analytic_geometry_8cpp_1a75149e755d63f4407adbd209b03d7338" kindref="member">edge0</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>g_edge[1]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>48,<sp/><ref refid="create_analytic_geometry_8cpp_1a7133038e8601c64c6dea23005915a078" kindref="member">edge1</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>g_edge[2]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>46,<sp/><ref refid="create_analytic_geometry_8cpp_1a0adfb8836041ef9f8ae82a3abe628b4c" kindref="member">edge2</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>g_edge[3]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>52,<sp/><ref refid="create_analytic_geometry_8cpp_1a70b412367d80d6d709bd9cb7612be902" kindref="member">edge3</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>g_edge[4]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>11,<sp/><ref refid="create_analytic_geometry_8cpp_1afec02e2a021ac23cdea80f909fada9bd" kindref="member">edge4</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>g_edge[5]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>16,<sp/><ref refid="create_analytic_geometry_8cpp_1a6fc31569b4815da7219cd686ee801ff2" kindref="member">edge5</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>g_edge[6]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>20,<sp/><ref refid="create_analytic_geometry_8cpp_1a1c90fbe7119c1a8793a9ae4b8f66a23f" kindref="member">edge6</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>g_edge[7]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>6,<sp/><ref refid="create_analytic_geometry_8cpp_1abf9d8efb8f0b3cfa2c0b3b10e1420d74" kindref="member">edge7</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>g_edge[8]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>73,<sp/><ref refid="create_analytic_geometry_8cpp_1a94f4b21bfe0a361ed239f57324a0854f" kindref="member">edge8</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>g_edge[9]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>72,<sp/><ref refid="create_analytic_geometry_8cpp_1a12dfb48666a8d6399921f7ba4733e40c" kindref="member">edge9</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>g_edge[10]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>71,<sp/><ref refid="create_analytic_geometry_8cpp_1a88612feba69c82cca80a8a4761488b9b" kindref="member">edge10</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>g_edge[11]<sp/>=<sp/>gmi_add_analytic(model,<sp/>1,<sp/>74,<sp/><ref refid="create_analytic_geometry_8cpp_1a52d241a7f64b51cb18cac97cfa5f28d4" kindref="member">edge11</ref>,<sp/>&amp;edgePer,<sp/>edgeRan,<sp/>0);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reparameterize<sp/>vertices<sp/>on<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>agm_bdry<sp/>b;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[0]));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>agm_use<sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[0]);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>agm_use<sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[1]);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[1]));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[1]);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[2]);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[2]));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[2]);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[3]);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[3]));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[3]);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[0]);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[4]));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[4]);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[5]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[5]));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[5]);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[6]);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[6]));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[6]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[7]);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[7]));</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[7]);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[4]);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[8]));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[0]);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[4]);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[9]));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[1]);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[5]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[10]));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[2]);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[6]);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_edge[11]));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>edgeUse0<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>vertexMap[3]);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>edgeUse0_1<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,b,vertexMap[7]);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0,<sp/><ref refid="create_analytic_geometry_8cpp_1a0416cad7404edce82b61afa6ba567a5c" kindref="member">reparamVert_zero</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>edgeUse0_1,<sp/><ref refid="create_analytic_geometry_8cpp_1a3417c2ceed20c4dbbc70c55eefb6c768" kindref="member">reparamVert_one</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//make<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>facePeriodic[2]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>faceRanges[2][2]<sp/>=<sp/>{{0,1.0},{0,1.0}};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>gmi_ent*<sp/>g_face[6];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>g_face[0]<sp/>=<sp/>gmi_add_analytic(model,<sp/>2,<sp/>80,<sp/><ref refid="create_analytic_geometry_8cpp_1aba347904f11248311e519647f3e3c03f" kindref="member">face0</ref>,<sp/>facePeriodic,<sp/>faceRanges,<sp/>0);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>g_face[1]<sp/>=<sp/>gmi_add_analytic(model,<sp/>2,<sp/>78,<sp/><ref refid="create_analytic_geometry_8cpp_1a8150aa7079a816ef9cfdbfa61f9ec64d" kindref="member">face1</ref>,<sp/>facePeriodic,<sp/>faceRanges,<sp/>0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>g_face[2]<sp/>=<sp/>gmi_add_analytic(model,<sp/>2,<sp/>76,<sp/><ref refid="create_analytic_geometry_8cpp_1a4c49b9e453f7ecb52eda67b830605ffb" kindref="member">face2</ref>,<sp/>facePeriodic,<sp/>faceRanges,<sp/>0);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>g_face[3]<sp/>=<sp/>gmi_add_analytic(model,<sp/>2,<sp/>82,<sp/><ref refid="create_analytic_geometry_8cpp_1affc3e371e21b086847d564f0a3c33e16" kindref="member">face3</ref>,<sp/>facePeriodic,<sp/>faceRanges,<sp/>0);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>g_face[4]<sp/>=<sp/>gmi_add_analytic(model,<sp/>2,<sp/>42,<sp/><ref refid="create_analytic_geometry_8cpp_1a39cabaf828b0cc71ed13fe27e26cf223" kindref="member">face4</ref>,<sp/>facePeriodic,<sp/>faceRanges,<sp/>0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>g_face[5]<sp/>=<sp/>gmi_add_analytic(model,<sp/>2,<sp/>24,<sp/><ref refid="create_analytic_geometry_8cpp_1a2fbd7a6fe7cee2a2e94525f2ae42216e" kindref="member">face5</ref>,<sp/>facePeriodic,<sp/>faceRanges,<sp/>0);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reparam<sp/>edges<sp/>onto<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>edgeMap[12]<sp/>=<sp/>{50,48,46,52,11,16,20,6,73,72,71,74};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeLoop[6][4]<sp/>=<sp/>{{50,72,11,73},{72,48,71,16},{46,74,20,71},{52,73,6,74},{50,52,46,48},{11,16,20,6}};<sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeReparamLoop[6][4]<sp/>=<sp/>{{0,3,2,1},{1,0,3,2},{0,1,2,3},{0,1,2,3},{0,1,2,3},{0,3,2,1}};<sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>faceLoop[6]<sp/>=<sp/>{80,78,76,82,42,24};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>faceMap[6]<sp/>=<sp/>{0,1,2,3,4,5};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>faceLoop[6][4]<sp/>=<sp/>{{0,9,4,8},{9,1,10,5},{2,11,6,10},{3,8,7,11},{0,3,2,1},{4,5,6,7}};<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/>typedef<sp/>void<sp/>(*ParametricFunctionArray)<sp/>(double<sp/>const<sp/>p[2],<sp/>double<sp/>x[3],<sp/>void*);</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/>ParametricFunctionArray<sp/>faceFunction[]<sp/>=<sp/></highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>face0,</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>face1,</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>face2,</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>face3,</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>face4,</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>face5,</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;6;i++)</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_face[i]));</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/>for(int<sp/>j=0;<sp/>j&lt;4;j++)</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>agm_use<sp/>faceUse<sp/>=<sp/>add_adj(model,<sp/>b,<sp/>edgeLoop[i][j]);</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>faceUse,<sp/>faceFunction[i],<sp/>0);</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="comment"></highlight></codeline>
<codeline lineno="417"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*ParametricFunctionArray)<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>from[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to[2],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>ParametricFunctionArray<sp/>edgeFaceFunction[]<sp/>=<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1ad674d51f582f254f4019a3f14b737bbd" kindref="member">reparamEdge_0</ref>,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a9d0aa410ab1fb4a774b05ec8ecb2fbf3" kindref="member">reparamEdge_1</ref>,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a1943269e345b61673e18738afd253171" kindref="member">reparamEdge_2</ref>,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1af696fbcbd36c00d236d75662ca1aa7e8" kindref="member">reparamEdge_3</ref>,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;6;i++)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_face[i]));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;4;j++)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agm_use<sp/>faceUse<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>edgeLoop[i][j]);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>faceUse,<sp/>edgeFaceFunction[edgeReparamLoop[i][j]],<sp/>0);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//make<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/>int<sp/>regionPeriodic[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/>double<sp/>regionRanges[3][2]<sp/>=<sp/>{{0,0},{0,0},{0.0}};</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/>gmi_ent*<sp/>g_region;</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/>g_region<sp/>=<sp/>gmi_add_analytic(model,<sp/>3,<sp/>92,<sp/>regionFunction,<sp/>regionPeriodic,<sp/>regionRanges,<sp/>0);</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(g_region));</highlight></codeline>
<codeline lineno="446"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>gmi_add_analytic_cell(model,3,92);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(gmi_find(model,3,92)));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;6;i++)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>agm_use<sp/>regionUse<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/><ref refid="create_analytic_geometry_8cpp_1a9c5ad38cc52eb8617cb0d5064f449445" kindref="member">faceLoop</ref>[i]);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>regionUse,<sp/><ref refid="create_analytic_geometry_8cpp_1ad5f5e1ec2f30ceec2dfc96e58a6037a2" kindref="member">regionFunction</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/>//add<sp/>edge<sp/>adjacencies<sp/>to<sp/>region?</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/>it<sp/>doesn&apos;t<sp/>seem<sp/>like<sp/>i<sp/>need<sp/>to<sp/>do<sp/>this</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/>for(int<sp/>i=0;i&lt;12;i++)</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/>agm_use<sp/>regionUse<sp/>=<sp/>add_adj(model,b,1,edgeMap[i]);</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>regionUse,<sp/>regionFunction,<sp/>0);</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>sphere<sp/>reparameterizations<sp/>onto<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//b<sp/>=<sp/>agm_add_bdry(gmi_analytic_topo(model),<sp/>agm_from_gmi(gmi_find(model,3,92)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>agm_use<sp/>regionUse<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a1e749b7f673e5f971249bd7984167371" kindref="member">add_adj</ref>(model,<sp/>b,<sp/>123);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>gmi_add_analytic_reparam(model,<sp/>regionUse,<sp/><ref refid="create_analytic_geometry_8cpp_1ad5f5e1ec2f30ceec2dfc96e58a6037a2" kindref="member">regionFunction</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//create<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">pi</ref><sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">apf::pi</ref>;</highlight></codeline>
<codeline lineno="478" refid="create_analytic_geometry_8h_1a53b8d47f0745f99da7c42bb408632da2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a53b8d47f0745f99da7c42bb408632da2" kindref="member">sphereFaceID</ref><sp/>=<sp/>123;</highlight></codeline>
<codeline lineno="479" refid="create_analytic_geometry_8h_1a643a5d34bdffeab19e43426b8457c3ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref>;</highlight></codeline>
<codeline lineno="480" refid="create_analytic_geometry_8h_1a939bf538df7dfcbf550243746441b4d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[3];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="create_analytic_geometry_8cpp_1ada8e308f7061cd3fc6880a3aee32d7e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1ada8e308f7061cd3fc6880a3aee32d7e0" kindref="member">sphereFace</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p[2],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>x[0]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0]+<ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref>*cos(p[0])<sp/>*<sp/>sin(p[1]);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1]+<ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref>*sin(p[0])<sp/>*<sp/>sin(p[1]);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>x[2]<sp/>=<sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2]+<ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref>*cos(p[1]);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="create_analytic_geometry_8h_1adec1905579fa580af3aba5d2b6b962aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1adec1905579fa580af3aba5d2b6b962aa" kindref="member">makeSphere</ref>(gmi_model*<sp/>model)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faPer[2]<sp/>=<sp/>{1,<sp/>0};</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>faRan[2][2]<sp/>=<sp/>{{0,6.28318530718},{0.0,<ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">apf::pi</ref>}};</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>gmi_add_analytic(model,<sp/>2,<sp/><ref refid="create_analytic_geometry_8cpp_1a53b8d47f0745f99da7c42bb408632da2" kindref="member">sphereFaceID</ref>,<sp/><ref refid="create_analytic_geometry_8cpp_1ada8e308f7061cd3fc6880a3aee32d7e0" kindref="member">sphereFace</ref>,<sp/>faPer,<sp/>faRan,<sp/>0);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="create_analytic_geometry_8cpp_1a3ff68a2decfabb322b8495769e23fd58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="create_analytic_geometry_8cpp_1a3ff68a2decfabb322b8495769e23fd58" kindref="member">setParameterization</ref>(gmi_model*<sp/>model,apf::Mesh2*<sp/>m)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>classification<sp/>of<sp/>each<sp/>entity<sp/>in<sp/>the<sp/>SimMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>apf::MeshEntity*<sp/>ent;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=0;i&lt;4;i++)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>apf::MeshIterator*<sp/>it<sp/>=<sp/>m-&gt;begin(i);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(ent<sp/>=<sp/>m-&gt;iterate(it)))</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::ModelEntity*<sp/>g_ent<sp/>=<sp/>m-&gt;toModel(ent);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modelTag<sp/>=<sp/>m-&gt;getModelTag(g_ent);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modelType<sp/>=<sp/>m-&gt;getModelType(g_ent);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modelTag<sp/>&gt;<sp/>139<sp/>&amp;&amp;<sp/>modelTag&lt;<sp/>148)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;setModelEntity(ent,(apf::ModelEntity*)gmi_find(model,modelType,<ref refid="create_analytic_geometry_8cpp_1a53b8d47f0745f99da7c42bb408632da2" kindref="member">sphereFaceID</ref>));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;setModelEntity(ent,(apf::ModelEntity*)gmi_find(model,modelType,modelTag));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;end(it);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>m-&gt;setModel(model);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>m-&gt;acceptChanges();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>set<sp/>the<sp/>parametric<sp/>coordinates<sp/>of<sp/>each<sp/>of<sp/>the<sp/>boundary<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>std::map&lt;int,int&gt;<sp/>edgeParam;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeScales[12]<sp/>=<sp/>{0,1,0,1,0,1,0,1,2,2,2,2};</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>edgeLengths[3]<sp/>=<sp/>{<ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref>,<ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref>,<ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref>};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;12;i++)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>edgeParam[<ref refid="create_analytic_geometry_8cpp_1a667023f263e0de427542a5dcda34ed03" kindref="member">edgeMap</ref>[i]]<sp/>=<sp/>edgeScales[i];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>std::map&lt;int,int(*)[2]&gt;<sp/>faceParam;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faceScales[6][2]<sp/>=<sp/>{{0,2},{1,2},{0,2},{1,2},{0,1},{0,1}};</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;6;i++)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>faceParam[<ref refid="create_analytic_geometry_8cpp_1a9c5ad38cc52eb8617cb0d5064f449445" kindref="member">faceLoop</ref>[i]]<sp/>=<sp/>&amp;(faceScales[i]);<sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>apf::MeshIterator*<sp/>it<sp/>=<sp/>m-&gt;begin(0);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(ent<sp/>=<sp/>m-&gt;iterate(it))<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>apf::ModelEntity*<sp/>g_ent<sp/>=<sp/>m-&gt;toModel(ent);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>apf::MeshEntity*<sp/>ev[2];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;getDownward(ent,0,ev);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modelTag<sp/>=<sp/>m-&gt;getModelTag(g_ent);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modelType<sp/>=<sp/>m-&gt;getModelType(g_ent);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modelType&lt;3<sp/>&amp;&amp;<sp/>modelType!=0)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::Vector3<sp/>pt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::Vector3<sp/>oldParam;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::Vector3<sp/>newParam;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;getPoint(ent,0,pt);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;getParam(ent,oldParam);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modelType==1)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>relevantIndex<sp/>=<sp/>edgeParam[modelTag];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[0]=pt[relevantIndex]/edgeLengths[relevantIndex];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;setParam(ent,newParam);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modelType==2<sp/>&amp;&amp;<sp/>modelTag!=<ref refid="create_analytic_geometry_8cpp_1a53b8d47f0745f99da7c42bb408632da2" kindref="member">sphereFaceID</ref>)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>relevantIndex<sp/>=<sp/>faceParam[modelTag][0];<sp/></highlight><highlight class="comment">//size<sp/>is<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[0]<sp/>=<sp/>pt[relevantIndex[0]]/edgeLengths[relevantIndex[0]];</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[1]<sp/>=<sp/>pt[relevantIndex[1]]/edgeLengths[relevantIndex[1]];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;setParam(ent,newParam);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modelType==2<sp/>&amp;&amp;<sp/>modelTag<sp/>==<sp/><ref refid="create_analytic_geometry_8cpp_1a53b8d47f0745f99da7c42bb408632da2" kindref="member">sphereFaceID</ref>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>argy<sp/>=<sp/>(pt[1]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1]);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>argx<sp/>=<sp/>(pt[0]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0]);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argx<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>argy<sp/>==0)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[0]<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>sure<sp/>if<sp/>this<sp/>will<sp/>happen<sp/>or<sp/>if<sp/>this<sp/>is<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[0]<sp/>=<sp/>atan2(argy,argx);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arg2<sp/>=<sp/>(pt[2]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2])/<ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg2<sp/>&lt;<sp/>-1.0)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg2<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg2<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg2<sp/>=<sp/>1.0;<sp/></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[1]<sp/>=<sp/>acos(arg2);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newParam[0]&lt;0)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[0]<sp/>=<sp/>newParam[0]+2*<ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">apf::pi</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newParam[0]&gt;2*<ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">apf::pi</ref>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[0]<sp/>=<sp/>newParam[0]-2*<ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">apf::pi</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>probably<sp/>unnecessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newParam[1]&lt;0.0)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[1]<sp/>=<sp/>-1*newParam[1];</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newParam[1]&gt;<ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">apf::pi</ref>)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newParam[1]<sp/>=<sp/>-1*(newParam[1]-2.0*<ref refid="create_analytic_geometry_8cpp_1a43016d873124d39034edb8cd164794db" kindref="member">apf::pi</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;setParam(ent,newParam);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//end<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>m-&gt;end(it);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>m-&gt;acceptChanges();</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="class_mesh_adapt_p_u_m_i_drvr_1accc0b587f26e40fcd26adad679d69ba2" refkind="member"><highlight class="normal">gmi_model*<sp/><ref refid="class_mesh_adapt_p_u_m_i_drvr_1accc0b587f26e40fcd26adad679d69ba2" kindref="member">MeshAdaptPUMIDrvr::createSphereInBox</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>boxDim,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*sphereCenter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref><sp/>=<sp/>radius;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a764d47fb959003eee8c61950e98930e6" kindref="member">boxLength</ref><sp/>=<sp/>boxDim[0];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a17e0ae23e2e6851abaffbb8d90ee5af0" kindref="member">boxWidth</ref><sp/>=<sp/>boxDim[1];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1adf8727203915e79bfb80ef81abb88e3d" kindref="member">boxHeight</ref><sp/>=<sp/>boxDim[2];</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0]<sp/>=<sp/>sphereCenter[0];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1]<sp/>=<sp/>sphereCenter[1];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2]<sp/>=<sp/>sphereCenter[2];</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>lion_set_verbosity(1);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//create<sp/>the<sp/>analytic<sp/>model<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>gmi_model*<sp/>model<sp/>=<sp/>gmi_make_analytic();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1adec1905579fa580af3aba5d2b6b962aa" kindref="member">makeSphere</ref>(model);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a85e70baf5727dc20b6cf08102be0ff76" kindref="member">makeBox</ref>(model);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//apf::writeVtkFiles(&quot;initialInitial&quot;,m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a3ff68a2decfabb322b8495769e23fd58" kindref="member">setParameterization</ref>(model,m);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>m-&gt;verify();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//apf::Field*<sp/>size_initial<sp/>=<sp/>apf::createLagrangeField(m,&quot;size_initial&quot;,apf::SCALAR,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>size_iso<sp/>=<sp/>apf::createLagrangeField(m,</highlight><highlight class="stringliteral">&quot;proteus_size&quot;</highlight><highlight class="normal">,apf::SCALAR,1);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>apf::MeshIterator*<sp/>it<sp/>=<sp/>m-&gt;begin(0);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>apf::MeshEntity*<sp/>ent;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(ent<sp/>=<sp/>m-&gt;iterate(it))<sp/>)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>apf::Vector3<sp/>pt;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;getPoint(ent,0,pt);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sqrt(<sp/>(pt[0]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0])*(pt[0]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0])+<sp/>(pt[1]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1])*(pt[1]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1])<sp/>+<sp/>(pt[2]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2])*(pt[2]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2]))<sp/>&lt;<sp/><ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref>*1.5)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::setScalar(size_iso,ent,0,<ref refid="class_mesh_adapt_p_u_m_i_drvr_1aa8f0f76c30250e076414981543f84802" kindref="member">hmin</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::setScalar(size_iso,ent,0,<ref refid="class_mesh_adapt_p_u_m_i_drvr_1a55f731fc27f23d9560fb4778b7f1741e" kindref="member">hmax</ref>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>m-&gt;end(it);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><ref refid="class_mesh_adapt_p_u_m_i_drvr_1a1bb6d304aa4d38c9f32125b1036f2098" kindref="member">gradeMesh</ref>();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>ma::Input*<sp/>in<sp/>=<sp/>ma::configure(m,size_iso);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>in-&gt;maximumIterations<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>in-&gt;shouldSnap<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>in-&gt;shouldTransferParametric<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>in-&gt;shouldFixShape<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>in-&gt;debugFolder=</highlight><highlight class="stringliteral">&quot;./debug_fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>ma::adaptVerbose(in,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>m-&gt;verify();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//apf::writeVtkFiles(&quot;initialAdapt&quot;,m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>freeField(size_iso);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>size_iso<sp/>=<sp/>apf::createLagrangeField(m,</highlight><highlight class="stringliteral">&quot;proteus_size&quot;</highlight><highlight class="normal">,apf::SCALAR,1);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/>m-&gt;begin(0);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(ent<sp/>=<sp/>m-&gt;iterate(it))<sp/>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>apf::Vector3<sp/>pt;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;getPoint(ent,0,pt);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sqrt(<sp/>(pt[0]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0])*(pt[0]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0])+<sp/>(pt[1]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1])*(pt[1]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1])<sp/>+<sp/>(pt[2]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2])*(pt[2]-<ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2]))<sp/>&lt;<sp/><ref refid="create_analytic_geometry_8cpp_1a643a5d34bdffeab19e43426b8457c3ee" kindref="member">sphereRadius</ref>*1.5)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::setScalar(size_iso,ent,0,<ref refid="class_mesh_adapt_p_u_m_i_drvr_1aa8f0f76c30250e076414981543f84802" kindref="member">hmin</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apf::setScalar(size_iso,ent,0,<ref refid="class_mesh_adapt_p_u_m_i_drvr_1a55f731fc27f23d9560fb4778b7f1741e" kindref="member">hmax</ref>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>m-&gt;end(it);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="class_mesh_adapt_p_u_m_i_drvr_1a1bb6d304aa4d38c9f32125b1036f2098" kindref="member">gradeMesh</ref>();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>in<sp/>=<sp/>ma::configure(m,size_iso);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>in-&gt;maximumIterations<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>in-&gt;shouldSnap<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>in-&gt;shouldTransferParametric<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>in-&gt;shouldFixShape<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>in-&gt;debugFolder=</highlight><highlight class="stringliteral">&quot;./debug_fine&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>ma::adaptVerbose(in,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>m-&gt;verify();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//apf::writeVtkFiles(&quot;initialAdapt2&quot;,m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>freeField(size_iso);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690" refid="class_mesh_adapt_p_u_m_i_drvr_1af4c92859fd582354dd93f418e28524a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mesh_adapt_p_u_m_i_drvr_1af4c92859fd582354dd93f418e28524a6" kindref="member">MeshAdaptPUMIDrvr::updateSphereCoordinates</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*sphereCenter)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[0]<sp/>=<sp/>sphereCenter[0];</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[1]<sp/>=<sp/>sphereCenter[1];</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><ref refid="create_analytic_geometry_8cpp_1a939bf538df7dfcbf550243746441b4d6" kindref="member">xyz_offset</ref>[2]<sp/>=<sp/>sphereCenter[2];</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/MeshAdaptPUMI/createAnalyticGeometry.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="mesh_8cpp" kind="file" language="C++">
    <compoundname>mesh.cpp</compoundname>
    <includes refid="mesh_8h" local="yes">mesh.h</includes>
    <includes refid="meshio_8h" local="yes">meshio.h</includes>
    <includes local="no">set</includes>
    <includes local="no">valarray</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="7">
        <label>list</label>
      </node>
      <node id="14">
        <label>valarray</label>
      </node>
      <node id="9">
        <label>iomanip</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>cassert</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>mesh.cpp</label>
        <link refid="mesh_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>meshio.h</label>
        <link refid="meshio_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>set</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="2">
        <label>mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="mesh_8cpp_1a4b654506f18b8bfd61ad2a29a7e38c25" prot="public" static="no">
        <name>REAL</name>
        <initializer>double</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="30" column="9" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mesh_8cpp_1a491f6da261c28166f40ed737037919ed" prot="public" static="no">
        <name>REAL_LOCAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="31" column="9" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_ELEMENT_MATERIAL</definition>
        <argsstring></argsstring>
        <name>DEFAULT_ELEMENT_MATERIAL</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="48" column="11" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DEFAULT_NODE_MATERIAL</definition>
        <argsstring></argsstring>
        <name>DEFAULT_NODE_MATERIAL</name>
        <initializer>=-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="49" column="11" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int INTERIOR_NODE_MATERIAL</definition>
        <argsstring></argsstring>
        <name>INTERIOR_NODE_MATERIAL</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="50" column="11" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int EXTERIOR_NODE_MATERIAL</definition>
        <argsstring></argsstring>
        <name>EXTERIOR_NODE_MATERIAL</name>
        <initializer>=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="51" column="11" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int INTERIOR_ELEMENT_BOUNDARY_MATERIAL</definition>
        <argsstring></argsstring>
        <name>INTERIOR_ELEMENT_BOUNDARY_MATERIAL</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="52" column="11" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</definition>
        <argsstring></argsstring>
        <name>EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</name>
        <initializer>=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="53" column="11" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga61c67c5aed8dad35932ccf2f00b8589d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double CurrentTime</definition>
        <argsstring>(void)</argsstring>
        <name>CurrentTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="11" column="15" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="11" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gabc239fca1803721a81b882c99fc8a817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int edgeMeshElements</definition>
        <argsstring>(const int &amp;nx, Mesh &amp;mesh)</argsstring>
        <name>edgeMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="59" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="59" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga2dcef8d6600302d66dcc2a7261e5e506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularEdgeMeshNodes</definition>
        <argsstring>(const int &amp;nx, const double &amp;Lx, Mesh &amp;mesh)</argsstring>
        <name>regularEdgeMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="73" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga399d399e9ab8c6742aff3864d7e882a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularRectangularToTriangularMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, Mesh &amp;mesh, int triangleFlag)</argsstring>
        <name>regularRectangularToTriangularMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>triangleFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="88" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="88" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaeba813e2207db2b208be1bd5715a6f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularRectangularToTriangularElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularRectangularToTriangularElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="141" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="141" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga9b1a55a88d7b2238b2248a84f9ed5271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularRectangularToTriangularMeshNodes</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularRectangularToTriangularMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="168" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="168" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga867bc8cc7de1299c306dcb28bf401aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralToTetrahedralMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralToTetrahedralMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="199" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="199" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga02ba112acd0bc3cff45d7c317ba9d635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralToTetrahedralElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralToTetrahedralElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="234" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="234" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga372d10f8d5a2382ce7b71be9b0db2fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralMeshElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralMeshElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="278" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="278" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaadf7742fb4b66683f8a0e2788d297397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularQuadrilateralMeshElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularQuadrilateralMeshElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="328" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga73b4c6525541ecae499d2dc09b7f001b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularMeshNodes</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="333" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="333" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga44e77982690cf63f701bde2b8357bef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularMeshNodes2D</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularMeshNodes2D</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="380" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="380" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5fb49b127603edd31e6aab3b6e84f633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralToTetrahedralMeshNodes</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralToTetrahedralMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="418" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="418" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gae1179b86882c92ec58cc40b61010d0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const int &amp;px, const int &amp;py, const int &amp;pz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>px</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>py</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>pz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="431" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="431" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga554392b1260b82e3eaee5a4e02574f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularQuadrilateralMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, Mesh &amp;mesh)</argsstring>
        <name>regularQuadrilateralMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="473" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="473" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gae507f3c0e3b76aae899ebba0b0382653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularNURBSMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const int &amp;px, const int &amp;py, const int &amp;pz, Mesh &amp;mesh)</argsstring>
        <name>regularNURBSMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>px</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>py</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>pz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="501" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="501" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga0ca99f07f47c3775a54c126aa5b1cace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="582" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="582" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga99583103d5f83c1d3b073b917c782d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="740" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="740" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga17e8af5e2ec0c13e9c86f5e12eb4d4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="909" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="909" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga82076ed1124688014a6bc263ac24d3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="1078" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="1078" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga4751b505347ed744aa5495e1e43bd2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="1253" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="1253" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga2aea69a4233a90a4d2e7914ce6fdeb59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="1461" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="1461" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga928d08a58ffb5a778e738d6847115f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="1683" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="1683" bodyend="1887"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gabf2819715294cc6d161fdb1a30d3f6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="1889" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="1889" bodyend="2048"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa1b05cb9c4d42c1d435e36a21020e46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="2050" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="2050" bodyend="2222"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga12a7f52deabde430ed8174fc71e5b652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="2224" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="2224" bodyend="2395"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga56a12610c9dfc7c51ed3e6d633f375e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="2397" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="2397" bodyend="2573"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga71bd5b1f46b653a7be9c65b2af9499b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="2577" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="2577" bodyend="2730"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8fca2274c01965e94bc8855f7391332a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="2732" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="2732" bodyend="2905"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa187306a2346aeb53640156d1e1890fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="2907" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="2907" bodyend="3060"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf0f4c6fcb9b418b4096b9fe1a62329d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3062" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3062" bodyend="3239"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga11c306c06b8fe371531389373dac48d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3241" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3241" bodyend="3428"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double edgeLength</definition>
        <argsstring>(int nL, int nR, const double *nodeArray)</argsstring>
        <name>edgeLength</name>
        <param>
          <type>int</type>
          <declname>nL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nR</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3431" column="17" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3431" bodyend="3438"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8cpp_1af06f7e1e786558cbf2d6984584d5d830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double triangleArea</definition>
        <argsstring>(int n0, int n1, int n2, const double *nodeArray)</argsstring>
        <name>triangleArea</name>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3440" column="17" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3440" bodyend="3450"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8cpp_1a8c2f3bec0f21034ad7f142c5d7264d2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tetrahedronVolume</definition>
        <argsstring>(int n0, int n1, int n2, int n3, const double *nodeArray)</argsstring>
        <name>tetrahedronVolume</name>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3452" column="17" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3452" bodyend="3469"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad97db4b6e238c242afedd5fa8b914e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3471" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3471" bodyend="3481"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaff191b3e806b335cd6d0916218132c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3483" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3483" bodyend="3575"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8cpp_1ada45b0c82e2dd37e79b7e2c101803c1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double hexahedronVolume</definition>
        <argsstring>(int n0, int n1, int n2, int n3, int n4, int n5, int n6, int n7, const double *nodeArray)</argsstring>
        <name>hexahedronVolume</name>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n4</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n5</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n6</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n7</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3576" column="17" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3576" bodyend="3584"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga0d4a836f32fdf0cacb6250884aafe10b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3585" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3585" bodyend="3595"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gafdde7ba7852d7a8a4da1e3dc6bf91b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3597" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3597" bodyend="3675"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad36c6af3da3b8edd3b32f5dd8f7b5f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3677" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3677" bodyend="3681"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga0f4f89b6fc203f8443bc671f2ce24c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3683" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3683" bodyend="3687"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga1ad1cf0d175b08dec8e1ed161e065295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3690" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3690" bodyend="3700"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaad90ffdf6bb84d92b74bf824f8662a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3702" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3702" bodyend="3788"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga7a5874cc209a0c576ed8391e77111a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3790" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3790" bodyend="3798"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaad2c7d05554f0bb51a7ccfb6855baeb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3800" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3800" bodyend="3858"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8b4def6a8ea5675441b05b5a7061713b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3860" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3860" bodyend="3870"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga88041ad8d6afe29f23c6e30837b777db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3872" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3872" bodyend="3939"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac6cbf9a86158a88ef7393e0bfc997afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateNodeAndElementNodeDataStructures</definition>
        <argsstring>(Mesh &amp;mesh, int nElements_global, int nNodes_global, int nNodes_element)</argsstring>
        <name>allocateNodeAndElementNodeDataStructures</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNodes_element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3941" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3941" bodyend="3958"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gabe3df821ff4ab8aec3dd150a638b26e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineEdgeMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags)</argsstring>
        <name>globallyRefineEdgeMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="3961" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="3961" bodyend="4054"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac8f50ad63a717bf616c78b8390e7744e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineTriangularMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags)</argsstring>
        <name>globallyRefineTriangularMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4056" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4056" bodyend="4179"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad4add441d1af1fc56b191bb96304fe3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineQuadrilateralMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags)</argsstring>
        <name>globallyRefineQuadrilateralMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4181" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4181" bodyend="4198"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gab4d638c87ade6bd196a81384af108e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineTetrahedralMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags)</argsstring>
        <name>globallyRefineTetrahedralMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4200" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4200" bodyend="4483"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga68488c00a1abeb741d57a6e416c82a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineHexahedralMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags)</argsstring>
        <name>globallyRefineHexahedralMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4485" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4485" bodyend="4502"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8c801b37609c0f42a31d52ad7ad52dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int assignElementBoundaryMaterialTypesFromParent</definition>
        <argsstring>(Mesh &amp;parentMesh, Mesh &amp;childMesh, const int *levelElementParentsArray, const int &amp;nSpace_global)</argsstring>
        <name>assignElementBoundaryMaterialTypesFromParent</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>parentMesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>childMesh</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>levelElementParentsArray</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nSpace_global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4504" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4504" bodyend="4687"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac9bf9640ca027ca766ace6272e16400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readElements</definition>
        <argsstring>(std::istream &amp;meshFile, Mesh &amp;mesh)</argsstring>
        <name>readElements</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>meshFile</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4690" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4690" bodyend="4752"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga093904f19cdbf5c7f0076e6a6c56081e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeNodes</definition>
        <argsstring>(std::ostream &amp;meshFile, const Mesh &amp;mesh)</argsstring>
        <name>writeNodes</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>meshFile</declname>
        </param>
        <param>
          <type>const <ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4754" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4754" bodyend="4764"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga273d705930d0ad0775498d0be44c739d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeElements</definition>
        <argsstring>(std::ostream &amp;meshFile, const Mesh &amp;mesh)</argsstring>
        <name>writeElements</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>meshFile</declname>
        </param>
        <param>
          <type>const <ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4766" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4766" bodyend="4807"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gafb3cbd692f5aaeee1411ca2776b69db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setFromTriangleElements</definition>
        <argsstring>(triangulateio *trimesh, Mesh &amp;mesh, int base)</argsstring>
        <name>setFromTriangleElements</name>
        <param>
          <type>triangulateio *</type>
          <declname>trimesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4810" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4810" bodyend="4842"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5fdf05986fe93c06aad3ca6cdcadcb4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setFromTriangleNodes</definition>
        <argsstring>(triangulateio *trimesh, Mesh &amp;mesh, int base)</argsstring>
        <name>setFromTriangleNodes</name>
        <param>
          <type>triangulateio *</type>
          <declname>trimesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4844" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4844" bodyend="4880"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gae23507317ccd53c375b133ecd3b483c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int copyElementBoundaryMaterialTypesFromTriangle</definition>
        <argsstring>(triangulateio *trimesh, Mesh &amp;mesh, int base)</argsstring>
        <name>copyElementBoundaryMaterialTypesFromTriangle</name>
        <param>
          <type>triangulateio *</type>
          <declname>trimesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4882" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4882" bodyend="4915"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gab1c1f7cc1d5b1041de2941eb89df59a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTriangleMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int triangleIndexBase)</argsstring>
        <name>readTriangleMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>triangleIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4917" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4917" bodyend="4975"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga08c052ee267f328592995e357a2f023f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeTriangleMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int triangleIndexBase)</argsstring>
        <name>writeTriangleMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>triangleIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="4977" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="4977" bodyend="5005"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga2eb6d5e2b747bef66fe94c02182a6f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTriangleElementBoundaryMaterialTypes</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int triangleIndexBase)</argsstring>
        <name>readTriangleElementBoundaryMaterialTypes</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>triangleIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5007" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5007" bodyend="5063"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga1e23f5a53d60b3a60f8a62d641216a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTetgenMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int tetgenIndexBase)</argsstring>
        <name>readTetgenMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tetgenIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5065" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5065" bodyend="5123"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf88d232634fffcb9c0ca4d89636d8e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTetgenElementBoundaryMaterialTypes</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int tetgenIndexBase)</argsstring>
        <name>readTetgenElementBoundaryMaterialTypes</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tetgenIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5124" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5124" bodyend="5400"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gab46b1f709ad5c07ad957ab8366c84838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeTetgenMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int tetgenIndexBase)</argsstring>
        <name>writeTetgenMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tetgenIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5402" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5402" bodyend="5435"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga226ca058f8a8bb3741f729b4bbd68467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read3DM</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>read3DM</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5437" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5437" bodyend="5519"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5585bb85360aa0ce9512f685661094ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read2DM</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>read2DM</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5521" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5521" bodyend="5602"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac9c66ee0f6dbc487ee09b2b1fc0a0242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readHex</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>readHex</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5604" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5604" bodyend="5677"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga75f5fa8f64804d57c1e5742f67756106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readBC</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>readBC</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5679" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5679" bodyend="5716"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad89a88a5a0b744cb8809b15bb55b28f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write3dmMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int adhIndexBase)</argsstring>
        <name>write3dmMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>adhIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5717" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5717" bodyend="5736"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga3ea5e89286c9123ed49826f60722de05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write2dmMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int adhIndexBase)</argsstring>
        <name>write2dmMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>adhIndexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5737" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5737" bodyend="5756"/>
      </memberdef>
      <memberdef kind="function" id="mesh_8cpp_1a7bff604c3671cbd056db4d8768684326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int growMultilevelMesh</definition>
        <argsstring>(int nLevels2add, MultilevelMesh &amp;multilevelMesh)</argsstring>
        <name>growMultilevelMesh</name>
        <param>
          <type>int</type>
          <declname>nLevels2add</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5760" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5760" bodyend="5799"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf3b6657eb67edd06d7661efdd5eef570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineEdgeMesh</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineEdgeMesh</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5801" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5801" bodyend="5950"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga336f7c853f7c2889c3d57a0702ada9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineTriangleMesh</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineTriangleMesh</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="5951" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="5951" bodyend="6128"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga1837479558ffb93432b410f8eaf25b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setNewestNodeBasesToLongestEdge</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh)</argsstring>
        <name>setNewestNodeBasesToLongestEdge</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="6130" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="6130" bodyend="6156"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa0e013b44f0b757455a50e61f5e19db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineTriangleMesh_redGreen</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineTriangleMesh_redGreen</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="6158" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="6158" bodyend="6668"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaed3a370167525bf808917033346a7aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineTriangleMesh_4T</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineTriangleMesh_4T</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="6669" column="7" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="6669" bodyend="6844"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool newestNodeBisect</definition>
        <argsstring>(int eN, int &amp;nElements_global, int &amp;nNodes_global, std::vector&lt; double &gt; &amp;nodeArray, std::vector&lt; int &gt; &amp;elementNodesArray, std::vector&lt; int &gt; &amp;elementNeighborsArray, std::vector&lt; std::list&lt; int &gt; &gt; &amp;childrenList, std::vector&lt; int &gt; &amp;elementParentsArray, std::vector&lt; int &gt; &amp;bases, std::vector&lt; bool &gt; &amp;refined)</argsstring>
        <name>newestNodeBisect</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementNeighborsArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; std::list&lt; int &gt; &gt; &amp;</type>
          <declname>childrenList</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementParentsArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>bases</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="6847" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="6847" bodyend="7223"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8c0a09d2570b320080038656fb2efba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool add4TnodesForRefinement2d</definition>
        <argsstring>(int eN, int &amp;nNodes_global, std::vector&lt; bool &gt; &amp;refined, std::vector&lt; int &gt; &amp;edgeMidNodesArray, const int *elementNodesArray, const int *elementBoundariesArray, const int *elementNeighborsArray, const double *nodeArray)</argsstring>
        <name>add4TnodesForRefinement2d</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>edgeMidNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundariesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNeighborsArray</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="7225" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="7225" bodyend="7281"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5dce5689b08b93d8ae8d051e70e96391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool add4TnodesForConformity2d</definition>
        <argsstring>(int eN, int ebN_longest, int ebN_neig, int eN_neig, int &amp;nNodes_global, std::vector&lt; bool &gt; &amp;refined, std::vector&lt; int &gt; &amp;edgeMidNodesArray, const int *elementNodesArray, const int *elementBoundariesArray, const int *elementNeighborsArray, const double *nodeArray)</argsstring>
        <name>add4TnodesForConformity2d</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ebN_longest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ebN_neig</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eN_neig</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>edgeMidNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundariesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNeighborsArray</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="7283" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="7283" bodyend="7353"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int findLocalLongestEdge2d</definition>
        <argsstring>(int eN, const int *elementNodesArray, const double *nodeArray)</argsstring>
        <name>findLocalLongestEdge2d</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="7354" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="7354" bodyend="7380"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac307634f2b836753119cb91562215cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool subdivideTriangle4T</definition>
        <argsstring>(int eN_parent, int &amp;eN_new, int *elementParentsArray, int *elementChildrenOffsets, int *elementChildrenArray, int *elementNodesArray_child, const std::vector&lt; int &gt; &amp;edgeMidNodesArray, const std::vector&lt; bool &gt; &amp;refined, const int *elementNodesArray_parent, const int *elementBoundariesArray_parent, const double *nodeArray_parent)</argsstring>
        <name>subdivideTriangle4T</name>
        <param>
          <type>int</type>
          <declname>eN_parent</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>eN_new</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementParentsArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementChildrenOffsets</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementChildrenArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementNodesArray_child</declname>
        </param>
        <param>
          <type>const <ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>edgeMidNodesArray</declname>
        </param>
        <param>
          <type>const <ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray_parent</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundariesArray_parent</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="7382" column="6" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="7382" bodyend="7685"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="mesh_8cpp_1a8f06099f39f6296ef286875bf2a8b147" prot="public" static="no">
        <name>DEBUG_REFINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" line="2" column="10" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp" bodystart="2" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mesh_8h" kindref="compound">mesh.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="mesh_8cpp_1a8f06099f39f6296ef286875bf2a8b147" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_REFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">//****************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>*<sp/>local<sp/>(<sp/>static<sp/>)<sp/>function<sp/>prototypes<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CurrentTime(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>static<sp/>double<sp/>scale<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(0.0<sp/>==<sp/>scale)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mach_timebase_info_data_t<sp/>info;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mach_timebase_info(&amp;info);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>info.numer<sp/>/<sp/>info.denom<sp/>*<sp/>1e-9;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>mach_absolute_time()<sp/>*<sp/>scale;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CurrentTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//****************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>*<sp/>exported<sp/>function<sp/>implementations<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>REAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="mesh_8cpp_1a4b654506f18b8bfd61ad2a29a7e38c25" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REAL<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="mesh_8cpp_1a491f6da261c28166f40ed737037919ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REAL_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>PROTEUS_TRIANGLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>REAL_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>REAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meshio_8h" kindref="compound">meshio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;valarray&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//mwftodo<sp/>decide<sp/>where<sp/>to<sp/>put<sp/>mesh<sp/>type<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>=0;</highlight></codeline>
<codeline lineno="49" refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>=-1;</highlight></codeline>
<codeline lineno="50" refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>=0;</highlight></codeline>
<codeline lineno="51" refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>=1;</highlight></codeline>
<codeline lineno="52" refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>=0;</highlight></codeline>
<codeline lineno="53" refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>=1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//todo<sp/>compute<sp/>geometric<sp/>info,<sp/>node<sp/>star</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__mesh_1gabc239fca1803721a81b882c99fc8a817" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gabc239fca1803721a81b882c99fc8a817" kindref="member">edgeMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo<sp/>put<sp/>in<sp/>check<sp/>to<sp/>see<sp/>if<sp/>memory<sp/>was<sp/>allocated,<sp/>do<sp/>something<sp/>about<sp/>material<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nx;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>nx-1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>,<ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,eN=0;i&lt;nx-1;i++)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" kindref="member">newEdge</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,i,i+1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="group__mesh_1ga2dcef8d6600302d66dcc2a7261e5e506" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga2dcef8d6600302d66dcc2a7261e5e506" kindref="member">regularEdgeMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hx=Lx/(nx-1.0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,0,nx*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>interior<sp/>and<sp/>exterior<sp/>node<sp/>material<sp/>flags<sp/>after<sp/>get<sp/>boundary<sp/>info<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//constructElementBoundaryElementsArray_edge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterialTypes<sp/>left<sp/>as<sp/>DEFAULT_NODE_MATERIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,<ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nx;i++)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[i*3+0]=i*hx;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="group__mesh_1ga399d399e9ab8c6742aff3864d7e882a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga399d399e9ab8c6742aff3864d7e882a8" kindref="member">regularRectangularToTriangularMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triangleFlag)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>2*(nx-1)*(ny-1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nx*ny;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>,<ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>local<sp/>refinement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,eN=0;i&lt;ny-1;i++)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;nx-1;j++)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=(j+0)<sp/>+<sp/>(i+0)*nx,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=(j+1)<sp/>+<sp/>(i+0)*nx,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=(j+0)<sp/>+<sp/>(i+1)*nx,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n3<sp/>=(j+1)<sp/>+<sp/>(i+1)*nx;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uncomment<sp/>for<sp/>&quot;right<sp/>leaning&quot;<sp/>diagonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(triangleFlag<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n2,n1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n2,n3,n1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(triangleFlag<sp/>==<sp/>1)<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uncomment<sp/>for<sp/>union<sp/>jack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i%2<sp/>+<sp/>j%2<sp/>==<sp/>0<sp/>||<sp/>i%2<sp/>+<sp/>j%2<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n3,n1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n2,n3);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n2,n1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n2,n3,n1);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//right<sp/>leaning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n3,n1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n2,n3);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NW<sp/>element<sp/>is<sp/>(n0,n3,n1),<sp/>SE<sp/>element<sp/>is<sp/>(n0,n2,n3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eN<sp/>was<sp/>incremented<sp/>twice<sp/>just<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>[eN-2]<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//SE<sp/>across<sp/>from<sp/>node<sp/>n1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>[eN-1]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//NW<sp/>is<sp/>across<sp/>from<sp/>node<sp/>n2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="group__mesh_1gaeba813e2207db2b208be1bd5715a6f8b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaeba813e2207db2b208be1bd5715a6f8b" kindref="member">regularRectangularToTriangularElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN,nN_0,nN_1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_0,y_0,x_1,y_1,epsilon=1.0e-8;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+0];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+1];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+0];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+1];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>y_1<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_0<sp/>&gt;=<sp/>Ly<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>y_1<sp/>&gt;=<sp/>Ly<sp/>-<sp/><sp/>epsilon)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>x_1<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_0<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>x_1<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="group__mesh_1ga9b1a55a88d7b2238b2248a84f9ed5271" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga9b1a55a88d7b2238b2248a84f9ed5271" kindref="member">regularRectangularToTriangularMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hx=Lx/(nx-1.0),hy=Ly/(ny-1.0);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>interior<sp/>and<sp/>exterior<sp/>node<sp/>material<sp/>flags<sp/>after<sp/>get<sp/>boundary<sp/>info<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//constructElementBoundaryElementsArray_edge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterialTypes<sp/>left<sp/>as<sp/>DEFAULT_NODE_MATERIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,<ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;ny;i++)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;nx;j++)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN<sp/>=<sp/>i*nx+j;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+0]=j*hx;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+1]=i*hy;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==0)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==ny-1)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j==0)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==nx-1)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="199" refid="group__mesh_1ga867bc8cc7de1299c306dcb28bf401aa2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga867bc8cc7de1299c306dcb28bf401aa2" kindref="member">regularHexahedralToTetrahedralMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=nx*ny*nz;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>6*(nx-1)*(ny-1)*(nz-1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nxy=nx*ny;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>,<ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,eN=0;i&lt;nz-1;i++)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;ny-1;j++)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;k&lt;nx-1;k++)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>(k+0)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>(k+1)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>(k+0)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n3<sp/>=<sp/>(k+1)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n4<sp/>=<sp/>(k+0)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+1)*nxy,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n5<sp/>=<sp/>(k+1)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+1)*nxy,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n6<sp/>=<sp/>(k+0)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+1)*nxy,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n7<sp/>=<sp/>(k+1)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+1)*nxy;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n1,n3,n7);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n1,n5,n7);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n2,n3,n7);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n2,n6,n7);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n4,n5,n7);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,n0,n4,n6,n7);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="group__mesh_1ga02ba112acd0bc3cff45d7c317ba9d635" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga02ba112acd0bc3cff45d7c317ba9d635" kindref="member">regularHexahedralToTetrahedralElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN,nN_0,nN_1,nN_2;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_0,y_0,z_0,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,y_1,z_1,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,y_2,z_2,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsilon=1.0e-8;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+0];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+1];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+2];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+0];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+1];<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+2];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_2*3+0];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_2*3+1];<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_2*3+2];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>z_1<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>z_2<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z_0<sp/>&gt;=<sp/>Lz<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>z_1<sp/>&gt;=<sp/>Lz<sp/>-<sp/><sp/>epsilon<sp/>&amp;&amp;<sp/>z_2<sp/>&gt;=<sp/>Lz<sp/>-<sp/><sp/>epsilon)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>y_1<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>y_2<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_0<sp/>&gt;=<sp/>Ly<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>y_1<sp/>&gt;=<sp/>Ly<sp/>-<sp/><sp/>epsilon<sp/>&amp;&amp;<sp/>y_2<sp/>&gt;=<sp/>Ly<sp/>-<sp/><sp/>epsilon)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>x_1<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>x_2<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_0<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>x_1<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>x_2<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="278" refid="group__mesh_1ga372d10f8d5a2382ce7b71be9b0db2fbe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga372d10f8d5a2382ce7b71be9b0db2fbe" kindref="member">regularHexahedralMeshElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN,nN_0,nN_1,nN_2,<sp/>nN_3;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_0,y_0,z_0,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,y_1,z_1,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,y_2,z_2,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_3,y_3,z_3,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsilon=1.0e-8;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_3<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+0];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+1];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_0<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_0*3+2];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+0];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+1];<sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_1*3+2];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_2*3+0];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_2*3+1];<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_2<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_2*3+2];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_3<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_3*3+0];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_3<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_3*3+1];<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_3<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_3*3+2];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>z_1<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>z_2<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>z_3<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z_0<sp/>&gt;=<sp/>Lz<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>z_1<sp/>&gt;=<sp/>Lz<sp/>-<sp/><sp/>epsilon<sp/>&amp;&amp;<sp/>z_2<sp/>&gt;=<sp/>Lz<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>z_3<sp/>&gt;=<sp/>Lz<sp/>-<sp/><sp/>epsilon)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>y_1<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>y_2<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>y_3<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_0<sp/>&gt;=<sp/>Ly<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>y_1<sp/>&gt;=<sp/>Ly<sp/>-<sp/><sp/>epsilon<sp/>&amp;&amp;<sp/>y_2<sp/>&gt;=<sp/>Ly<sp/>-<sp/><sp/>epsilon<sp/>&amp;&amp;<sp/>y_3<sp/>&gt;=<sp/>Ly<sp/>-<sp/><sp/>epsilon)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_0<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>x_1<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>x_2<sp/>&lt;=<sp/>epsilon<sp/>&amp;&amp;<sp/>x_3<sp/>&lt;=<sp/>epsilon)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_0<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>x_1<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>x_2<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon<sp/>&amp;&amp;<sp/>x_3<sp/>&gt;=<sp/>Lx<sp/>-<sp/>epsilon)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group__mesh_1gaadf7742fb4b66683f8a0e2788d297397" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaadf7742fb4b66683f8a0e2788d297397" kindref="member">regularQuadrilateralMeshElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gaeba813e2207db2b208be1bd5715a6f8b" kindref="member">regularRectangularToTriangularElementBoundaryMaterials</ref>(Lx,<sp/>Ly,<sp/>mesh);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="333" refid="group__mesh_1ga73b4c6525541ecae499d2dc09b7f001b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga73b4c6525541ecae499d2dc09b7f001b" kindref="member">regularMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nxy=nx*ny;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hx=Lx/(nx-1.0),</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hy=Ly/(ny-1.0),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hz=Lz/(nz-1.0);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=nx*ny*nz;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>interior<sp/>and<sp/>exterior<sp/>node<sp/>material<sp/>flags<sp/>after<sp/>get<sp/>boundary<sp/>info<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//constructElementBoundaryElementsArray_edge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterialTypes<sp/>left<sp/>as<sp/>DEFAULT_NODE_MATERIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,<ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nz;i++)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;ny;j++)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;k&lt;nx;k++)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN<sp/>=<sp/>k<sp/>+<sp/>j*nx<sp/>+<sp/>i*nxy;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+0]=k*hx;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+1]=j*hy;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+2]=i*hz;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==0)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==nz-1)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j==0)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==ny-1)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k==0)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==nx-1)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group__mesh_1ga44e77982690cf63f701bde2b8357bef9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga44e77982690cf63f701bde2b8357bef9" kindref="member">regularMeshNodes2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hx=Lx/(nx-1.0),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hy=Ly/(ny-1.0);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=nx*ny;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>interior<sp/>and<sp/>exterior<sp/>node<sp/>material<sp/>flags<sp/>after<sp/>get<sp/>boundary<sp/>info<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//constructElementBoundaryElementsArray_edge<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterialTypes<sp/>left<sp/>as<sp/>DEFAULT_NODE_MATERIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,<ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;ny;j++)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;k&lt;nx;k++)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN<sp/>=<sp/>k*ny<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+0]=k*hx;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+1]=j*hy;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+2]=0.0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j==0)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==ny-1)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k==0)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==nx-1)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group__mesh_1ga5fb49b127603edd31e6aab3b6e84f633" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5fb49b127603edd31e6aab3b6e84f633" kindref="member">regularHexahedralToTetrahedralMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga73b4c6525541ecae499d2dc09b7f001b" kindref="member">regularMeshNodes</ref>(nx,ny,nz,Lx,Ly,Lz,mesh);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;regularHexahedralToTetrahedralMeshNodes<sp/>is<sp/>Deprecated\n&quot;;<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431" refid="group__mesh_1gae1179b86882c92ec58cc40b61010d0e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gae1179b86882c92ec58cc40b61010d0e1" kindref="member">regularHexahedralMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,<sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>px,<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>py,<sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>pz,<sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=nx*ny*nz;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>(nx-1)*(ny-1)*(nz-1);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nxy=nx*ny;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a05eb17a6df74f735b305bbe456d1d84f" kindref="member">nx</ref>=nx;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad94801e2c9bd9c7e66deefad68f5707d" kindref="member">ny</ref>=ny;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" kindref="member">nz</ref>=nz;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.px=px;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.py=py;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.pz=pz;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>,<ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nz-1;i++)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;ny-1;j++)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;k&lt;nx-1;k++)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga93e498155737b8aca6e6d858e4958db1" kindref="member">newHexahedron</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+0)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+1)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+1)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+0)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+0)*nxy,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+0)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+1)*nxy,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+1)<sp/>+<sp/>(j+0)*nx<sp/>+<sp/>(i+1)*nxy,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+1)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+1)*nxy,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+0)<sp/>+<sp/>(j+1)*nx<sp/>+<sp/>(i+1)*nxy);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="473" refid="group__mesh_1ga554392b1260b82e3eaee5a4e02574f5b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga554392b1260b82e3eaee5a4e02574f5b" kindref="member">regularQuadrilateralMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=nx*ny;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>(nx-1)*(ny-1);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a05eb17a6df74f735b305bbe456d1d84f" kindref="member">nx</ref>=nx;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad94801e2c9bd9c7e66deefad68f5707d" kindref="member">ny</ref>=ny;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" kindref="member">nz</ref>=1;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>,<ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;ny-1;j++)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;k&lt;nx-1;k++)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN=<ref refid="group__mesh_1ga4dce22164025e81bd9577bdd7a52f005" kindref="member">newQuadrilateral</ref>(eN,mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+0)*ny<sp/>+<sp/>(j+0),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+0)*ny<sp/>+<sp/>(j+1),</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+1)*ny<sp/>+<sp/>(j+1),</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(k+1)*ny<sp/>+<sp/>(j+0));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="501" refid="group__mesh_1gae507f3c0e3b76aae899ebba0b0382653" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gae507f3c0e3b76aae899ebba0b0382653" kindref="member">regularNURBSMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>px,<sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>py,<sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>pz,<sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>(px+1)*(py+1)*(pz+1);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=nx*ny*nz;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>(nx-px)*(ny-py)*(nz-pz);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a05eb17a6df74f735b305bbe456d1d84f" kindref="member">nx</ref>=nx;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad94801e2c9bd9c7e66deefad68f5707d" kindref="member">ny</ref>=ny;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" kindref="member">nz</ref>=nz;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>=px;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>=py;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref>=pz;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nxy=nx*ny;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//memset(mesh.elementMaterialTypes,DEFAULT_ELEMENT_MATERIAL,mesh.nElements_global*sizeof(int));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nz-px;i++)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;ny-py;j++)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;k&lt;nx-pz;k++)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref>[eN*3+0]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref>[eN*3+1]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref>[eN*3+2]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii=0;ii&lt;px+1;ii++)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj=0;jj&lt;py+1;jj++)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk=0;kk&lt;pz+1;kk++)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+sN]<sp/>=<sp/>(k+kk)<sp/>+<sp/>(j+jj)*nx<sp/>+<sp/>(i+ii)*nxy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sN++;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[nx+px+1];<sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[ny+py+1];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[nz+pz+1];</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;px+1;i++)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=px+1;i&lt;nx;i++)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref>[i]<sp/>=<sp/>double(i-px-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=nx;i&lt;nx+px+1;i++)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref>[i]<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(nx);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;py+1;i++)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=py+1;i&lt;ny;i++)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref>[i]<sp/>=<sp/>double(i-py-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=ny;i&lt;ny+py+1;i++)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref>[i]<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(ny);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;pz+1;i++)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=pz+1;i&lt;pz;i++)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref>[i]<sp/>=<sp/>double(i-pz-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=nz;i&lt;nz+pz+1;i++)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref>[i]<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(nz);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a793f466f5106361d2dec620afdb58db3" kindref="member">weights</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;i++)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a793f466f5106361d2dec620afdb58db3" kindref="member">weights</ref>[i]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;NURBS<sp/>MESH<sp/>BUILD&quot;&lt;&lt;std::endl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="group__mesh_1ga0ca99f07f47c3775a54c126aa5b1cace" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga0ca99f07f47c3775a54c126aa5b1cace" kindref="member">constructElementBoundaryElementsArray_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;1&gt;,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;2;ebN++)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[1];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+(ebN+1)%2];</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;1&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;1&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++,ebN++)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//edges<sp/>are<sp/>elements<sp/>in<sp/>1D<sp/>so<sp/>we<sp/>just<sp/>copy<sp/>over<sp/>but<sp/>could<sp/>be<sp/>slicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*2];</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+0];</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+1];</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="group__mesh_1ga99583103d5f83c1d3b073b917c782d69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga99583103d5f83c1d3b073b917c782d69" kindref="member">constructElementBoundaryElementsArray_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;3;ebN++)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+(ebN+1)%3];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+(ebN+2)%3];</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++,ebN++)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+nN_L];</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+nN_R];</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>&gt;::iterator<sp/>edgeTuple_p=edges.begin();edgeTuple_p<sp/>!=<sp/>edges.end();edgeTuple_p++,edgeN++)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edgeTuple_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edgeTuple_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>actual<sp/>values<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="group__mesh_1ga17e8af5e2ec0c13e9c86f5e12eb4d4b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga17e8af5e2ec0c13e9c86f5e12eb4d4b9" kindref="member">constructElementBoundaryElementsArray_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;4;ebN++)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+ebN];</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+(ebN+1)%4];</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;nElementBoundaries_global<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++,ebN++)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_L];</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_R];</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>&gt;::iterator<sp/>edgeTuple_p=edges.begin();edgeTuple_p<sp/>!=<sp/>edges.end();edgeTuple_p++,edgeN++)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edgeTuple_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edgeTuple_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>actual<sp/>values<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078" refid="group__mesh_1ga82076ed1124688014a6bc263ac24d3ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga82076ed1124688014a6bc263ac24d3ae" kindref="member">constructElementBoundaryElementsArray_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+1)%4)];</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+2)%4)];</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+3)%4)];</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++,ebN++)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes[2];</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_L];</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_R];</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253" refid="group__mesh_1ga4751b505347ed744aa5495e1e43bd2bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga4751b505347ed744aa5495e1e43bd2bc" kindref="member">constructElementBoundaryElementsArray_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;4&gt;,</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lface[6][4]<sp/>=<sp/>{{0,1,2,3},</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,1,5,4},</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1,2,6,5},</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,3,7,6},</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3,0,4,7},</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,5,6,7}};</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[4];</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][0]];</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][1]];</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][2]];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[3]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][3]];</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++,ebN++)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes_unsorted[0];</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes_unsorted[1];</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes_unsorted[2];</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>3]<sp/>=<sp/>eb-&gt;first.nodes_unsorted[3];</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ledge[12][2]<sp/>=<sp/>{{0,1},{1,2},{2,3},{3,0},</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,4},{1,5},{2,6},{3,7},</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,5},{5,6},{6,7},{7,4}};</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e=0;e&lt;12;e++)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+ledge[e][0]];</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+ledge[e][1]];</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Extracting<sp/>nodeStar&quot;&lt;&lt;std::endl;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Extracting<sp/>nodeElementsStar&quot;&lt;&lt;std::endl;<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Set<sp/>material<sp/>types&quot;&lt;&lt;std::endl;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461" refid="group__mesh_1ga2aea69a4233a90a4d2e7914ce6fdeb59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga2aea69a4233a90a4d2e7914ce6fdeb59" kindref="member">constructElementBoundaryElementsArray_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref><sp/>;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)-1<sp/>;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n4<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n0;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n5<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n1;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n6<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n7<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n3;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"><sp/>std;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref>,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lface[6][4]<sp/>=<sp/>{{n0,n1,n2,n3},</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n0,n1,n5,n4},</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n1,n2,n6,n5},</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n2,n3,n7,n6},</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n3,n0,n4,n7},</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n4,n5,n6,n7}};</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[4];</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][0]];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][1]];</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][2]];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[3]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][3]];</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++,ebN++)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes[2];</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>3]<sp/>=<sp/>eb-&gt;first.nodes[3];</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ledge[12][2]<sp/>=<sp/>{{n0,n1},{n1,n2},{n2,n3},{n3,n0},</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n0,n4},{n1,n5},{n2,n6},{n3,n7},</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n4,n5},{n5,n6},{n6,n7},{n7,n4}};</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e=0;e&lt;12;e++)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+ledge[e][0]];</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+ledge[e][1]];</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1683" refid="group__mesh_1ga928d08a58ffb5a778e738d6847115f47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga928d08a58ffb5a778e738d6847115f47" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1<sp/>=<sp/>mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref><sp/>;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)-1<sp/>;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n4<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n0;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n5<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n1;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n6<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n7<sp/>=<sp/>(mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>+1)*(mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>+1)*mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref><sp/>+<sp/>n3;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;4&gt;,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;4&gt;,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lface[6][4]<sp/>=<sp/>{{n0,n1,n2,n3},</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n0,n1,n5,n4},</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n1,n2,n6,n5},</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n2,n3,n7,n6},</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n3,n0,n4,n7},</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{n4,n5,n6,n7}};</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+ebN];</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[4];</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][0]];</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][1]];</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][2]];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[3]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][3]];</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes[2];</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>3]<sp/>=<sp/>eb-&gt;first.nodes[3];</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert(mesh.elementBoundariesArray[eb-&gt;second.left*mesh.nElementBoundaries_element<sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>assert(mesh.elementBoundariesArray[eb-&gt;second.right*mesh.nElementBoundaries_element<sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cek/ido<sp/>todo<sp/>figure<sp/>out<sp/>how<sp/>to<sp/>do<sp/>this<sp/>or<sp/>if<sp/>it&apos;s<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>assert(mesh.edgeNodesArray);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//std::cout&lt;&lt;&quot;extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>eN=0;eN&lt;mesh.nElements_global;eN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nodes[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_L=0;nN_L&lt;mesh.nNodes_element;nN_L++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_R=nN_L+1;nN_R&lt;mesh.nNodes_element;nN_R++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.elementNodesArray[eN*4+nN_L];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.elementNodesArray[eN*4+nN_R];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(NodeTuple&lt;2&gt;(nodes));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.nEdges_global<sp/>=<sp/>edges.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray<sp/>=<sp/>new<sp/>int[mesh.nEdges_global*2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889" refid="group__mesh_1gabf2819715294cc6d161fdb1a30d3f6ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gabf2819715294cc6d161fdb1a30d3f6ee" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;1&gt;,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;1&gt;,</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;2;ebN++)</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*2+ebN];</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[1];</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+(ebN+1)%2];</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;1&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;1&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//edges<sp/>are<sp/>elements<sp/>in<sp/>1D<sp/>so<sp/>we<sp/>just<sp/>copy<sp/>over<sp/>but<sp/>could<sp/>be<sp/>slicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*2];</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+0];</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+1];</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050" refid="group__mesh_1gaa1b05cb9c4d42c1d435e36a21020e46f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa1b05cb9c4d42c1d435e36a21020e46f" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;3;ebN++)</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*3+ebN];</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+(ebN+1)%3];</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+(ebN+2)%3];</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+nN_L];</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+nN_R];</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>&gt;::iterator<sp/>edgeTuple_p=edges.begin();edgeTuple_p<sp/>!=<sp/>edges.end();edgeTuple_p++,edgeN++)</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edgeTuple_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edgeTuple_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>actual<sp/>values<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2224" refid="group__mesh_1ga12a7f52deabde430ed8174fc71e5b652" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga12a7f52deabde430ed8174fc71e5b652" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;4;ebN++)</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*4+ebN];</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+ebN];</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+(ebN+1)%4];</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_L];</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+(nN_L+1)%4];</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>&gt;::iterator<sp/>edgeTuple_p=edges.begin();edgeTuple_p<sp/>!=<sp/>edges.end();edgeTuple_p++,edgeN++)</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edgeTuple_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edgeTuple_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>actual<sp/>values<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397" refid="group__mesh_1ga56a12610c9dfc7c51ed3e6d633f375e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga56a12610c9dfc7c51ed3e6d633f375e3" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+ebN];</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+1)%4)];</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+2)%4)];</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+3)%4)];</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes[2];</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_L];</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_R];</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577" refid="group__mesh_1ga71bd5b1f46b653a7be9c65b2af9499b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga71bd5b1f46b653a7be9c65b2af9499b4" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;1&gt;,</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;1&gt;,</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;2;ebN++)</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*2+ebN];</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[1];</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+(ebN+1)%2];</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;1&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;1&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]);</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[eN*2+0]);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732" refid="group__mesh_1ga8fca2274c01965e94bc8855f7391332a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8fca2274c01965e94bc8855f7391332a" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;3;ebN++)</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*3+ebN];</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+(ebN+1)%3];</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+(ebN+2)%3];</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>);</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>eN=0;eN&lt;mesh.nElements_global;eN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nodes[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_L=0;nN_L&lt;mesh.nNodes_element;nN_L++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_R=nN_L+1;nN_R&lt;mesh.nNodes_element;nN_R++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.elementNodesArray[eN*3+nN_L];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.elementNodesArray[eN*3+nN_R];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(NodeTuple&lt;2&gt;(nodes));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.nEdges_global<sp/>=<sp/>edges.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray<sp/>=<sp/>new<sp/>int[mesh.nEdges_global*2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>edgeN=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edgeTuple_p=edges.begin();edgeTuple_p<sp/>!=<sp/>edges.end();edgeTuple_p++,edgeN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+0]<sp/>=<sp/>edgeTuple_p-&gt;nodes[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+1]<sp/>=<sp/>edgeTuple_p-&gt;nodes[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>actual<sp/>values<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight></codeline>
<codeline lineno="2907" refid="group__mesh_1gaa187306a2346aeb53640156d1e1890fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa187306a2346aeb53640156d1e1890fe" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Constructing<sp/>element<sp/>boundary<sp/>map&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;4;ebN++)</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*4+ebN];</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+ebN];</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+(ebN+1)%4];</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Populating<sp/>arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]+nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>actual<sp/>values<sp/>elsewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062" refid="group__mesh_1gaf0f4c6fcb9b418b4096b9fe1a62329d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf0f4c6fcb9b418b4096b9fe1a62329d3" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+ebN];</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+1)%4)];</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+2)%4)];</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+3)%4)];</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementBoundaryIds[ebt]<sp/>==<sp/>ebN_global);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes[2];</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>);</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//std::cout&lt;&lt;&quot;extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>eN=0;eN&lt;mesh.nElements_global;eN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nodes[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_L=0;nN_L&lt;mesh.nNodes_element;nN_L++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_R=nN_L+1;nN_R&lt;mesh.nNodes_element;nN_R++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.elementNodesArray[eN*4+nN_L];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.elementNodesArray[eN*4+nN_R];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(NodeTuple&lt;2&gt;(nodes));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.nEdges_global<sp/>=<sp/>edges.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray<sp/>=<sp/>new<sp/>int[mesh.nEdges_global*2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight></codeline>
<codeline lineno="3241" refid="group__mesh_1ga11c306c06b8fe371531389373dac48d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga11c306c06b8fe371531389373dac48d5" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;4&gt;,</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;4&gt;,</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>elementBoundaryIds;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lface[6][4]<sp/>=<sp/>{{0,1,2,3},</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,1,5,4},</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1,2,6,5},</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,3,7,6},</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3,0,4,7},</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,5,6,7}};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_global<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+ebN];</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[4];</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][0]];</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][1]];</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][2]];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[3]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+lface[ebN][3]];</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryIds.insert(elementBoundaryIds.end(),make_pair(ebt,ebN_global));</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref><sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>];</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*2];</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;4&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++)</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundaryIds[eb-&gt;first];</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes[2];</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4<sp/>+<sp/>3]<sp/>=<sp/>eb-&gt;first.nodes[3];</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interiorElementBoundaries.insert(ebN);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>==<sp/>ebN);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref><sp/>=<sp/>interiorElementBoundaries.size();</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>=<sp/>exteriorElementBoundaries.size();</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI=0,ebNE=0;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE]<sp/>=<sp/>*ebN;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>);</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//std::cout&lt;&lt;&quot;extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>eN=0;eN&lt;mesh.nElements_global;eN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nodes[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_L=0;nN_L&lt;mesh.nNodes_element;nN_L++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>nN_R=nN_L+1;nN_R&lt;mesh.nNodes_element;nN_R++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.elementNodesArray[eN*4+nN_L];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.elementNodesArray[eN*4+nN_R];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(NodeTuple&lt;2&gt;(nodes));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.nEdges_global<sp/>=<sp/>edges.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray<sp/>=<sp/>new<sp/>int[mesh.nEdges_global*2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.edgeNodesArray[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431" refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nL,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nR,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>nodeArray)</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,dy,dz;</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>nodeArray[nL*3+0]<sp/>-<sp/>nodeArray[nR*3+0];</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>nodeArray[nL*3+1]<sp/>-<sp/>nodeArray[nR*3+1];</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/>dz<sp/>=<sp/>nodeArray[nL*3+2]<sp/>-<sp/>nodeArray[nR*3+2];</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(dx*dx+dy*dy+dz*dz);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440" refid="mesh_8cpp_1af06f7e1e786558cbf2d6984584d5d830" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1af06f7e1e786558cbf2d6984584d5d830" kindref="member">triangleArea</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>nodeArray)</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>va[3],vb[3];</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>va[0]<sp/>=<sp/>nodeArray[n1*3+0]<sp/>-<sp/>nodeArray[n0*3+0];</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>va[1]<sp/>=<sp/>nodeArray[n1*3+1]<sp/>-<sp/>nodeArray[n0*3+1];</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/>va[2]<sp/>=<sp/>nodeArray[n1*3+2]<sp/>-<sp/>nodeArray[n0*3+2];</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>vb[0]<sp/>=<sp/>nodeArray[n2*3+0]<sp/>-<sp/>nodeArray[n0*3+0];</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/>vb[1]<sp/>=<sp/>nodeArray[n2*3+1]<sp/>-<sp/>nodeArray[n0*3+1];</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/>vb[2]<sp/>=<sp/>nodeArray[n2*3+2]<sp/>-<sp/>nodeArray[n0*3+2];</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5*fabs(va[1]*vb[2]<sp/>-<sp/>vb[1]*va[2]<sp/>-<sp/>(va[0]*vb[2]<sp/>-<sp/>vb[0]*va[2])<sp/>+<sp/>(va[0]*vb[1]<sp/>-<sp/>va[1]*vb[0]));</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452" refid="mesh_8cpp_1a8c2f3bec0f21034ad7f142c5d7264d2e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1a8c2f3bec0f21034ad7f142c5d7264d2e" kindref="member">tetrahedronVolume</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>nodeArray)</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t[3][3];</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/>t[0][0]<sp/>=<sp/>nodeArray[n1*3+0]<sp/>-<sp/>nodeArray[n0*3+0];</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/>t[0][1]<sp/>=<sp/>nodeArray[n1*3+1]<sp/>-<sp/>nodeArray[n0*3+1];</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/>t[0][2]<sp/>=<sp/>nodeArray[n1*3+2]<sp/>-<sp/>nodeArray[n0*3+2];</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/>t[1][0]<sp/>=<sp/>nodeArray[n2*3+0]<sp/>-<sp/>nodeArray[n0*3+0];</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/>t[1][1]<sp/>=<sp/>nodeArray[n2*3+1]<sp/>-<sp/>nodeArray[n0*3+1];</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/>t[1][2]<sp/>=<sp/>nodeArray[n2*3+2]<sp/>-<sp/>nodeArray[n0*3+2];</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/>t[2][0]<sp/>=<sp/>nodeArray[n3*3+0]<sp/>-<sp/>nodeArray[n0*3+0];</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/>t[2][1]<sp/>=<sp/>nodeArray[n3*3+1]<sp/>-<sp/>nodeArray[n0*3+1];</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/>t[2][2]<sp/>=<sp/>nodeArray[n3*3+2]<sp/>-<sp/>nodeArray[n0*3+2];</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(t[0][0]*(t[1][1]*t[2][2]<sp/>-<sp/>t[1][2]*t[2][1])<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][1]*(t[1][0]*t[2][2]<sp/>-<sp/>t[1][2]*t[2][0])<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][2]*(t[1][0]*t[2][1]<sp/>-<sp/>t[1][1]*t[2][0]))/6.0;</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight></codeline>
<codeline lineno="3471" refid="group__mesh_1gad97db4b6e238c242afedd5fa8b914e3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad97db4b6e238c242afedd5fa8b914e3e" kindref="member">allocateGeometricInfo_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*3];</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight></codeline>
<codeline lineno="3483" refid="group__mesh_1gaff191b3e806b335cd6d0916218132c96" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaff191b3e806b335cd6d0916218132c96" kindref="member">computeGeometricInfo_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[0],</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[1],</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemInv<sp/>=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>);</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemBInv=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;ebN++)</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;nN_L++)</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_L]*3<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_L]*3<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_L]*3<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;nN_R++)<sp/>{</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>[ebN]<sp/>=<sp/>fmax(mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>[ebN],</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+nN_L],</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+nN_R],</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>));</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>volume,<sp/>surfaceArea=0.0,<sp/>hMin=0.0,hMax=0.0;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume<sp/>=<sp/><ref refid="mesh_8cpp_1a8c2f3bec0f21034ad7f142c5d7264d2e" kindref="member">tetrahedronVolume</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+0],</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+1],</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+2],</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+3],</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>faces<sp/>to<sp/>get<sp/>surface<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;4;ebN++)</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surfaceArea<sp/>+=<sp/><ref refid="mesh_8cpp_1af06f7e1e786558cbf2d6984584d5d830" kindref="member">triangleArea</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+(ebN+1)%4],</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+(ebN+2)%4],</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+(ebN+3)%4],</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMin<sp/>=<sp/>6.0*volume/surfaceArea;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hMax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMax<sp/>=<sp/>fmax(hMax,</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_L],</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_R],</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>));</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>[eN]<sp/>=<sp/>hMin;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]<sp/>=<sp/>hMax;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" kindref="member">volume</ref><sp/>+=<sp/>volume;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref><sp/>=<sp/>fmax(hMax/hMin,mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref>);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref><sp/>=<sp/>fmax(hMax,mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/>fmin(hMin,mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref>);</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>0]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>1]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>2]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>0]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>1]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>2]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>hMax*volume;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>volume;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[nN]<sp/>/=<sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[nN];</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;volume<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.volume);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;h<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.h);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;hMin<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.hMin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3573"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;sigmaMax<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.sigmaMax);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3576" refid="mesh_8cpp_1ada45b0c82e2dd37e79b7e2c101803c1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1ada45b0c82e2dd37e79b7e2c101803c1f" kindref="member">hexahedronVolume</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n5,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n6,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n7,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>nodeArray)</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t[3];</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>t[0]<sp/>=<sp/>nodeArray[n0*3+0]<sp/>-<sp/>nodeArray[n1*3+0];</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/>t[1]<sp/>=<sp/>nodeArray[n0*3+1]<sp/>-<sp/>nodeArray[n3*3+1];</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/>t[2]<sp/>=<sp/>nodeArray[n0*3+2]<sp/>-<sp/>nodeArray[n4*3+2];</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(t[0]*t[1]*t[2]);</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3585" refid="group__mesh_1ga0d4a836f32fdf0cacb6250884aafe10b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga0d4a836f32fdf0cacb6250884aafe10b" kindref="member">allocateGeometricInfo_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*3];</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597" refid="group__mesh_1gafdde7ba7852d7a8a4da1e3dc6bf91b36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gafdde7ba7852d7a8a4da1e3dc6bf91b36" kindref="member">computeGeometricInfo_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[0],</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[1],</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>nNperElemInv<sp/>=<sp/>1.0/double(mesh.nNodes_element);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>double<sp/>nNperElemBInv=<sp/>1.0/double(mesh.nNodes_elementBoundary);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;ebN++)</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;nN_L++)</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;nN_R++)</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>[ebN]<sp/>=<sp/>fmax(mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>[ebN],</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4+nN_L],</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*4+nN_R],</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>));</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>volume,<sp/>hMin=0.0,hMax=0.0;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume<sp/>=<sp/><ref refid="mesh_8cpp_1ada45b0c82e2dd37e79b7e2c101803c1f" kindref="member">hexahedronVolume</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+0],</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+1],</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+2],</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+3],</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+4],</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+5],</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+6],</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+7],</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hMax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMax<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMin<sp/>=<sp/>9e99;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMax<sp/>=<sp/>fmax(hMax,</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+nN_L],</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+nN_R],</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>));</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMin<sp/>=<sp/>fmin(hMin,</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+nN_L],</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*8+nN_R],</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>));</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>[eN]<sp/>=<sp/>hMin;</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]<sp/>=<sp/>hMax;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" kindref="member">volume</ref><sp/>+=<sp/>volume;</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref><sp/>=<sp/>fmax(hMax/hMin,mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref>);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref><sp/>=<sp/>fmax(hMax,mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/>fmin(hMin,mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref>);</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>hMax*volume;</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>volume;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[nN]<sp/>/=<sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[nN];</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;volume<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.volume);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;h<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.h);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;hMin<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.hMin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;sigmaMax<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.sigmaMax);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight></codeline>
<codeline lineno="3677" refid="group__mesh_1gad36c6af3da3b8edd3b32f5dd8f7b5f18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad36c6af3da3b8edd3b32f5dd8f7b5f18" kindref="member">allocateGeometricInfo_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga0d4a836f32fdf0cacb6250884aafe10b" kindref="member">allocateGeometricInfo_hexahedron</ref>(mesh);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3683" refid="group__mesh_1ga0f4f89b6fc203f8443bc671f2ce24c2e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga0f4f89b6fc203f8443bc671f2ce24c2e" kindref="member">computeGeometricInfo_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gafdde7ba7852d7a8a4da1e3dc6bf91b36" kindref="member">computeGeometricInfo_hexahedron</ref>(mesh);</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight></codeline>
<codeline lineno="3690" refid="group__mesh_1ga1ad1cf0d175b08dec8e1ed161e065295" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga1ad1cf0d175b08dec8e1ed161e065295" kindref="member">allocateGeometricInfo_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*3];</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight></codeline>
<codeline lineno="3702" refid="group__mesh_1gaad90ffdf6bb84d92b74bf824f8662a4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaad90ffdf6bb84d92b74bf824f8662a4b" kindref="member">computeGeometricInfo_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[0],</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[1],</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;ebN++)</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+0],</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+1],</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemInv<sp/>=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemBInv=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>);</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area=0.0,<sp/>perimeter=0.0,h=0.0,<sp/>hMin=0.0,hMax=0.0;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="mesh_8cpp_1af06f7e1e786558cbf2d6984584d5d830" kindref="member">triangleArea</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3<sp/>+<sp/>2],</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hMax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+nN_L],</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+nN_R],</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perimeter<sp/>+=<sp/>h;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMax<sp/>=<sp/>fmax(hMax,h);</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMin<sp/>=<sp/>4.0*area/perimeter;<sp/></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>[eN]<sp/>=<sp/>hMin;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]<sp/>=<sp/>hMax;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" kindref="member">volume</ref><sp/>+=<sp/>area;</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref><sp/>=<sp/>fmax(hMax/hMin,mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref>);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref><sp/>=<sp/>fmax(hMax,mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/>fmin(hMin,mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref>);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>0]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>1]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>2]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>0]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>1]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>2]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>hMax*area;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>area;</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;ebN++)</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;nN++)</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN]*3<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN]*3<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN]*3<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[nN]<sp/>/=<sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[nN];</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;volume<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.volume);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;h<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.h);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;hMin<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.hMin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;sigmaMax<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.sigmaMax);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3790" refid="group__mesh_1ga7a5874cc209a0c576ed8391e77111a9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga7a5874cc209a0c576ed8391e77111a9c" kindref="member">allocateGeometricInfo_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight></codeline>
<codeline lineno="3800" refid="group__mesh_1gaad2c7d05554f0bb51a7ccfb6855baeb5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaad2c7d05554f0bb51a7ccfb6855baeb5" kindref="member">computeGeometricInfo_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[0],</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[1],</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;ebN++)</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+0],</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+1],</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemInv<sp/>=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>);</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemBInv=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>);</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area=0.0,<sp/>perimeter=0.0,h=0.0,<sp/>hMin=1.0e6,hMax=0.0;</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/><ref refid="mesh_8cpp_1af06f7e1e786558cbf2d6984584d5d830" kindref="member">triangleArea</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4<sp/>+<sp/>2],</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>)<sp/>+</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1af06f7e1e786558cbf2d6984584d5d830" kindref="member">triangleArea</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4<sp/>+<sp/>2],</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4<sp/>+<sp/>3],</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hMax<sp/>&amp;&amp;<sp/><sp/>hMin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_L],</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_R],</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perimeter<sp/>+=<sp/>h;</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMax<sp/>=<sp/>fmax(hMax,h);</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMin<sp/>=<sp/>fmin(hMin,h);</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>[eN]<sp/>=<sp/>hMin;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]<sp/>=<sp/>hMax;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" kindref="member">volume</ref><sp/>+=<sp/>area;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref><sp/>=<sp/>fmax(hMax/hMin,mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref>);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref><sp/>=<sp/>fmax(hMax,mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/>fmin(hMin,mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref>);</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>hMax*area;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>area;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[nN]<sp/>/=<sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[nN];</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3860" refid="group__mesh_1ga8b4def6a8ea5675441b05b5a7061713b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8b4def6a8ea5675441b05b5a7061713b" kindref="member">allocateGeometricInfo_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*3];</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight></codeline>
<codeline lineno="3872" refid="group__mesh_1ga88041ad8d6afe29f23c6e30837b777db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga88041ad8d6afe29f23c6e30837b777db" kindref="member">computeGeometricInfo_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>,0,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>,0,mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*3*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>,0,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[0],</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[1],</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemInv<sp/>=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>);</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nNperElemBInv=<sp/>1.0/double(mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>);</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]<sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+0],</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*2+1],</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>[eN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN];</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref><sp/>=<sp/>fmax(mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref>,mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref><sp/>=<sp/>fmin(mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref>,mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]);</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" kindref="member">volume</ref><sp/>+=<sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN];</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"></highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>0]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>1]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>2]<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>0]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>1]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>[eN*3<sp/>+<sp/>2]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]*3<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN]*mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN];</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>nN]]<sp/>+=<sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>[eN];</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;ebN++)</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>[ebN]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;nN++)</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>0]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN]*3<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>1]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN]*3<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>[ebN*3<sp/>+<sp/>2]<sp/>+=<sp/></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNperElemBInv*mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN]*3<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>[nN]<sp/>/=<sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>[nN];</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;volume<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.volume);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;h<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.h);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;hMin<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.hMin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;sigmaMax<sp/>=<sp/>%12.5e<sp/>\n&quot;,mesh.sigmaMax);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>node<sp/>and<sp/>element-node<sp/>connectivity<sp/>tables<sp/>so<sp/>they<sp/>can<sp/>be<sp/>filled<sp/>in<sp/>externally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3941" refid="group__mesh_1gac6cbf9a86158a88ef7393e0bfc997afd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac6cbf9a86158a88ef7393e0bfc997afd" kindref="member">allocateNodeAndElementNodeDataStructures</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_global,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNodes_global,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNodes_element)</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>nElements_global;</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/><sp/><sp/><sp/>=<sp/>nNodes_global;</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/><sp/><sp/>=<sp/>nNodes_element;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"></highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//mwftodo<sp/>get<sp/>global<sp/>refinement<sp/>to<sp/>preserve<sp/>element<sp/>boundary<sp/>type<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961" refid="group__mesh_1gabe3df821ff4ab8aec3dd150a638b26e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gabe3df821ff4ab8aec3dd150a638b26e3" kindref="member">globallyRefineEdgeMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags)</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>=<sp/>nLevels;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>[nLevels];</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i]);</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[0]<sp/>=<sp/>mesh;<sp/></highlight><highlight class="comment">//shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Refinement<sp/>Level<sp/>&quot;&lt;&lt;i&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Node&gt;<sp/>newNodeSet;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Node&gt;::iterator<sp/>nodeItr;</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;set&lt;Node&gt;::iterator,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>=2;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//2<sp/>children<sp/>per<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/><sp/>=<sp/>2*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*2];</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*2];</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1]<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1];</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent=0,eN=0;eN_parent&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN_parent++)</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][eN_parent+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][eN_parent]+2;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][2*eN_parent<sp/>+<sp/>0<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][2*eN_parent<sp/>+<sp/>1<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>1]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoints[1];</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>0]*3,</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>1]*3,</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0]);</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>0]]<sp/>==</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>1]])</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>0]];</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(averageNewNodeFlags)</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/>0.5*(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>0]]<sp/>+</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>1]]);</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"></highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNodeSet.insert(midpoints[0]);</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_new++;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>two<sp/>new<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" kindref="member">newEdge</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[2*eN_parent+0],</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" kindref="member">newEdge</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[2*eN_parent+1]);</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>-1]+2;</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(nN_new)<sp/>==<sp/>(newNodeSet.size()+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>));</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0];</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1];</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2];</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+0]<sp/>=<sp/>nodeItr-&gt;x;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+1]<sp/>=<sp/>nodeItr-&gt;y;</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+2]<sp/>=<sp/>nodeItr-&gt;z;</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>nodes<sp/>get<sp/>default<sp/>material<sp/>type,<sp/>should<sp/>be<sp/>set<sp/>on<sp/>interior<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//boundary<sp/>in<sp/>constructElementBoundaryElementsArray_*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>&gt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>-multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nodeItr-&gt;nN]<sp/>=<sp/>nodeItr-&gt;flag;</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"></highlight></codeline>
<codeline lineno="4056" refid="group__mesh_1gac8f50ad63a717bf616c78b8390e7744e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac8f50ad63a717bf616c78b8390e7744e" kindref="member">globallyRefineTriangularMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags)</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>=<sp/>nLevels;</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>[nLevels];</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i]);</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[0]<sp/>=<sp/>mesh;<sp/></highlight><highlight class="comment">//shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Refinement<sp/>Level<sp/>&quot;&lt;&lt;i&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Node&gt;<sp/>newNodeSet;</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Node&gt;::iterator<sp/>nodeItr;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;set&lt;Node&gt;::iterator,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>=3;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//4<sp/>children<sp/>per<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/><sp/>=<sp/>4*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*4];</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1]<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1];</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent=0,eN=0;eN_parent&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN_parent++)</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][eN_parent+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][eN_parent]<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][4*eN_parent<sp/>+<sp/>0<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][4*eN_parent<sp/>+<sp/>1<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][4*eN_parent<sp/>+<sp/>2<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][4*eN_parent<sp/>+<sp/>3<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>1]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>2]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>3]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>3]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoints[3];</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_0=0,nN_midpoint=0;nN_element_0&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_element_0++)</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_1=nN_element_0+1;nN_element_1&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_element_1++,nN_midpoint++)</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_0]*3,</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_1]*3,</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeItr<sp/>==<sp/>newNodeSet.end())</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_0]]<sp/>==</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_1]])</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_0]];</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(averageNewNodeFlags)</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/>0.5*(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_0]]<sp/>+</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_1]]);</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNodeSet.insert(midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_new++;</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nodeItr-&gt;nN;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>triangles<sp/>formed<sp/>by<sp/>chopping<sp/>the<sp/>points<sp/>off<sp/>the<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+0],</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+1],</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+2],</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>-1]+4;</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(nN_new)<sp/>==<sp/>(newNodeSet.size()+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>));</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0];</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1];</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2];</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+0]<sp/>=<sp/>nodeItr-&gt;x;</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+1]<sp/>=<sp/>nodeItr-&gt;y;</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+2]<sp/>=<sp/>nodeItr-&gt;z;</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>nodes<sp/>get<sp/>default<sp/>material<sp/>type,<sp/>should<sp/>be<sp/>set<sp/>on<sp/>interior<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//boundary<sp/>in<sp/>constructElementBoundaryElementsArray_*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>&gt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>-multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>hack<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;refined<sp/>triangular<sp/>mesh:<sp/>nN<sp/>parent=<sp/>&quot;&lt;&lt;multilevelMesh.meshArray[i-1].nNodes_global&lt;&lt;&quot;<sp/>nN<sp/>child=<sp/>&quot;&lt;&lt;multilevelMesh.meshArray[i].nNodes_global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;<sp/>nodeItr-&gt;nN,flag,x=<sp/>&quot;&lt;&lt;nodeItr-&gt;nN&lt;&lt;&quot;<sp/>,<sp/>&quot;&lt;&lt;nodeItr-&gt;flag<sp/>&lt;&lt;&quot;<sp/>,<sp/>&quot;<sp/>&lt;&lt;<sp/>nodeItr-&gt;x<sp/>&lt;&lt;&quot;<sp/>,<sp/>&quot;&lt;&lt;<sp/>nodeItr-&gt;y<sp/>&lt;&lt;<sp/>&quot;<sp/>,<sp/>&quot;&lt;&lt;<sp/>nodeItr-&gt;z<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nodeItr-&gt;nN]<sp/>=<sp/>nodeItr-&gt;flag;</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4181" refid="group__mesh_1gad4add441d1af1fc56b191bb96304fe3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad4add441d1af1fc56b191bb96304fe3b" kindref="member">globallyRefineQuadrilateralMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags)</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>=<sp/>nLevels;</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>[nLevels];</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i]);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[0]<sp/>=<sp/>mesh;<sp/></highlight><highlight class="comment">//shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Quad<sp/>refinement<sp/>not<sp/>imlemented<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight></codeline>
<codeline lineno="4200" refid="group__mesh_1gab4d638c87ade6bd196a81384af108e8e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gab4d638c87ade6bd196a81384af108e8e" kindref="member">globallyRefineTetrahedralMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags)</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>=<sp/>nLevels;</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>[nLevels];</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i]);</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[0]<sp/>=<sp/>mesh;<sp/></highlight><highlight class="comment">//shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Refinement<sp/>Level<sp/>&quot;&lt;&lt;i&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Node&gt;<sp/>newNodeSet;</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;Node&gt;::iterator<sp/>nodeItr;</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;set&lt;Node&gt;::iterator,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>=4;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//8<sp/>children<sp/>per<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/><sp/>=<sp/>8*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*4];</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*8];</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1]<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1];</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent=0,eN=0;eN_parent&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN_parent++)</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][eN_parent+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][eN_parent]+8;</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>0<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>1<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>2<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>3<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>4<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>5<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>5;</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>6<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][8*eN_parent<sp/>+<sp/>7<sp/>]<sp/>=<sp/>eN<sp/>+<sp/>7;<sp/></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>1]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>2]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>3]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>4]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>5]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>6]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN<sp/>+<sp/>7]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>3]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>4]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>5]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>6]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN<sp/>+<sp/>7]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];<sp/></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoints[6];</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mind;</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mindN;</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_0=0,nN_midpoint=0;nN_element_0&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_element_0++)</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_1=nN_element_0+1;nN_element_1&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_element_1++,nN_midpoint++)</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*4<sp/>+<sp/>nN_element_0]*3,</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*4<sp/>+<sp/>nN_element_1]*3,</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeItr<sp/>==<sp/>newNodeSet.end())</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*4<sp/>+<sp/>nN_element_0]]<sp/>==</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*4<sp/>+<sp/>nN_element_1]])</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*4<sp/>+<sp/>nN_element_0]];</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(averageNewNodeFlags)</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/>0.5*(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*4<sp/>+<sp/>nN_element_0]]<sp/>+</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*4<sp/>+<sp/>nN_element_1]]);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref><sp/>=<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNodeSet.insert(midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_new++;</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nodeItr-&gt;nN;</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>tets<sp/>formed<sp/>by<sp/>chopping<sp/>the<sp/>points<sp/>of<sp/>the<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[4*eN_parent+0],</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[4*eN_parent+1],</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[4*eN_parent+2],</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[4*eN_parent+3],</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mind=<ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(midpoints[0],midpoints[5]);</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mindN=0;</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dd;</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dN=1;dN&lt;3;dN++)</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>=<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>(midpoints[dN],midpoints[5-dN]);</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd<sp/>&lt;<sp/>mind)</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mind<sp/>=<sp/>dd;</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mindN<sp/>=<sp/>dN;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd<sp/>==<sp/>mind)</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(midpoints[dN]<sp/>&lt;<sp/>midpoints[mindN])</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mindN<sp/>=<sp/>dN;</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(midpoints[mindN]<sp/>&lt;<sp/>midpoints[dN])<sp/>&amp;&amp;<sp/>(midpoints[5-dN]<sp/>&lt;<sp/>midpoints[5-mindN]))</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mindN<sp/>=<sp/>dN;</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mindN<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mindN<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[4].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[5].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN<sp/>=<sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(eN,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[3].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,<sp/></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>-1]+8;</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(nN_new)<sp/>==<sp/>(newNodeSet.size()+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>));</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0];</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1];</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2];</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+0]<sp/>=<sp/>nodeItr-&gt;x;</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+1]<sp/>=<sp/>nodeItr-&gt;y;</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+2]<sp/>=<sp/>nodeItr-&gt;z;</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//cout&lt;&lt;&quot;re-ordeing<sp/>nodes<sp/>llllllllllllllllllll&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>eN=0;eN&lt;multilevelMesh.meshArray[i].nElements_global;eN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register<sp/>int<sp/>n0,n1,n2,n3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>register<sp/>double<sp/>t[3][3],det;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n3<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][0]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n1*3+0]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][1]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n1*3+1]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][2]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n1*3+2]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1][0]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n2*3+0]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1][1]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n2*3+1]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1][2]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n2*3+2]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2][0]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n3*3+0]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2][1]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n3*3+1]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2][2]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n3*3+2]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>t[0][0]*(t[1][1]*t[2][2]<sp/>-<sp/>t[1][2]*t[2][1])<sp/>-<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][1]*(t[1][0]*t[2][2]<sp/>-<sp/>t[1][2]*t[2][0])<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][2]*(t[1][0]*t[2][1]<sp/>-<sp/>t[1][1]*t[2][0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(det<sp/>&lt;<sp/>0.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+2]<sp/>=<sp/>n3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+3]<sp/>=<sp/>n2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n3<sp/>=<sp/>multilevelMesh.meshArray[i].elementNodesArray[eN*4+3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][0]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n1*3+0]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][1]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n1*3+1]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][2]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n1*3+2]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1][0]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n2*3+0]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1][1]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n2*3+1]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[1][2]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n2*3+2]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2][0]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n3*3+0]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2][1]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n3*3+1]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[2][2]<sp/>=<sp/>multilevelMesh.meshArray[i].nodeArray[n3*3+2]<sp/>-<sp/>multilevelMesh.meshArray[i].nodeArray[n0*3+2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>det<sp/>=<sp/>fabs(t[0][0]*(t[1][1]*t[2][2]<sp/>-<sp/>t[1][2]*t[2][1])<sp/>-<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][1]*(t[1][0]*t[2][2]<sp/>-<sp/>t[1][2]*t[2][0])<sp/>+<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t[0][2]*(t[1][0]*t[2][1]<sp/>-<sp/>t[1][1]*t[2][0]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//cout&lt;&lt;&quot;det<sp/>&quot;&lt;&lt;det&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwftodo<sp/>need<sp/>to<sp/>come<sp/>up<sp/>with<sp/>convention<sp/>for<sp/>assigning<sp/>new<sp/>node<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>nodes<sp/>get<sp/>default<sp/>material<sp/>type,<sp/>should<sp/>be<sp/>set<sp/>on<sp/>interior<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//boundary<sp/>in<sp/>constructElementBoundaryElementsArray_*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>&gt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>-multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nodeItr-&gt;nN]<sp/>=<sp/>nodeItr-&gt;flag;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4485" refid="group__mesh_1ga68488c00a1abeb741d57a6e416c82a53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga68488c00a1abeb741d57a6e416c82a53" kindref="member">globallyRefineHexahedralMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags)</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>=<sp/>nLevels;</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>[nLevels];</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i]);</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevels];</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[0]<sp/>=<sp/>mesh;<sp/></highlight><highlight class="comment">//shallow<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;i&lt;nLevels;i++)</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Hexahedron<sp/>refinement<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"></highlight></codeline>
<codeline lineno="4504" refid="group__mesh_1ga8c801b37609c0f42a31d52ad7ad52dca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8c801b37609c0f42a31d52ad7ad52dca" kindref="member">assignElementBoundaryMaterialTypesFromParent</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>parentMesh,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>childMesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>levelElementParentsArray,</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nSpace_global)</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>childMesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>childMesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_left<sp/><sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2+0];</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_right<sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2+1];</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_left_parent<sp/>=<sp/>levelElementParentsArray[eN_left];</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_right_parent=<sp/>levelElementParentsArray[eN_right];</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_left_parent<sp/>==<sp/>eN_right_parent)<sp/></highlight><highlight class="comment">//interior<sp/>to<sp/>element<sp/>on<sp/>coarser<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>local<sp/>element<sp/>boundary<sp/>id<sp/>on<sp/>left<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_parent_ebN<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_left_parent_element<sp/>=<sp/>0;<sp/>ebN_left_parent_element<sp/>&lt;<sp/>parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_left_parent_element++)</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentMesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eN_left_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_left_parent_element]<sp/></highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>eN_right_parent)</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_parent_ebN<sp/>=<sp/>ebN_left_parent_element;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&lt;=<sp/>left_parent_ebN<sp/>&lt;<sp/>parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>);</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_parent<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_left_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/></highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_parent_ebN];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN_parent];</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//interior<sp/>element<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>childMesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/><sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN*2+0];</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>levelElementParentsArray[eN];</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastExteriorElementBoundaryOnParent=-1;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nExteriorElementBoundariesOnParent<sp/>=0;</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_element<sp/>=<sp/>0;<sp/>ebN_element<sp/>&lt;<sp/>parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/>ebN_element++)</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentMesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eN_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>ebN_element]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastExteriorElementBoundaryOnParent<sp/>=<sp/>ebN_element;</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nExteriorElementBoundariesOnParent++;</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(nExteriorElementBoundariesOnParent<sp/>&gt;<sp/>0);<sp/>assert(lastExteriorElementBoundaryOnParent<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nExteriorElementBoundariesOnParent<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//more<sp/>than<sp/>1<sp/>face<sp/>of<sp/>parent<sp/>is<sp/>on<sp/>exterior<sp/>boundary,<sp/>have<sp/>to<sp/>figure<sp/>out<sp/>which<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//holds<sp/>the<sp/>current<sp/>face<sp/>on<sp/>the<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSpace_global<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_element_child<sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN*2+0];</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//across<sp/>from<sp/>ebN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_child0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*childMesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+ebN_element_child];</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>ebN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_child1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*childMesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+((ebN_element_child+1)%2)];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_child<sp/><sp/>=<sp/>(childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_child1*3+0]-childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_child0*3+0])/</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_child1*3+0]-childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_child0*3+0]);</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_parent0<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*childMesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_parent1<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*childMesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_parent0<sp/><sp/>=<sp/>(parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent1*3+0]-parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent0*3+0])/</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent1*3+0]-parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent0*3+0]);</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_parent1<sp/><sp/>=<sp/>(parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent0*3+0]-parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent1*3+0])/</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent0*3+0]-parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_parent1*3+0]);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_parent<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(n_child-n_parent1)<sp/>&lt;<sp/>1.0e-8)</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_parent<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>if<sp/>(fabs(n_child-n_parent0)<sp/>&lt;<sp/>1.0e-8)</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_parent<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ebN_parent<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN_parent];</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//1d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSpace_global<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwftodo<sp/>assumes<sp/>relavant<sp/>coordinates<sp/>are<sp/>first<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_ebN_child[2]<sp/>=<sp/>{childMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[2*ebN+0],childMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[2*ebN+1]};</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_child[2]<sp/><sp/><sp/>=<sp/>{childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_child[1]*3+1]-childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_child[0]*3+1],</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_child[0]*3+0]-childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_child[1]*3+0]};</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>sqrt(n_child[0]*n_child[0]<sp/>+<sp/>n_child[1]*n_child[1]);</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tmp<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_child[0]<sp/>/=<sp/>tmp;<sp/>n_child[1]<sp/>/=<sp/>tmp;</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_parent<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_element_parent<sp/>=<sp/>0;<sp/>ebN_element_parent<sp/>&lt;<sp/>parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/>ebN_element_parent++)</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_cur<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>ebN_element_parent];</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_ebN_parent[2]<sp/>=<sp/>{parentMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[2*ebN_cur+0],</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parentMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[2*ebN_cur+1]};</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_parent[2]<sp/><sp/><sp/>=<sp/>{parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_parent[1]*3+1]-parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_parent[0]*3+1],</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_parent[0]*3+0]-parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN_ebN_parent[1]*3+0]};</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>sqrt(n_parent[0]*n_parent[0]<sp/>+<sp/>n_parent[1]*n_parent[1]);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tmp<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_parent[0]<sp/>/=<sp/>tmp;<sp/>n_parent[1]<sp/>/=<sp/>tmp;</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//looking<sp/>for<sp/>face<sp/>on<sp/>parent<sp/>with<sp/>unit<sp/>normal<sp/>in<sp/>same<sp/>direction<sp/>as<sp/>child<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//but<sp/>don&apos;t<sp/>enforce<sp/>same<sp/>outside<sp/>inside<sp/>convention<sp/>on<sp/>mesh<sp/>orderings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>n_parent[0]*n_child[0]<sp/>+<sp/>n_parent[1]*n_child[1];</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(sqrt(tmp*tmp)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>1.0e-8)</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_parent<sp/>=<sp/>ebN_cur;</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ebN_parent<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN_parent];</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//2d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nN_ebN_child_0_x<sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>3*childMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[3*ebN+0];</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nN_ebN_child_1_x<sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>3*childMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[3*ebN+1];</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nN_ebN_child_2_x<sp/>=<sp/>childMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>3*childMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[3*ebN+2];</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_child[3]<sp/>=<sp/>{0.,0.,0.};</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(nN_1-nN_0)<sp/>x<sp/>(nN_2-nN_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_child[0]<sp/>=<sp/>(nN_ebN_child_1_x[1]-nN_ebN_child_0_x[1])*(nN_ebN_child_2_x[2]-nN_ebN_child_0_x[2])</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(nN_ebN_child_1_x[2]-nN_ebN_child_0_x[2])*(nN_ebN_child_2_x[1]-nN_ebN_child_0_x[1]);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"></highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_child[1]<sp/>=<sp/>(nN_ebN_child_1_x[2]-nN_ebN_child_0_x[2])*(nN_ebN_child_2_x[0]-nN_ebN_child_0_x[0])</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(nN_ebN_child_1_x[0]-nN_ebN_child_0_x[0])*(nN_ebN_child_2_x[2]-nN_ebN_child_0_x[2]);</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"></highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_child[2]<sp/>=<sp/>(nN_ebN_child_1_x[0]-nN_ebN_child_0_x[0])*(nN_ebN_child_2_x[1]-nN_ebN_child_0_x[1])</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(nN_ebN_child_1_x[1]-nN_ebN_child_0_x[1])*(nN_ebN_child_2_x[0]-nN_ebN_child_0_x[0]);</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>sqrt(n_child[0]*n_child[0]<sp/>+<sp/>n_child[1]*n_child[1]<sp/>+<sp/>n_child[2]*n_child[2]);</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tmp<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_child[0]<sp/>/=<sp/>tmp;<sp/>n_child[1]<sp/>/=<sp/>tmp;<sp/>n_child[2]<sp/>/=<sp/>tmp;</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"></highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_parent<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_parent[3]<sp/>=<sp/>{0.,0.,0.};</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_element_parent<sp/>=<sp/>0;<sp/>ebN_element_parent<sp/>&lt;<sp/>parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/>ebN_element_parent++)</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_cur<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>ebN_element_parent];</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nN_ebN_parent_0_x<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>3*parentMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[3*ebN_cur+0];</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nN_ebN_parent_1_x<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>3*parentMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[3*ebN_cur+1];</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nN_ebN_parent_2_x<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>3*parentMesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[3*ebN_cur+2];</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(nN_1-nN_0)<sp/>x<sp/>(nN_2-nN_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_parent[0]<sp/>=<sp/>(nN_ebN_parent_1_x[1]-nN_ebN_parent_0_x[1])*(nN_ebN_parent_2_x[2]-nN_ebN_parent_0_x[2])</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(nN_ebN_parent_1_x[2]-nN_ebN_parent_0_x[2])*(nN_ebN_parent_2_x[1]-nN_ebN_parent_0_x[1]);</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_parent[1]<sp/>=<sp/>(nN_ebN_parent_1_x[2]-nN_ebN_parent_0_x[2])*(nN_ebN_parent_2_x[0]-nN_ebN_parent_0_x[0])</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(nN_ebN_parent_1_x[0]-nN_ebN_parent_0_x[0])*(nN_ebN_parent_2_x[2]-nN_ebN_parent_0_x[2]);</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_parent[2]<sp/>=<sp/>(nN_ebN_parent_1_x[0]-nN_ebN_parent_0_x[0])*(nN_ebN_parent_2_x[1]-nN_ebN_parent_0_x[1])</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-(nN_ebN_parent_1_x[1]-nN_ebN_parent_0_x[1])*(nN_ebN_parent_2_x[0]-nN_ebN_parent_0_x[0]);</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>sqrt(n_parent[0]*n_parent[0]<sp/>+<sp/>n_parent[1]*n_parent[1]<sp/>+<sp/>n_parent[2]*n_parent[2]);</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tmp<sp/>&gt;<sp/>0.0);</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_parent[0]<sp/>/=<sp/>tmp;<sp/>n_parent[1]<sp/>/=<sp/>tmp;<sp/>n_parent[2]<sp/>/=<sp/>tmp;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//looking<sp/>for<sp/>face<sp/>on<sp/>parent<sp/>with<sp/>unit<sp/>normal<sp/>in<sp/>same<sp/>direction<sp/>as<sp/>child<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//but<sp/>don&apos;t<sp/>enforce<sp/>same<sp/>outside<sp/>inside<sp/>convention<sp/>on<sp/>mesh<sp/>orderings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>n_parent[0]*n_child[0]<sp/>+<sp/>n_parent[1]*n_child[1]<sp/>+<sp/>n_parent[2]*n_child[2];</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(sqrt(tmp*tmp)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>1.0e-8)</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_parent<sp/>=<sp/>ebN_cur;</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ebN_parent<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN_parent];</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//3d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//nExteriorBoundaries<sp/>&gt;<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>1<sp/>exterior<sp/>boundary<sp/>on<sp/>parent<sp/>so<sp/>must<sp/>be<sp/>same<sp/>as<sp/>child&apos;s<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_parent<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*parentMesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/></highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastExteriorElementBoundaryOnParent];</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>parentMesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN_parent];</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"></highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//exterior<sp/>element<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"></highlight></codeline>
<codeline lineno="4690" refid="group__mesh_1gac9bf9640ca027ca766ace6272e16400c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac9bf9640ca027ca766ace6272e16400c" kindref="member">readElements</ref>(std::istream&amp;<sp/>meshFile,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="4691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/>assert(meshFile);</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"></highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word,elementType;</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>in<sp/>the<sp/>mesh<sp/>file.<sp/>I<sp/>just<sp/>read<sp/>in<sp/>each<sp/>token<sp/>in<sp/>the<sp/>order<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//appeards<sp/>in<sp/>the<sp/>.3dm<sp/>files.<sp/>This<sp/>will<sp/>break<sp/>if<sp/>there<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//non-whitespace<sp/>trash<sp/>in<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;word;</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MESH1D&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;E2E&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Reading<sp/>1D<sp/>edge<sp/>mesh&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MESH2D&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;E3T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Reading<sp/>2D<sp/>triangular<sp/>mesh&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MESH3D&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;E4T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Reading<sp/>3D<sp/>tetrahedral<sp/>mesh&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>mesh<sp/>type&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/>vector&lt;vector&lt;int&gt;<sp/>&gt;<sp/>elementNodesVector;</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>nodes(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>);</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>materialTypes;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;word;</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(word<sp/>==<sp/>elementType)</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;word;<sp/></highlight><highlight class="comment">//discard<sp/>element<sp/>numbering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;nodes[nN];</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[nN]-=1;</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesVector.push_back(nodes);</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;type;</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>materialTypes.push_back(type);</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;word;</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Number<sp/>of<sp/><sp/>elements<sp/>=<sp/>&quot;&lt;&lt;elementNodesVector.size()&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>elementNodesVector.size();</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]<sp/>=<sp/>materialTypes[eN];</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]=elementNodesVector[eN][nN];</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight></codeline>
<codeline lineno="4754" refid="group__mesh_1ga093904f19cdbf5c7f0076e6a6c56081e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga093904f19cdbf5c7f0076e6a6c56081e" kindref="member">writeNodes</ref>(std::ostream&amp;<sp/>meshFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="4755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/>meshFile&lt;&lt;</highlight><highlight class="stringliteral">&quot;ND&quot;</highlight><highlight class="normal">&lt;&lt;setw(7)&lt;&lt;nN+1</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;scientific&lt;&lt;setprecision(8)&lt;&lt;setw(16)&lt;&lt;mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+0]</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;scientific&lt;&lt;setprecision(8)&lt;&lt;setw(16)&lt;&lt;mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+1]</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;scientific&lt;&lt;setprecision(8)&lt;&lt;setw(16)&lt;&lt;mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+2]</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"></highlight></codeline>
<codeline lineno="4766" refid="group__mesh_1ga273d705930d0ad0775498d0be44c739d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga273d705930d0ad0775498d0be44c739d" kindref="member">writeElements</ref>(std::ostream&amp;<sp/>meshFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="4767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;printing<sp/>mesh<sp/>&quot;&lt;&lt;mesh.nElements_global&lt;&lt;&quot;\t&quot;&lt;&lt;mesh.nNodes_element&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/>meshFile&lt;&lt;</highlight><highlight class="stringliteral">&quot;Try<sp/>to<sp/>write<sp/>something&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>elementType;</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width=7;</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;E2E&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;</highlight><highlight class="stringliteral">&quot;MESH1D&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width=7;</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;E3T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;</highlight><highlight class="stringliteral">&quot;MESH2D&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width=8;</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;E4T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;</highlight><highlight class="stringliteral">&quot;MESH3D&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Unknown<sp/>element<sp/>type&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;elementType;</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;setw(width)&lt;&lt;eN+1;</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN++)</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;setw(width)&lt;&lt;(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]+1);</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwftodo<sp/>decide<sp/>if<sp/>have<sp/>convention<sp/>about<sp/>material<sp/>types<sp/>and<sp/>base<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;setw(width)&lt;&lt;mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]+1;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&lt;&lt;endl;</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"></highlight></codeline>
<codeline lineno="4810" refid="group__mesh_1gafb3cbd692f5aaeee1411ca2776b69db9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gafb3cbd692f5aaeee1411ca2776b69db9" kindref="member">setFromTriangleElements</ref>(triangulateio*<sp/>trimesh,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base)</highlight></codeline>
<codeline lineno="4811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/>assert(trimesh);<sp/>assert(trimesh-&gt;trianglelist);</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assume<sp/>mesh<sp/>hasn&apos;t<sp/>been<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>trimesh-&gt;numberoftriangles;</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//copy<sp/>material<sp/>types<sp/>now,<sp/>copy<sp/>first<sp/>attribute<sp/>of<sp/>triangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trimesh-&gt;triangleattributelist)</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>trimesh-&gt;numberoftriangles;<sp/>eN++)</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]<sp/>=<sp/>trimesh-&gt;triangleattributelist[eN*trimesh-&gt;numberoftriangleattributes+0];<sp/></highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>,<ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"></highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>onl<sp/>vertices<sp/>even<sp/>if<sp/>triangle<sp/>stores<sp/>&quot;nonlinear&quot;<sp/>(6pt)<sp/>triangle<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>ebN++)</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+ebN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trimesh-&gt;trianglelist[eN*trimesh-&gt;numberofcorners+ebN]-base;</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"></highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"></highlight></codeline>
<codeline lineno="4844" refid="group__mesh_1ga5fdf05986fe93c06aad3ca6cdcadcb4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5fdf05986fe93c06aad3ca6cdcadcb4c" kindref="member">setFromTriangleNodes</ref>(triangulateio*<sp/>trimesh,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base)</highlight></codeline>
<codeline lineno="4845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/>assert(trimesh);<sp/>assert(trimesh-&gt;pointlist);</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assume<sp/>mesh<sp/>hasn&apos;t<sp/>been<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>trimesh-&gt;numberofpoints;</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[3*mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,0,3*mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"></highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//copy<sp/>point<sp/>markers,<sp/>note<sp/>triangle<sp/>saves<sp/>markers<sp/>for<sp/>nodes<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//just<sp/>general<sp/>attributes<sp/>for<sp/>triangles<sp/>(also<sp/>has<sp/>attributes<sp/>for<sp/>points<sp/>too)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trimesh-&gt;pointmarkerlist)</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>trimesh-&gt;numberofpoints;<sp/>nN++)</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>trimesh-&gt;pointmarkerlist[nN];<sp/></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,<ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3<sp/>+<sp/>0]<sp/>=<sp/></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trimesh-&gt;pointlist[nN*2+0];</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3<sp/>+<sp/>1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trimesh-&gt;pointlist[nN*2+1];</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3<sp/>+<sp/>2]<sp/>=<sp/>0.0;</highlight><highlight class="comment">//any<sp/>better<sp/>idea?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"></highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight></codeline>
<codeline lineno="4882" refid="group__mesh_1gae23507317ccd53c375b133ecd3b483c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gae23507317ccd53c375b133ecd3b483c9" kindref="member">copyElementBoundaryMaterialTypesFromTriangle</ref>(triangulateio*<sp/>trimesh,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base)</highlight></codeline>
<codeline lineno="4883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/>assert(trimesh);<sp/></highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trimesh-&gt;edgelist)</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trimesh-&gt;edgemarkerlist)</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trimesh-&gt;numberofedges<sp/>!=<sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>)</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/>std::map&lt;NodeTuple&lt;2&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>triangleEdgeMarker;</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>trimesh-&gt;numberofedges;<sp/>ebN++)</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>trimesh-&gt;edgelist[ebN*2+0]-base;</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>trimesh-&gt;edgelist[ebN*2+1]-base;</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triangleEdgeMarker[ebt]<sp/>=<sp/>trimesh-&gt;edgemarkerlist[ebN];</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//now<sp/>copy<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;<sp/>ebN++)</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+0];</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+1];</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]=<sp/>triangleEdgeMarker[ebt];</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4916"><highlight class="normal"></highlight></codeline>
<codeline lineno="4917" refid="group__mesh_1gab1c1f7cc1d5b1041de2941eb89df59a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gab1c1f7cc1d5b1041de2941eb89df59a3" kindref="member">readTriangleMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triangleIndexBase)</highlight></codeline>
<codeline lineno="4918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="4920"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>from<sp/>triangle</highlight></codeline>
<codeline lineno="4921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>formatted<sp/>mesh<sp/>assuming<sp/>base<sp/>name<sp/>in<sp/>filebase</highlight></codeline>
<codeline lineno="4922"><highlight class="comment"><sp/><sp/><sp/><sp/>triangle<sp/>vertex<sp/>numbering<sp/>base<sp/>as<sp/>input</highlight></codeline>
<codeline lineno="4923"><highlight class="comment"></highlight></codeline>
<codeline lineno="4924"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_file,<sp/>nNodes_file;</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/>vector&lt;double&gt;<sp/>nodeArray_file;</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementNodesArray_file;</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>nodeMaterialTypes_file;</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementMaterialTypes_file;</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1a8080a4ccd397a8f463e92f973d7fe6b1" kindref="member">readTriangleMeshNodesAndElements</ref>(filebase,</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triangleIndexBase,</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_file,</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_file,</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file,</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file,</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeMaterialTypes_file,</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementMaterialTypes_file,</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>);</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;readTriangleMesh<sp/>call<sp/>failed&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/><sp/>3;<sp/></highlight><highlight class="comment">//2d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"></highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nNodes_file;</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/>copy(nodeArray_file.begin(),nodeArray_file.end(),mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/>copy(nodeMaterialTypes_file.begin(),nodeMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"></highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>nElements_file;</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"></highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/>copy(elementNodesArray_file.begin(),elementNodesArray_file.end(),</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/>copy(elementMaterialTypes_file.begin(),elementMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"></highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"></highlight></codeline>
<codeline lineno="4977" refid="group__mesh_1ga08c052ee267f328592995e357a2f023f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga08c052ee267f328592995e357a2f023f" kindref="member">writeTriangleMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triangleIndexBase)</highlight></codeline>
<codeline lineno="4978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="4980"><highlight class="comment"><sp/><sp/><sp/><sp/>write<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>in<sp/>triangle<sp/>format</highlight></codeline>
<codeline lineno="4981"><highlight class="comment"></highlight></codeline>
<codeline lineno="4982"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1a816291a6b91f54297bc738c5e00474d4" kindref="member">writeTriangleMeshNodesAndElements</ref>(filebase,</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triangleIndexBase,</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//beware,<sp/>element<sp/>boundary<sp/>numbering<sp/>scheme<sp/>between<sp/>triangle<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//mesh<sp/>tools<sp/>may<sp/>not<sp/>be<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1a32eee7185fbc3b8c7b9c7983d37b2b95" kindref="member">writeTriangleElementBoundaryNodes</ref>(filebase,</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triangleIndexBase,</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>,</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>,</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"></highlight></codeline>
<codeline lineno="5007" refid="group__mesh_1ga2eb6d5e2b747bef66fe94c02182a6f62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga2eb6d5e2b747bef66fe94c02182a6f62" kindref="member">readTriangleElementBoundaryMaterialTypes</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triangleIndexBase)</highlight></codeline>
<codeline lineno="5008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5010"><highlight class="comment"><sp/><sp/><sp/>read<sp/>in<sp/>triangle<sp/>edge<sp/>file,<sp/>in<sp/>case<sp/>we<sp/>need<sp/>element<sp/>boundary</highlight></codeline>
<codeline lineno="5011"><highlight class="comment"><sp/><sp/><sp/><sp/>identifiers</highlight></codeline>
<codeline lineno="5012"><highlight class="comment"><sp/><sp/><sp/>we&apos;re<sp/>not<sp/>enforcing<sp/>the<sp/>same<sp/>numbering<sp/>scheme<sp/>on<sp/>element<sp/>boundaries</highlight></codeline>
<codeline lineno="5013"><highlight class="comment"><sp/><sp/><sp/>in<sp/>mesh<sp/>and<sp/>triangle<sp/>so<sp/>have<sp/>to<sp/>translate<sp/>outside<sp/></highlight></codeline>
<codeline lineno="5014"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="5015"><highlight class="comment"><sp/><sp/><sp/>if<sp/>material<sp/>types<sp/>not<sp/>found,<sp/>revert<sp/>to<sp/>convention<sp/>on<sp/>interior<sp/>and<sp/>exterior<sp/>label</highlight></codeline>
<codeline lineno="5016"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_file;</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementBoundaryNodesArray_file;</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementBoundaryMaterialTypes_file;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>elementBoundaryMaterialTypesInFile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1af22ab8c87e496e0bda776152b2923ea6" kindref="member">readTriangleElementBoundaries</ref>(filebase,</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triangleIndexBase,</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryMaterialTypesInFile,</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElementBoundaries_file,</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryNodesArray_file,</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryMaterialTypes_file,</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>);</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;readTriangleElementBoundary<sp/>call<sp/>failed&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!elementBoundaryMaterialTypesInFile)</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>==<sp/>nElementBoundaries_file);</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assume<sp/>node<sp/>numberings<sp/>in<sp/>triangle<sp/>and<sp/>mesh<sp/>same<sp/>but<sp/>not<sp/>necessarily<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//element<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/>map&lt;NodeTuple&lt;2&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/><sp/>triangleElementBoundaryMaterialTypes;</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//brute<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_file;<sp/>ebN++)</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>elementBoundaryNodesArray_file[ebN*2+0];</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>elementBoundaryNodesArray_file[ebN*2+1];</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ttuple(nodes);</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>triangleElementBoundaryMaterialTypes[ttuple]<sp/>=<sp/>elementBoundaryMaterialTypes_file[ebN];</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;<sp/>ebN++)</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+0];</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*2+1];</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref><sp/>ttuple(nodes);</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>triangleElementBoundaryMaterialTypes[ttuple];</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"></highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"></highlight></codeline>
<codeline lineno="5065" refid="group__mesh_1ga1e23f5a53d60b3a60f8a62d641216a07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga1e23f5a53d60b3a60f8a62d641216a07" kindref="member">readTetgenMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tetgenIndexBase)</highlight></codeline>
<codeline lineno="5066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5068"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>from<sp/>tetgen</highlight></codeline>
<codeline lineno="5069"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>formatted<sp/>mesh<sp/>assuming<sp/>base<sp/>name<sp/>in<sp/>filebase</highlight></codeline>
<codeline lineno="5070"><highlight class="comment"><sp/><sp/><sp/><sp/>tetgen<sp/>vertex<sp/>numbering<sp/>base<sp/>as<sp/>input</highlight></codeline>
<codeline lineno="5071"><highlight class="comment"></highlight></codeline>
<codeline lineno="5072"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_file,<sp/>nNodes_file;</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/>vector&lt;double&gt;<sp/>nodeArray_file;</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementNodesArray_file;</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>nodeMaterialTypes_file;</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementMaterialTypes_file;</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1aaa9ba7069e5469d82aaa5b2a3810b391" kindref="member">readTetgenMeshNodesAndElements</ref>(filebase,</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tetgenIndexBase,</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_file,</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_file,</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file,</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file,</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeMaterialTypes_file,</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementMaterialTypes_file,</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1aeda877142ca1dcbf191305594d24269d" kindref="member">DEFAULT_ELEMENT_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>);</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;readTetgenMesh<sp/>call<sp/>failed&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/><sp/>4;<sp/></highlight><highlight class="comment">//3d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5099"><highlight class="normal"></highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nNodes_file;</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/>copy(nodeArray_file.begin(),nodeArray_file.end(),mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"></highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/>copy(nodeMaterialTypes_file.begin(),nodeMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>nElements_file;</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"></highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/>copy(elementNodesArray_file.begin(),elementNodesArray_file.end(),</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/>copy(elementMaterialTypes_file.begin(),elementMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5124" refid="group__mesh_1gaf88d232634fffcb9c0ca4d89636d8e1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf88d232634fffcb9c0ca4d89636d8e1c" kindref="member">readTetgenElementBoundaryMaterialTypes</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tetgenIndexBase)</highlight></codeline>
<codeline lineno="5125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5127"><highlight class="comment"><sp/><sp/><sp/>read<sp/>in<sp/>tetgen<sp/>element<sp/>boundary<sp/>file,<sp/>in<sp/>case<sp/>we<sp/>need<sp/>element<sp/>boundary</highlight></codeline>
<codeline lineno="5128"><highlight class="comment"><sp/><sp/><sp/><sp/>identifiers</highlight></codeline>
<codeline lineno="5129"><highlight class="comment"><sp/><sp/><sp/>we&apos;re<sp/>not<sp/>enforcing<sp/>the<sp/>same<sp/>numbering<sp/>scheme<sp/>on<sp/>element<sp/>boundaries</highlight></codeline>
<codeline lineno="5130"><highlight class="comment"><sp/><sp/><sp/>in<sp/>mesh<sp/>and<sp/>triangle<sp/>so<sp/>have<sp/>to<sp/>translate<sp/>outside<sp/></highlight></codeline>
<codeline lineno="5131"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="5132"><highlight class="comment"><sp/><sp/><sp/>if<sp/>material<sp/>types<sp/>not<sp/>found,<sp/>revert<sp/>to<sp/>convention<sp/>on<sp/>interior<sp/>and<sp/>exterior<sp/>label</highlight></codeline>
<codeline lineno="5133"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_file;</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementBoundaryNodesArray_file;</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/>vector&lt;int&gt;<sp/>elementBoundaryMaterialTypes_file;</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>elementBoundaryMaterialTypesInFile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1a6c4816c4d0d40b671dd8a864e055d88f" kindref="member">readTetgenElementBoundaries</ref>(filebase,</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tetgenIndexBase,</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryMaterialTypesInFile,</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElementBoundaries_file,</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryNodesArray_file,</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryMaterialTypes_file,</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>);</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;readTetgenElementBoundary<sp/>call<sp/>failed&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!elementBoundaryMaterialTypesInFile)</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start,stop;</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;<sp/>elementBoundaryElements;</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start=CurrentTime();</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Extracting<sp/>boundary<sp/>elements&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;ebN&lt;mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;ebN++)</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+1)%4)];</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+2)%4)];</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+((ebN+3)%4)];</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ebt(nodes);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementBoundaryElements.find(ebt)<sp/>!=<sp/>elementBoundaryElements.end())</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right=eN;</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements[ebt].right_ebN_element=ebN;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryElements.insert(elementBoundaryElements.end(),make_pair(ebt,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>(eN,ebN)));</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>building<sp/>element<sp/>boundary<sp/>elements<sp/>map=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>=<sp/>elementBoundaryElements.size();</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;nElementBoundaries_global<sp/>=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Allocating<sp/>Arrays&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set&lt;int&gt;<sp/>interiorElementBoundaries,exteriorElementBoundaries;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.elementBoundaryNodesArray<sp/>=<sp/><sp/>new<sp/>int[mesh.nElementBoundaries_global*mesh.nNodes_elementBoundary];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.elementBoundaryElementsArray<sp/>=<sp/>new<sp/>int[mesh.nElementBoundaries_global*2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.elementBoundaryLocalElementBoundariesArray<sp/>=<sp/>new<sp/>int[mesh.nElementBoundaries_global*2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.elementNeighborsArray<sp/>=<sp/>new<sp/>int[mesh.nElements_global*mesh.nElementBoundaries_element];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>];</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>allocating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Generating<sp/>elementBoundaryElementsArray<sp/>and<sp/>elementBoundaryNodesArray&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN=0;</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref>,<ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref>&gt;::iterator<sp/>eb=elementBoundaryElements.begin();</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb<sp/>!=<sp/>elementBoundaryElements.end();</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eb++,ebN++)</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementBoundaryNodesArray[ebN*3<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;first.nodes[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementBoundaryNodesArray[ebN*3<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;first.nodes[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementBoundaryNodesArray[ebN*3<sp/>+<sp/>2]<sp/>=<sp/>eb-&gt;first.nodes[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementBoundaryElementsArray[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementBoundaryLocalElementBoundariesArray[ebN*2<sp/>+<sp/>0]<sp/>=<sp/>eb-&gt;second.left_ebN_element;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementBoundaryElementsArray[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementBoundaryLocalElementBoundariesArray[ebN*2<sp/>+<sp/>1]<sp/>=<sp/>eb-&gt;second.right_ebN_element;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mesh.elementNeighborsArray[eb-&gt;second.left*mesh.nElementBoundaries_element<sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>eb-&gt;second.right;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//interiorElementBoundaries.insert(ebN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>mesh.elementNeighborsArray[eb-&gt;second.right*mesh.nElementBoundaries_element<sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>eb-&gt;second.left;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//exteriorElementBoundaries.insert(ebN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.left*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.left_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eb-&gt;second.right<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eb-&gt;second.right*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>eb-&gt;second.right_ebN_element]<sp/>=<sp/>ebN;</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.nInteriorElementBoundaries_global<sp/>=<sp/>interiorElementBoundaries.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.interiorElementBoundariesArray<sp/>=<sp/>new<sp/>int[mesh.nInteriorElementBoundaries_global];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.nExteriorElementBoundaries_global<sp/>=<sp/>exteriorElementBoundaries.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mesh.exteriorElementBoundariesArray<sp/>=<sp/>new<sp/>int[mesh.nExteriorElementBoundaries_global];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>ebNI=0,ebNE=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(set&lt;int&gt;::iterator<sp/>ebN=interiorElementBoundaries.begin();ebN<sp/>!=<sp/>interiorElementBoundaries.end();<sp/>ebN++,ebNI++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>mesh.interiorElementBoundariesArray[ebNI]<sp/>=<sp/>*ebN;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(set&lt;int&gt;::iterator<sp/>ebN=exteriorElementBoundaries.begin();ebN<sp/>!=<sp/>exteriorElementBoundaries.end();<sp/>ebN++,ebNE++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>mesh.exteriorElementBoundariesArray[ebNE]<sp/>=<sp/>*ebN;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;<sp/>edges;</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;extracting<sp/>edges&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[2];</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_L=0;nN_L&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_L++)</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_R=nN_L+1;nN_R&lt;mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_R++)</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_L];</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*4+nN_R];</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edges.insert(<ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;2&gt;</ref>(nodes));</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref><sp/>=<sp/>edges.size();</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>*2];</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set&lt;NodeTuple&lt;2&gt;<sp/>&gt;::iterator<sp/>edge_p=edges.begin();</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;int(edges.size());edgeN++)</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]<sp/>=<sp/>edge_p-&gt;nodes[0];</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]<sp/>=<sp/>edge_p-&gt;nodes[1];</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_p++;</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edgeN=0;edgeN&lt;mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>;edgeN++)</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]);</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeStar[mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+1]].insert(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[edgeN*2+0]);</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=1;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1;nN++)</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN-1]<sp/>+<sp/>nodeStar[nN-1].size();</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>nN_star=nodeStar[nN].begin();nN_star!=nodeStar[nN].end();nN_star++,offset++)</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>[offset]<sp/>=<sp/>*nN_star;</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=0;</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>=<ref refid="group__analytical_solutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(mesh.<ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>,mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN+1]-mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>[nN]);</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>repeat<sp/>for<sp/>node--&gt;elements<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;set&lt;int&gt;<sp/>&gt;<sp/>nodeElementsStar(mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeElementsStar[mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>+nN]].insert(eN);</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+1];</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN+1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[nN]+nodeElementsStar[nN].size();</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>]];</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0,offset=0;<sp/>nN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(set&lt;int&gt;::iterator<sp/>eN_star<sp/>=<sp/>nodeElementsStar[nN].begin();<sp/>eN_star<sp/>!=<sp/>nodeElementsStar[nN].end();</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_star++,offset++)</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>[offset]<sp/>=<sp/>*eN_star;</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>end<sp/>node--&gt;elements<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>];</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>nodeMaterial<sp/>is<sp/>DEFAULT,<sp/>go<sp/>ahead<sp/>and<sp/>set<sp/>to<sp/>interior<sp/>or<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//depending<sp/>on<sp/>which<sp/>boundary<sp/>node<sp/>belongs<sp/>to.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>node<sp/>on<sp/>at<sp/>least<sp/>one<sp/>exterior<sp/>boundary<sp/>then<sp/>it&apos;s<sp/>exterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1aec3cd3b92573b27832f6c9d2d97f93cf" kindref="member">EXTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1a8d3678ad75d9c618bf644fe028adef39" kindref="member">EXTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNI<sp/>=<sp/>0;<sp/>ebNI<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>;<sp/>ebNI++)</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>[ebNI];</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/><ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_local<sp/>=<sp/>0;<sp/>nN_local<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>;<sp/>nN_local++)</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>+nN_local];</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>==<sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>)</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/><ref refid="mesh_8cpp_1ad35607ea8a680ffaf21a6a635c89cfe5" kindref="member">INTERIOR_NODE_MATERIAL</ref>;</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout&lt;&lt;&quot;Elapsed<sp/>time<sp/>for<sp/>populating<sp/>arrays<sp/>=<sp/>&quot;&lt;&lt;(stop-start)&lt;&lt;&quot;s&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;&quot;readTetgenElementBoundaryMaterialTypes<sp/>filebase=<sp/>&quot;&lt;&lt;filebase&lt;&lt;&quot;<sp/>after<sp/>read<sp/>failed=<sp/>&quot;&lt;&lt;failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;<sp/>nElementBoundaries_file=<sp/>&quot;&lt;&lt;nElementBoundaries_file&lt;&lt;&quot;<sp/>mesh.nElementBoundaries_global=<sp/>&quot;&lt;&lt;mesh.nElementBoundaries_global<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;<sp/>mesh.nExteriorElementBoundaries_global=<sp/>&quot;&lt;&lt;mesh.nExteriorElementBoundaries_global&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>==<sp/>nElementBoundaries_file<sp/>||</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>&lt;=<sp/>nElementBoundaries_file);</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/>assert(mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assume<sp/>node<sp/>numberings<sp/>in<sp/>triangle<sp/>and<sp/>mesh<sp/>same<sp/>but<sp/>not<sp/>necessarily<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>element<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref><sp/>==<sp/>nElementBoundaries_file)</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/><sp/>tetgenElementBoundaryMaterialTypes;</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//brute<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_file;<sp/>ebN++)</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>elementBoundaryNodesArray_file[ebN*3+0];</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>elementBoundaryNodesArray_file[ebN*3+1];</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>elementBoundaryNodesArray_file[ebN*3+2];</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ttuple(nodes);</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tetgenElementBoundaryMaterialTypes[ttuple]<sp/>=<sp/>elementBoundaryMaterialTypes_file[ebN];</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;<sp/>ebN++)</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+0];</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+1];</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+2];</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ttuple(nodes);</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>tetgenElementBoundaryMaterialTypes[ttuple];</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref><sp/>&lt;=<sp/>nElementBoundaries_file)<sp/></highlight><highlight class="comment">//just<sp/>read<sp/>exterior<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>,<ref refid="mesh_8cpp_1a69c2eeb926c4caa012dd05cfc225af24" kindref="member">INTERIOR_ELEMENT_BOUNDARY_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"></highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;NodeTuple&lt;3&gt;,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/><sp/>tetgenElementBoundaryMaterialTypes;</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//brute<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>nElementBoundaries_file;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>elementBoundaryNodesArray_file[ebNE*3+0];</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>elementBoundaryNodesArray_file[ebNE*3+1];</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>elementBoundaryNodesArray_file[ebNE*3+2];</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ttuple(nodes);</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tetgenElementBoundaryMaterialTypes[ttuple]<sp/>=<sp/>elementBoundaryMaterialTypes_file[ebNE];</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebNE<sp/>=<sp/>0;<sp/>ebNE<sp/>&lt;<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;<sp/>ebNE++)</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>[ebNE];</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[3];</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+0];</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+1];</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2]<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN*3+2];</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;3&gt;</ref><sp/>ttuple(nodes);</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[ebN]<sp/>=<sp/>tetgenElementBoundaryMaterialTypes[ttuple];</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight><highlight class="comment">//shouldnt<sp/>be<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"></highlight></codeline>
<codeline lineno="5402" refid="group__mesh_1gab46b1f709ad5c07ad957ab8366c84838" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gab46b1f709ad5c07ad957ab8366c84838" kindref="member">writeTetgenMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tetgenIndexBase)</highlight></codeline>
<codeline lineno="5403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5405"><highlight class="comment"><sp/><sp/><sp/><sp/>write<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>in<sp/>triangle<sp/>format</highlight></codeline>
<codeline lineno="5406"><highlight class="comment"></highlight></codeline>
<codeline lineno="5407"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"></highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1a94f693575c705e500c84b2232f8fb5df" kindref="member">writeTetgenMeshNodesAndElements</ref>(filebase,</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tetgenIndexBase,</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//beware,<sp/>element<sp/>boundary<sp/>numbering<sp/>scheme<sp/>between<sp/>tetgen<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//mesh<sp/>tools<sp/>may<sp/>not<sp/>be<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//by<sp/>default<sp/>write<sp/>just<sp/>exterior<sp/>element<sp/>boundaries<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeExteriorElementBoundariesOnly<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundariesToWrite<sp/>=<sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>;</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1afd358c552a9ebaa2ce3ad8ae4b389de7" kindref="member">writeTetgenElementBoundaryNodes</ref>(filebase,</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tetgenIndexBase,</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElementBoundariesToWrite,</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>,</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeExteriorElementBoundariesOnly,</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>);</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"></highlight></codeline>
<codeline lineno="5437" refid="group__mesh_1ga226ca058f8a8bb3741f729b4bbd68467" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga226ca058f8a8bb3741f729b4bbd68467" kindref="member">read3DM</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase)</highlight></codeline>
<codeline lineno="5438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5440"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>from<sp/>XMS<sp/>3DM</highlight></codeline>
<codeline lineno="5441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>formatted<sp/>mesh<sp/>assuming<sp/>base<sp/>name<sp/>in<sp/>filebase</highlight></codeline>
<codeline lineno="5442"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>base<sp/>for<sp/>integer<sp/>indexing<sp/>is<sp/>indexBase</highlight></codeline>
<codeline lineno="5443"><highlight class="comment"></highlight></codeline>
<codeline lineno="5444"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/>std::string<sp/>meshFilename=<sp/>std::string(filebase)+</highlight><highlight class="stringliteral">&quot;.3dm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>meshFile(meshFilename.c_str());</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!meshFile.good())</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;read3DM<sp/>cannot<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;meshFilename&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/>std::string<sp/>fileType;</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;fileType;</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileType<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;MESH3D&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;read3DM<sp/>does<sp/>not<sp/>recognize<sp/>filetype<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;fileType&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/>std::string<sp/>firstWord;</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;firstWord;</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>=0;</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>elementNodesArray_file;</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>elementMaterialTypes_file;</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,n0,n1,n2,n3,emt;</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(firstWord<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;E4T&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+=1;</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;eN&gt;&gt;n0&gt;&gt;n1&gt;&gt;n2&gt;&gt;n3&gt;&gt;emt;</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file.push_back(n0-indexBase);</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file.push_back(n1-indexBase);</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file.push_back(n2-indexBase);</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file.push_back(n3-indexBase);</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementMaterialTypes_file.push_back(emt-indexBase);</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;firstWord;</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>nodeMaterialTypes_file;</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>nodeArray_file;</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN;</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,y,<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=0;</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!meshFile.eof()<sp/>&amp;&amp;<sp/>firstWord<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ND&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+=1;</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;nN&gt;&gt;x&gt;&gt;y&gt;&gt;<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file.push_back(x);</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file.push_back(y);</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file.push_back(<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeMaterialTypes_file.push_back(0);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;firstWord;</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/><sp/>4;</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/>copy(nodeArray_file.begin(),nodeArray_file.end(),mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/>copy(nodeMaterialTypes_file.begin(),nodeMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/>copy(elementNodesArray_file.begin(),elementNodesArray_file.end(),</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/>copy(elementMaterialTypes_file.begin(),elementMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"></highlight></codeline>
<codeline lineno="5521" refid="group__mesh_1ga5585bb85360aa0ce9512f685661094ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5585bb85360aa0ce9512f685661094ee" kindref="member">read2DM</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase)</highlight></codeline>
<codeline lineno="5522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5524"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>from<sp/>XMS<sp/>2DM</highlight></codeline>
<codeline lineno="5525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>formatted<sp/>mesh<sp/>assuming<sp/>base<sp/>name<sp/><sp/>filebase</highlight></codeline>
<codeline lineno="5526"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>base<sp/>for<sp/>integer<sp/>indexing<sp/>is<sp/>indexBase</highlight></codeline>
<codeline lineno="5527"><highlight class="comment"></highlight></codeline>
<codeline lineno="5528"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/>std::string<sp/>meshFilename=<sp/>std::string(filebase)+</highlight><highlight class="stringliteral">&quot;.3dm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>meshFile(meshFilename.c_str());</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!meshFile.good())</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;read2DM<sp/>cannot<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;meshFilename&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/>std::string<sp/>fileType;</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;fileType;</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileType<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;MESH2D&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;read2DM<sp/>does<sp/>not<sp/>recognize<sp/>filetype<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;fileType&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/>std::string<sp/>firstWord;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;firstWord;</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>=0;</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>elementNodesArray_file;</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>elementMaterialTypes_file;</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,n0,n1,n2,emt;</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(firstWord<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;E3T&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+=1;</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;eN&gt;&gt;n0&gt;&gt;n1&gt;&gt;n2&gt;&gt;emt;</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file.push_back(n0-indexBase);</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file.push_back(n1-indexBase);</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_file.push_back(n2-indexBase);</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementMaterialTypes_file.push_back(emt-indexBase);</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;firstWord;</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>nodeMaterialTypes_file;</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>nodeArray_file;</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN;</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,y,<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=0;</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!meshFile.eof()<sp/>&amp;&amp;<sp/>firstWord<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ND&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+=1;</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;nN&gt;&gt;x&gt;&gt;y&gt;&gt;<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file.push_back(x);</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file.push_back(y);</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_file.push_back(<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodeMaterialTypes_file.push_back(0);</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;firstWord;</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/><sp/>3;</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/>copy(nodeArray_file.begin(),nodeArray_file.end(),mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/>copy(nodeMaterialTypes_file.begin(),nodeMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/>copy(elementNodesArray_file.begin(),elementNodesArray_file.end(),</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"></highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/>assert(!mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/>copy(elementMaterialTypes_file.begin(),elementMaterialTypes_file.end(),</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"></highlight></codeline>
<codeline lineno="5604" refid="group__mesh_1gac9c66ee0f6dbc487ee09b2b1fc0a0242" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac9c66ee0f6dbc487ee09b2b1fc0a0242" kindref="member">readHex</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase)</highlight></codeline>
<codeline lineno="5605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5607"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>from<sp/></highlight></codeline>
<codeline lineno="5608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>formatted<sp/>mesh<sp/>assuming<sp/>base<sp/>name<sp/>in<sp/>filebase</highlight></codeline>
<codeline lineno="5609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>vertex<sp/>numbering<sp/>base<sp/>as<sp/>input</highlight></codeline>
<codeline lineno="5610"><highlight class="comment"></highlight></codeline>
<codeline lineno="5611"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/>std::string<sp/>meshFilename=<sp/>std::string(filebase)+</highlight><highlight class="stringliteral">&quot;.mesh&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>meshFile(meshFilename.c_str());</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"></highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Reading<sp/>hex<sp/>mesh:<sp/>&quot;&lt;&lt;meshFilename&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5619"><highlight class="normal"></highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!meshFile.good())</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;readHex<sp/>cannot<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;meshFilename&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>element<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/>std::string<sp/>fileType;</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;fileType;</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileType<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;HEX&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;readHex<sp/>does<sp/>not<sp/>recognize<sp/>filetype<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;fileType&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>mesh<sp/>size<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/>meshFile&gt;&gt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>&gt;&gt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/></highlight></codeline>
<codeline lineno="5640"><highlight class="normal"></highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>[mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)<sp/></highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0]&gt;&gt;</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1]&gt;&gt;</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2];</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"></highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>elements<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>];</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"></highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,n1,n2,n3,n4,n5,n6,n7,emt;</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN=0;eN&lt;mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)<sp/></highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eNne<sp/>=<sp/>eN*mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshFile&gt;&gt;n0&gt;&gt;n1&gt;&gt;n2&gt;&gt;n3&gt;&gt;n4&gt;&gt;n5&gt;&gt;n6&gt;&gt;n7&gt;&gt;emt;</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"></highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+0]<sp/>=<sp/>n0-indexBase;</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+1]<sp/>=<sp/>n1-indexBase;</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+2]<sp/>=<sp/>n2-indexBase;</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+3]<sp/>=<sp/>n3-indexBase;</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+4]<sp/>=<sp/>n4-indexBase;</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+5]<sp/>=<sp/>n5-indexBase;</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+6]<sp/>=<sp/>n6-indexBase;</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eNne+7]<sp/>=<sp/>n7-indexBase;</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"></highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]<sp/>=<sp/>emt-indexBase;</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight></codeline>
<codeline lineno="5679" refid="group__mesh_1ga75f5fa8f64804d57c1e5742f67756106" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga75f5fa8f64804d57c1e5742f67756106" kindref="member">readBC</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase)</highlight></codeline>
<codeline lineno="5680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5682"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>from<sp/>2DM<sp/>or<sp/>3DM</highlight></codeline>
<codeline lineno="5683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>formatted<sp/>mesh<sp/>assuming<sp/>base<sp/>name<sp/>in<sp/>filebase</highlight></codeline>
<codeline lineno="5684"><highlight class="comment"><sp/><sp/><sp/><sp/>tetgen<sp/>vertex<sp/>numbering<sp/>base<sp/>as<sp/>input</highlight></codeline>
<codeline lineno="5685"><highlight class="comment"></highlight></codeline>
<codeline lineno="5686"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/>std::string<sp/>bcFilename=<sp/>std::string(filebase)+</highlight><highlight class="stringliteral">&quot;.bc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>bcFile(bcFilename.c_str());</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bcFile.good())</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;readBC<sp/>cannot<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;bcFilename&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/>std::string<sp/>firstWord;</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,ebN_local,nN,flag;</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!bcFile.eof())</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bcFile&gt;&gt;firstWord;</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstWord<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FCS&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcFile&gt;&gt;eN&gt;&gt;ebN_local&gt;&gt;flag;</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>[mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[(eN-indexBase)*mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+(ebN_local-indexBase)]]<sp/>=<sp/>flag;</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstWord<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NDS&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcFile&gt;&gt;nN&gt;&gt;flag;</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN-indexBase]=flag;</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5717" refid="group__mesh_1gad89a88a5a0b744cb8809b15bb55b28f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad89a88a5a0b744cb8809b15bb55b28f0" kindref="member">write3dmMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adhIndexBase)</highlight></codeline>
<codeline lineno="5718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5720"><highlight class="comment"><sp/><sp/><sp/><sp/>write<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>in<sp/>3dm<sp/>format</highlight></codeline>
<codeline lineno="5721"><highlight class="comment"></highlight></codeline>
<codeline lineno="5722"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"></highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1a187ce9f835e193a5af02760c2a451229" kindref="member">write3dmMeshNodesAndElements</ref>(filebase,</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adhIndexBase,</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5737" refid="group__mesh_1ga3ea5e89286c9123ed49826f60722de05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga3ea5e89286c9123ed49826f60722de05" kindref="member">write2dmMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adhIndexBase)</highlight></codeline>
<codeline lineno="5738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="5740"><highlight class="comment"><sp/><sp/><sp/><sp/>write<sp/>nodes<sp/>and<sp/>element<sp/>information<sp/>in<sp/>2dm<sp/>format</highlight></codeline>
<codeline lineno="5741"><highlight class="comment"></highlight></codeline>
<codeline lineno="5742"><highlight class="comment"><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemesh_i_o" kindref="compound">meshIO</ref>;</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/>assert(filebase);</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"></highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/><ref refid="namespacemesh_i_o_1a9742e24e7c18b92dd4de812edbc275c0" kindref="member">write2dmMeshNodesAndElements</ref>(filebase,</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adhIndexBase,</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="5756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"></highlight></codeline>
<codeline lineno="5758"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5760" refid="mesh_8cpp_1a7bff604c3671cbd056db4d8768684326" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1a7bff604c3671cbd056db4d8768684326" kindref="member">growMultilevelMesh</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevels2add,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh)</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>create<sp/>new<sp/>meshArray,<sp/>elementChildren,<sp/>elementChildrenOffset,<sp/>elementParentArray&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>make<sp/>shallow<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevelsNew<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>+nLevels2add;</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref><sp/>*<sp/>meshArrayTmp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>[nLevelsNew];</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>elementChildrenArrayTmp<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevelsNew];</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>elementChildrenOffsetsTmp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevelsNew];</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>elementParentsArrayTmp<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[nLevelsNew];</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hope<sp/>shallow<sp/>copies<sp/>are<sp/>allright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshArrayTmp[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i];</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArrayTmp[i]<sp/><sp/><sp/><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i];</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenOffsetsTmp[i]<sp/><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i];</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArrayTmp[i]<sp/><sp/><sp/><sp/><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i];</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>;</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>;</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>;</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>meshArrayTmp;</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref><sp/><sp/><sp/>=<sp/>elementChildrenArrayTmp;</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref><sp/>=<sp/>elementChildrenOffsetsTmp;</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref><sp/><sp/><sp/><sp/>=<sp/>elementParentsArrayTmp;</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>new<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;<sp/>i<sp/>&lt;<sp/>nLevelsNew;<sp/>i++)</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i]);</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i]<sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i]<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>=<sp/>nLevelsNew;</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"></highlight></codeline>
<codeline lineno="5801" refid="group__mesh_1gaf3b6657eb67edd06d7661efdd5eef570" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf3b6657eb67edd06d7661efdd5eef570" kindref="member">locallyRefineEdgeMesh</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray)</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementTagArray<sp/>for<sp/>now<sp/>at<sp/>least<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//1<sp/>--&gt;<sp/>refine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//0<sp/>--&gt;<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5808"><highlight class="normal"></highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>extend<sp/>arrays<sp/>and<sp/>data<sp/>structures<sp/>in<sp/>multilevelMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevelsPrev<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a7bff604c3671cbd056db4d8768684326" kindref="member">growMultilevelMesh</ref>(1,multilevelMesh);</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>==<sp/>nLevelsPrev+1);</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start<sp/>by<sp/>initializing<sp/>children<sp/>offsets<sp/>on<sp/>previous<sp/>finest<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1];</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//figure<sp/>out<sp/>how<sp/>many<sp/>elments<sp/>and<sp/>nodes<sp/>to<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_tagged<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_tagged++;</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//2<sp/>children<sp/>per<sp/>parent,<sp/>lose<sp/>the<sp/>parent<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+nElements_tagged;</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//1<sp/>new<sp/>node<sp/>per<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNodes_new<sp/><sp/><sp/><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+nElements_tagged;</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>multilevel<sp/>arrays<sp/>for<sp/>new<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//childrenArray<sp/>&lt;--<sp/>old<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>choice<sp/>1<sp/>size<sp/>nElementsNew<sp/>only<sp/>keep<sp/>track<sp/>of<sp/>actual<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>choice<sp/>2<sp/>size<sp/>nElements_global<sp/>(on<sp/>new<sp/>mesh)<sp/>an<sp/>element<sp/>considers<sp/>itself<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>child<sp/>on<sp/>the<sp/>new<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[nElements_new];</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>array<sp/>:<sp/>nElementsNew<sp/>--&gt;<sp/>new<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[nElements_new];</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>mesh<sp/>data<sp/>structures<sp/>on<sp/>new<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>nElements_new;</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/><sp/><sp/><sp/>=<sp/>nNodes_new;</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementNodesArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>=<sp/></highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*2];</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementMaterialTypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//node<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[3*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//node<sp/>material<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"></highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>copy<sp/>over<sp/>nodes<sp/>from<sp/>old<sp/>mesh<sp/>since<sp/>nested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;<sp/>nN++)</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+0]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+0];</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+1];</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+2]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*nN+2];</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//material<sp/>types<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>[nN];</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//where<sp/>to<sp/>start<sp/>with<sp/>new<sp/>node<sp/>numbers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_new<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//where<sp/>to<sp/>start<sp/>with<sp/>new<sp/>element<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1],0,</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"></highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>ahead<sp/>and<sp/><sp/>use<sp/>node<sp/>set<sp/>even<sp/>though<sp/>should<sp/>be<sp/>no<sp/>chance<sp/>of<sp/>duplicating<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Node&gt;<sp/>newNodeSet;</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Node&gt;::iterator<sp/>nodeItr;</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"></highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>0;<sp/>eN_parent<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/></highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_parent++)</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN_parent]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>refining<sp/>so<sp/>just<sp/>add<sp/>to<sp/>new<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_new*2+0]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2+0];</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_new*2+1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2+1];</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>element<sp/>be<sp/>its<sp/>own<sp/>child?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][eN_parent];</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][eN_parent+1]<sp/>=<sp/>offset+1;</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1][offset+0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev][eN_new]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN_parent]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//2<sp/>children<sp/>per<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>middle<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][eN_parent];</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][eN_parent+1]<sp/>=<sp/>offset+2;</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1][offset+0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1][offset+1]<sp/>=<sp/>eN_new+1;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev][eN_new]<sp/><sp/><sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev][eN_new+1]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoints[1];</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/></highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>0]*3,</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/></highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*2<sp/>+<sp/>1]*3,</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0]);</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNodeSet.insert(midpoints[0]);</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_new++;</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new<sp/>=<sp/><ref refid="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" kindref="member">newEdge</ref>(eN_new,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[2*eN_parent+0],</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new<sp/>=<sp/><ref refid="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" kindref="member">newEdge</ref>(eN_new,multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>,</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[2*eN_parent+1]);</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"></highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//actually<sp/>refine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//parent<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(nN_new)<sp/>==<sp/>(newNodeSet.size()+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>));</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(nN_new<sp/>==<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//could<sp/>copy<sp/>over<sp/>nodes<sp/>here<sp/>like<sp/>in<sp/>globallyRefine<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>insert<sp/>new<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+0]<sp/>=<sp/>nodeItr-&gt;x;</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+1]<sp/>=<sp/>nodeItr-&gt;y;</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+2]<sp/>=<sp/>nodeItr-&gt;z;</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>element<sp/>material<sp/>types<sp/>from<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev][eN];</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>nodes<sp/>get<sp/>default<sp/>material<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>&gt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>-multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//build<sp/>element<sp/>boundary<sp/>info<sp/>etc<sp/>here<sp/>or<sp/>in<sp/>calling<sp/>routine?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//locallyRefineEdgeMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5951" refid="group__mesh_1ga336f7c853f7c2889c3d57a0702ada9d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga336f7c853f7c2889c3d57a0702ada9d8" kindref="member">locallyRefineTriangleMesh</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray)</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementTagArray<sp/>for<sp/>now<sp/>at<sp/>least<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//1<sp/>--&gt;<sp/>refine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//0<sp/>--&gt;<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>extend<sp/>arrays<sp/>and<sp/>data<sp/>structures<sp/>in<sp/>multilevelMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevelsPrev<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a7bff604c3671cbd056db4d8768684326" kindref="member">growMultilevelMesh</ref>(1,multilevelMesh);</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>==<sp/>nLevelsPrev+1);</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_tagged<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_tagged++;</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"></highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>get<sp/>things<sp/>working,<sp/>use<sp/>temporaries<sp/>for<sp/>mesh<sp/>that<sp/>can<sp/>be<sp/>resized<sp/>&quot;easily&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>copy<sp/>back<sp/>to<sp/>c<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>elementNodesArray_tmp,elementNeighborsArray_tmp,bases_tmp,</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray_tmp;</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><sp/>nodeArray_tmp;</highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//live<sp/>on<sp/>previous<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;list&lt;int&gt;<sp/>&gt;<sp/>elementChildrenList(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>);</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;bool&gt;<sp/><sp/>refined(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>use<sp/>upper<sp/>bound<sp/>on<sp/>new<sp/>elements<sp/>and<sp/>grab<sp/>memory<sp/>up<sp/>front?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/>elementNodesArray_tmp.reserve(3*(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4*nElements_tagged));</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/><sp/><sp/>elementNeighborsArray_tmp.reserve(3*(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4*nElements_tagged));</highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/>bases_tmp.reserve(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4*nElements_tagged);</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"></highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/><sp/><sp/>nodeArray_tmp.reserve(3*(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>+</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3*nElements_tagged));</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"></highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/>elementParentsArray_tmp.reserve(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4*nElements_tagged);</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>over<sp/>nodeArray,<sp/>elementNodesArray,<sp/>and<sp/>elementNeighborsArray,<sp/>bases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>these<sp/>are<sp/>used<sp/>in<sp/>the<sp/>refinement<sp/>process<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5997"><highlight class="normal"></highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/>elementNodesArray_tmp.insert(elementNodesArray_tmp.begin(),</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>+</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3);</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"></highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/>elementNeighborsArray_tmp.insert(elementNeighborsArray_tmp.begin(),</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>,</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>+</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3);</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"></highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/>bases_tmp.insert(bases_tmp.begin(),</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>,</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>+</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>);</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"></highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/>nodeArray_tmp.insert(nodeArray_tmp.begin(),</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>+</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"></highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>mesh<sp/>starts<sp/>off<sp/>as<sp/>parent<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNodes_new<sp/><sp/><sp/><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//every<sp/>element<sp/>is<sp/>its<sp/>own<sp/>parent<sp/>to<sp/>start<sp/>off<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray_tmp.push_back(eN);<sp/></highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_parent<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN_parent++)</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//use<sp/>loop<sp/>through<sp/>elements<sp/>on<sp/>parent<sp/>mesh<sp/>but<sp/>these<sp/>numbers<sp/>will<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reassigned<sp/>in<sp/>refinement<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN_parent]<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!refined[eN_parent])</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>failed<sp/>||<sp/><ref refid="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" kindref="member">newestNodeBisect</ref>(eN_parent,</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_new,</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_new,</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_tmp,</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_tmp,</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray_tmp,</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenList,</highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray_tmp,</highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases_tmp,</highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined);</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//eN_parent<sp/>is<sp/>tagged<sp/>and<sp/>not<sp/>already<sp/>refined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//elements<sp/>on<sp/>original<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Done<sp/>with<sp/>refinement&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>have<sp/>to<sp/>allocate<sp/>c<sp/>interface<sp/>data<sp/>and<sp/>copy<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(elementParentsArray_tmp.size()<sp/>==<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(nElements_new));</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>array<sp/>:<sp/>nElementsNew<sp/>--&gt;<sp/>new<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[nElements_new];</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(elementParentsArray_tmp.begin(),elementParentsArray_tmp.end(),</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev]);</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"></highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initialize<sp/>children<sp/>offsets<sp/>on<sp/>previous<sp/>finest<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1];</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[nElements_new];</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][eN];</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementChildrenList[eN].size()<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="comment">//eN<sp/>was<sp/>refined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][eN+1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+<sp/>elementChildrenList[eN].size();</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::list&lt;int&gt;::iterator<sp/>it<sp/>=<sp/>elementChildrenList[eN].begin();<sp/></highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>elementChildrenList[eN].end();<sp/>it++)</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1][offset+i]<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//element<sp/>is<sp/>its<sp/>own<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][eN+1]<sp/>=<sp/>offset+1;</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1][offset+0]<sp/>=<sp/>eN;</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>take<sp/>care<sp/>of<sp/>mesh<sp/>data<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>nElements_new;</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/><sp/><sp/><sp/>=<sp/>nNodes_new;</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementNodesArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>=<sp/></highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementMaterialTypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nodal<sp/>material<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"></highlight></codeline>
<codeline lineno="6096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//node<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[3*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>=<sp/></highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"></highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>over<sp/>from<sp/>tmp&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(elementNodesArray_tmp.begin(),elementNodesArray_tmp.end(),</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>);</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(nodeArray_tmp.begin(),nodeArray_tmp.end(),</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(bases_tmp.begin(),bases_tmp.end(),</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>);</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"></highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>element<sp/>material<sp/>types<sp/>from<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev][eN];</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nodes<sp/>on<sp/>parent<sp/>mesh<sp/>retain<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>&gt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>-multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"></highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="comment">//locallyRefineTriangularMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//may<sp/>be<sp/>able<sp/>to<sp/>get<sp/>newest<sp/>node<sp/>alg<sp/>to<sp/>work<sp/>even<sp/>when<sp/>bases<sp/>not<sp/>defined?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6130" refid="group__mesh_1ga1837479558ffb93432b410f8eaf25b39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga1837479558ffb93432b410f8eaf25b39" kindref="member">setNewestNodeBasesToLongestEdge</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh)</highlight><highlight class="comment">//or<sp/>just<sp/>mesh?<sp/>Mesh&amp;<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevels<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;WARNING<sp/>setNewestNodeBasesToLongestEdge<sp/>newestNodeBases<sp/>!=NULL<sp/>exiting&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//2d<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;WARNING<sp/>setNewestNodeBasesToLongestEdge<sp/>2d<sp/>only<sp/>exiting&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_longest_local<sp/>=<sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(eN,</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevels-1].<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>[eN]<sp/>=<sp/>ebN_longest_local;</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6158" refid="group__mesh_1gaa0e013b44f0b757455a50e61f5e19db8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa0e013b44f0b757455a50e61f5e19db8" kindref="member">locallyRefineTriangleMesh_redGreen</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray)</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>extend<sp/>arrays<sp/>and<sp/>data<sp/>structures<sp/>in<sp/>multilevelMesh<sp/>to<sp/>make<sp/>room<sp/>for<sp/>new<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevelsPrev<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a7bff604c3671cbd056db4d8768684326" kindref="member">growMultilevelMesh</ref>(1,multilevelMesh);</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>==<sp/>nLevelsPrev+1);</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//build<sp/>a<sp/>set<sp/>of<sp/>the<sp/>nodes<sp/>added<sp/>in<sp/>refinement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Node&gt;<sp/>newNodeSet;</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;Node&gt;::iterator<sp/>nodeItr;</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//build<sp/>the<sp/>elementChildren<sp/>and<sp/>elementParent<sp/>maps<sp/>as<sp/>maps<sp/>so<sp/>we<sp/>can<sp/>accumulate<sp/>on<sp/>the<sp/>fly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;int,<sp/>vector&lt;int&gt;<sp/>&gt;<sp/>elementChildren;</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;int,<sp/>int&gt;<sp/>elementParents;</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//collect<sp/>the<sp/>set<sp/>of<sp/>parent<sp/>elements<sp/>slated<sp/>for<sp/>bisection<sp/>or<sp/>uniform<sp/>refinement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;int,int&gt;<sp/>elementsForBisection;</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;int,vector&lt;int&gt;<sp/>&gt;<sp/>elementsForTrisection,newElementsForTrisection,nextElementsForTrisection;</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>elementsForUniform,newElementsForUniform,nextElementsForUniform;</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//keep<sp/>track<sp/>of<sp/>the<sp/>new<sp/>elements<sp/>as<sp/>a<sp/>vector<sp/>of<sp/>4<sp/>ints<sp/>(eN,n0,n1,n2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;valarray&lt;int&gt;<sp/>&gt;<sp/>newElements;</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//keep<sp/>track<sp/>of<sp/>what<sp/>old<sp/>elements<sp/><sp/>survive<sp/>on<sp/>the<sp/>new<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;int&gt;<sp/>oldElements;</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>nLevelsPrev;</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initialize<sp/>old<sp/>elements<sp/>to<sp/>all<sp/>elements<sp/>and<sp/>tag<sp/>some<sp/>for<sp/>uniform<sp/>refinement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent=0;eN_parent&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN_parent++)</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldElements.insert(eN_parent);</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN_parent]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForUniform.insert(eN_parent);</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForUniform.insert(eN_parent);</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!newElementsForUniform.empty()<sp/>||<sp/>!newElementsForTrisection.empty())</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;new<sp/>uniform&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(set&lt;int&gt;::iterator<sp/>eN_uniform_itr<sp/>=<sp/>newElementsForUniform.begin();<sp/>eN_uniform_itr<sp/>!=<sp/>newElementsForUniform.end();<sp/>eN_uniform_itr++)</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>*eN_uniform_itr;</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldElements.erase(eN_parent);</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_new+0);</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_new+1);</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_new+2);</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_parent);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_new<sp/>+<sp/>0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_new<sp/>+<sp/>1]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_new<sp/>+<sp/>2]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_parent]<sp/><sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoints[3];</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_0=0,nN_midpoint=0;nN_element_0&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_element_0++)</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_1=nN_element_0+1;nN_element_1&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_element_1++,nN_midpoint++)</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_0]*3,</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_1]*3,</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeItr<sp/>==<sp/>newNodeSet.end())</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNodeSet.insert(midpoints[nN_midpoint]);</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_new++;</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[nN_midpoint].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nodeItr-&gt;nN;</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>triangles<sp/>formed<sp/>by<sp/>chopping<sp/>the<sp/>points<sp/>off<sp/>the<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valarray&lt;int&gt;<sp/>newElement(4);</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+0];</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+1];</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+2];</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>midpoints[1].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>midpoints[2].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//put<sp/>neighbors<sp/>in<sp/>correct<sp/>refinement<sp/>class<sp/>to<sp/>make<sp/>conforming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/>ebN++)</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neighbor<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eN_parent*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN],</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_global<sp/>=<sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN],</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element=0;</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eN_neighbor<sp/>==<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN_global*2+0])</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN_global*2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN_global*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_neighbor<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>elementsForUniform.find(eN_neighbor)<sp/>==<sp/>elementsForUniform.end())<sp/></highlight><highlight class="comment">//if<sp/>not<sp/>in<sp/>uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementsForTrisection.find(eN_neighbor)<sp/>==<sp/>elementsForTrisection.end())<sp/></highlight><highlight class="comment">//if<sp/>not<sp/>in<sp/>trisection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementsForBisection.find(eN_neighbor)<sp/>==<sp/>elementsForBisection.end())<sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>in<sp/>bisection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>longest<sp/>edge<sp/>to<sp/>see<sp/>whether<sp/>to<sp/>bisect<sp/>or<sp/>trisect<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftNode,rightNode,</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftNode1,rightNode1,</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element1,ebN_global1,</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge,longestEdge_element;</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>,edgeLength1;</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global*2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref><sp/>=<sp/><ref refid="group__mesh_1gad28ab11ba6f458a55f43945086b06a41" kindref="member">edgeLengthFromNodeNumbers</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,leftNode,rightNode);</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge=ebN_global;</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_element=ebN_neighbor_element;</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset=1;offset<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/>offset++)</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element1<sp/>=<sp/>(ebN_neighbor_element<sp/>+<sp/>offset)%multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_global1<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_neighbor*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element1];</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftNode1<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global1*2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightNode1<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global1*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeLength1<sp/>=<sp/><ref refid="group__mesh_1gad28ab11ba6f458a55f43945086b06a41" kindref="member">edgeLengthFromNodeNumbers</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,leftNode1,rightNode1);</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeLength1<sp/>&gt;<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>)</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge<sp/>=<sp/>ebN_global1;</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_element=ebN_neighbor_element1;</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(longestEdge<sp/>==<sp/>ebN_global)<sp/></highlight><highlight class="comment">//if<sp/>longest<sp/>edge<sp/>then<sp/>bisect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForBisection[eN_neighbor]<sp/>=<sp/>longestEdge_element;</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>not<sp/>longest<sp/>edge<sp/>then<sp/>trisect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForTrisection[eN_neighbor].push_back(longestEdge_element);</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(longestEdge_element);</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>already<sp/>bisected<sp/>(on<sp/>another<sp/>edge)<sp/>then<sp/>trisect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementsForBisection[eN_neighbor]<sp/>!=<sp/>ebN_neighbor_element)</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForTrisection[eN_neighbor].push_back(elementsForBisection[eN_neighbor]);</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(elementsForBisection[eN_neighbor]);</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForBisection.erase(eN_neighbor);</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>already<sp/>trisected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementsForTrisection[eN_neighbor][0]<sp/>!=<sp/>ebN<sp/>and<sp/>elementsForTrisection[eN_neighbor][0]<sp/>!=<sp/>ebN)<sp/></highlight><highlight class="comment">//if<sp/>this<sp/>edge<sp/>is<sp/>non-conforming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForUniform.insert(eN_neighbor);</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForUniform.insert(eN_neighbor);</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection.erase(eN_neighbor);</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForTrisection.erase(eN_neighbor);</highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForUniform.clear();</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForUniform<sp/>=<sp/>nextElementsForUniform;</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForUniform.clear();</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;new<sp/>trisection&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,vector&lt;int&gt;<sp/>&gt;::iterator<sp/>eN_trisection_itr<sp/>=<sp/>newElementsForTrisection.begin();<sp/>eN_trisection_itr<sp/>!=<sp/>newElementsForTrisection.end();<sp/>eN_trisection_itr++)</highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>eN_trisection_itr-&gt;first,</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_element<sp/>=<sp/><sp/>eN_trisection_itr-&gt;second[0],</highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherEdge_element<sp/>=<sp/>eN_trisection_itr-&gt;second[1];</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>longestEdge<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*3<sp/>+<sp/>longestEdge_element],</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherEdge<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*3<sp/>+<sp/>otherEdge_element];</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>new<sp/>node<sp/>if<sp/><sp/>necessary,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>the<sp/>longest<sp/><sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoint_new;</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[longestEdge*2<sp/>+<sp/>0]*3,</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[longestEdge*2<sp/>+<sp/>1]*3,</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoint_new);</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(midpoint_new);</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeItr<sp/>==<sp/>newNodeSet.end())<sp/></highlight><highlight class="comment">//if<sp/>this<sp/>node<sp/>is<sp/>new<sp/>then<sp/>add<sp/>it<sp/>and<sp/>decide<sp/>what<sp/>to<sp/>do<sp/>with<sp/>the<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoint_new.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNodeSet.insert(midpoint_new);</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_new++;</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>the<sp/>node<sp/>is<sp/>new<sp/>the<sp/>neighbor<sp/>will<sp/>be<sp/>non-conforming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//put<sp/>neighbor<sp/>in<sp/>right<sp/>refinement<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neighbor<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>[eN_parent*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref><sp/>+<sp/>longestEdge_element],</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_global<sp/>=<sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_element],</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element=0;</highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eN_neighbor<sp/>==<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>[ebN_global*2+0])</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN_global*2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>[ebN_global*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_neighbor<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>elementsForUniform.find(eN_neighbor)<sp/>==<sp/>elementsForUniform.end())<sp/></highlight><highlight class="comment">//if<sp/>not<sp/>in<sp/>uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementsForTrisection.find(eN_neighbor)<sp/>==<sp/>elementsForTrisection.end())<sp/></highlight><highlight class="comment">//if<sp/>not<sp/>in<sp/>trisection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elementsForBisection.find(eN_neighbor)<sp/>==<sp/>elementsForBisection.end())<sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>in<sp/>bisection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>longest<sp/>edge<sp/>to<sp/>see<sp/>whether<sp/>to<sp/>bisect<sp/>or<sp/>trisect<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftNode,rightNode,</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftNode1,rightNode1,</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element1,ebN_global1,</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge,longestEdge_element;</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>,edgeLength1;</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global*2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref><sp/>=<sp/><ref refid="group__mesh_1gad28ab11ba6f458a55f43945086b06a41" kindref="member">edgeLengthFromNodeNumbers</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,leftNode,rightNode);</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge=ebN_global;</highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_element=ebN_neighbor_element;</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset=1;offset<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/>offset++)</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element1<sp/>=<sp/>(ebN_neighbor_element<sp/>+<sp/>offset)%multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;</highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_global1<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_neighbor*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neighbor_element1];</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftNode1<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global1*2<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightNode1<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[ebN_global1*2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeLength1<sp/>=<sp/><ref refid="group__mesh_1gad28ab11ba6f458a55f43945086b06a41" kindref="member">edgeLengthFromNodeNumbers</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,leftNode1,rightNode1);</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeLength1<sp/>&gt;<sp/><ref refid="mesh_8cpp_1a551170923ac5c37baddc94df2d23c4d3" kindref="member">edgeLength</ref>)</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge<sp/>=<sp/>ebN_global1;</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_element=ebN_neighbor_element1;</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(longestEdge<sp/>==<sp/>ebN_global)<sp/></highlight><highlight class="comment">//if<sp/>longest<sp/>edge<sp/>then<sp/>bisect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForBisection[eN_neighbor]<sp/>=<sp/>longestEdge_element;</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>not<sp/>longest<sp/>edge<sp/>then<sp/>trisect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForTrisection[eN_neighbor].push_back(longestEdge_element);</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(longestEdge_element);</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>already<sp/>bisected<sp/>(on<sp/>another<sp/>edge)<sp/>then<sp/>trisect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(elementsForBisection[eN_neighbor]<sp/>!=<sp/>ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForTrisection[eN_neighbor].push_back(elementsForBisection[eN_neighbor]);</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(elementsForBisection[eN_neighbor]);</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection[eN_neighbor].push_back(ebN_neighbor_element);</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForBisection.erase(eN_neighbor);</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>already<sp/>trisected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementsForTrisection[eN_neighbor][0]<sp/>!=<sp/>longestEdge<sp/>and<sp/>elementsForTrisection[eN_neighbor][0]<sp/>!=<sp/>longestEdge)<sp/></highlight><highlight class="comment">//if<sp/>this<sp/>edge<sp/>is<sp/>non-conforming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForUniform.insert(eN_neighbor);</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForUniform.insert(eN_neighbor);</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementsForTrisection.erase(eN_neighbor);</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForTrisection.erase(eN_neighbor);</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoint_other;</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[otherEdge*2<sp/>+<sp/>0]*3,</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[otherEdge*2<sp/>+<sp/>1]*3,</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoint_other);</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(midpoint_other);</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(nodeItr<sp/>!=<sp/>newNodeSet.end());</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForTrisection.clear();</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementsForTrisection<sp/>=<sp/>nextElementsForTrisection;</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextElementsForTrisection.clear();</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;building<sp/>trisected<sp/>elements&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,vector&lt;int&gt;<sp/>&gt;::iterator<sp/>eN_trisection_itr<sp/>=<sp/>elementsForTrisection.begin();<sp/>eN_trisection_itr<sp/>!=<sp/>elementsForTrisection.end();<sp/>eN_trisection_itr++)</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>eN_trisection_itr-&gt;first,</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_element<sp/>=<sp/><sp/>eN_trisection_itr-&gt;second[0],</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherEdge_element<sp/>=<sp/>eN_trisection_itr-&gt;second[1];</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>longestEdge<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*3<sp/>+<sp/>longestEdge_element],</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherEdge<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*3<sp/>+<sp/>otherEdge_element];</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>longestEdge_leftNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[longestEdge*2<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_rightNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[longestEdge*2<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherEdge_leftNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[otherEdge*2<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherEdge_rightNode<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[otherEdge*2<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0,n1,n2;</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherEdge_rightNode<sp/>==<sp/>longestEdge_leftNode)</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_rightNode;</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_leftNode;</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_rightNode;</highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherEdge_rightNode<sp/>==<sp/>longestEdge_rightNode)</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_rightNode;</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_leftNode;</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_leftNode;</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(otherEdge_leftNode<sp/>==<sp/>longestEdge_leftNode)</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_leftNode;</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_rightNode;</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_rightNode;</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_leftNode;</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_rightNode;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_leftNode;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldElements.erase(eN_parent);</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_new+0);</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_new+1);</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_parent);</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_new<sp/>+<sp/>0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_new<sp/>+<sp/>1]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_parent]<sp/><sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>new<sp/><sp/>nodes<sp/>should<sp/>need<sp/>to<sp/>be<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoint_new;</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[longestEdge*2<sp/>+<sp/>0]*3,</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[longestEdge*2<sp/>+<sp/>1]*3,</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoint_new);</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(midpoint_new);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(nodeItr<sp/>!=<sp/>newNodeSet.end());</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoint_new.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nodeItr-&gt;nN;</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoint_other;</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[otherEdge*2<sp/>+<sp/>0]*3,</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>[otherEdge*2<sp/>+<sp/>1]*3,</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoint_other);</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(midpoint_other);</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(nodeItr<sp/>!=<sp/>newNodeSet.end());</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoint_other.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>nodeItr-&gt;nN;</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>worrying<sp/>about<sp/>orientation<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valarray&lt;int&gt;<sp/>newElement(4);</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>midpoint_new.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>midpoint_other.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>midpoint_other.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>midpoint_new.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>midpoint_new.<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"></highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;building<sp/>bisected<sp/>elements&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>we<sp/>just<sp/>have<sp/>to<sp/>bisect<sp/>remaining<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(map&lt;int,int&gt;::iterator<sp/>eN_bisect_itr<sp/>=<sp/>elementsForBisection.begin();<sp/>eN_bisect_itr<sp/>!=<sp/>elementsForBisection.end();<sp/>eN_bisect_itr++)</highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>eN_bisect_itr-&gt;first;</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//longestEdge_element<sp/>=<sp/>eN_bisect_itr-&gt;second;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fix<sp/><sp/>later<sp/>to<sp/>use<sp/>the<sp/>longest<sp/>edge<sp/>info<sp/>instead<sp/>of<sp/>searching<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>longestEdge<sp/>=<sp/>multilevelMesh.meshArray[i-1].elementBoundaryElementsArray[eN_parent*3<sp/>+<sp/>longestEdge_element],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_leftNode<sp/>=<sp/>multilevelMesh.meshArray[i-1].edgeNodesArray[longestEdge*2<sp/>+<sp/>0],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longestEdge_rightNode<sp/>=<sp/>multilevelMesh.meshArray[i-1].edgeNodesArray[longestEdge*2<sp/>+<sp/>1],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0,n1,n2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6532"><highlight class="normal"></highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(otherEdge_rightNode<sp/>==<sp/>longestEdge_leftNode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_rightNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_leftNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_rightNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(otherEdge_rightNode<sp/>==<sp/>longestEdge_rightNode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_rightNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_leftNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_leftNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(otherEdge_leftNode<sp/>==<sp/>longestEdge_leftNode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_leftNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_rightNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_rightNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n0<sp/>=<sp/>otherEdge_leftNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>otherEdge_rightNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>longestEdge_leftNode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldElements.erase(eN_parent);</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementsForBisection.erase(eN_parent);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_new);</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildren[eN_parent].push_back(eN_parent);</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_new]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParents[eN_parent]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>m;</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>around<sp/>the<sp/>nodes<sp/>to<sp/>figure<sp/>out<sp/>which<sp/>one<sp/>connects<sp/>to<sp/>the<sp/>new<sp/>midpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_1,nN_element_2;</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundMidpoint=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_element_0=0;nN_element_0&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>;nN_element_0++)</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundMidpoint=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_element_1<sp/>=<sp/>(nN_element_0+1)%3;</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nN_element_2<sp/>=<sp/>(nN_element_0+2)%3;</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_1]*3,</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN_parent*3<sp/>+<sp/>nN_element_2]*3,</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m);</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeItr<sp/>=<sp/>newNodeSet.find(m);</highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeItr<sp/>!=<sp/>newNodeSet.end())</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>triangles<sp/>formed<sp/>by<sp/>bisecting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valarray&lt;int&gt;<sp/>newElement(4);</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+nN_element_0];</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+nN_element_1];</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>nodeItr-&gt;nN;</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+nN_element_0];</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[2]<sp/>=<sp/>nodeItr-&gt;nN;</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElement[3]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[3*eN_parent+nN_element_2];</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElements.push_back(newElement);</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundMidpoint=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementsForBisection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert(elementsForBisection.empty());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;finishing<sp/>mesh&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>the<sp/>mesh<sp/>should<sp/>be<sp/>conforming<sp/>so<sp/>build<sp/>the<sp/>mesh<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>=3;</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/><sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1]<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1];</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>old<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(set&lt;int&gt;::iterator<sp/>eN_itr=oldElements.begin();eN_itr<sp/>!=<sp/>oldElements.end();eN_itr++)</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>*eN_itr;</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+0];</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+1];</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+2];</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>new<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref>&lt;valarray&lt;int&gt;<sp/>&gt;::iterator<sp/>element_itr=newElements.begin();element_itr<sp/>!=<sp/>newElements.end();element_itr++)</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>(*element_itr)[0];</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+0]<sp/>=<sp/>(*element_itr)[1];</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+1]<sp/>=<sp/>(*element_itr)[2];</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>[eN*3+2]<sp/>=<sp/>(*element_itr)[3];</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6624"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(nN_new)<sp/>==<sp/>(newNodeSet.size()+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>));</highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>=<sp/>nN_new;</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>*3];</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN=0;nN&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;nN++)</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+0];</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+1];</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nN*3+2];</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(nodeItr=newNodeSet.begin();nodeItr!=newNodeSet.end();nodeItr++)</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+0]<sp/>=<sp/>nodeItr-&gt;x;</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+1]<sp/>=<sp/>nodeItr-&gt;y;</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[nodeItr-&gt;nN*3+2]<sp/>=<sp/>nodeItr-&gt;z;</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//element<sp/>parents<sp/>and<sp/>material<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN++)</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i][eN]<sp/>=<sp/>elementParents[eN];</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[elementParents[eN]];</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//element<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset=0;</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>0;<sp/>eN_parent<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;eN_parent++)</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childE=0;childE&lt;elementChildren[eN_parent].size();childE++)</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i-1][offset]<sp/>=<sp/>elementChildren[eN_parent][childE];<sp/></highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset++;</highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i-1][eN_parent+1]<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"></highlight></codeline>
<codeline lineno="6658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nodes<sp/>on<sp/>parent<sp/>mesh<sp/>retain<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>&gt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>-multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[i-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"></highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6669" refid="group__mesh_1gaed3a370167525bf808917033346a7aa8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaed3a370167525bf808917033346a7aa8" kindref="member">locallyRefineTriangleMesh_4T</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray)</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/><sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementTagArray<sp/>for<sp/>now<sp/>at<sp/>least<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//1<sp/>--&gt;<sp/>refine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//0<sp/>--&gt;<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>extend<sp/>arrays<sp/>and<sp/>data<sp/>structures<sp/>in<sp/>multilevelMesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLevelsPrev<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1a7bff604c3671cbd056db4d8768684326" kindref="member">growMultilevelMesh</ref>(1,multilevelMesh);</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref><sp/>==<sp/>nLevelsPrev+1);</highlight></codeline>
<codeline lineno="6681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_tagged<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_tagged++;</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"></highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;bool&gt;<sp/>refined(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>edgeMidNodesArray(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>,-1);</highlight></codeline>
<codeline lineno="6690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>mesh<sp/>starts<sp/>off<sp/>as<sp/>parent<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElements_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNodes_new<sp/><sp/><sp/><sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>;</highlight></codeline>
<codeline lineno="6693"><highlight class="normal"></highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>through<sp/>tagged<sp/>elements,<sp/>subdivied<sp/>all<sp/>their<sp/>edges<sp/>and<sp/>fix<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//neighbors<sp/>for<sp/>conformity<sp/>by<sp/>subdividing<sp/>their<sp/>(necessary)<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_parent<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN_parent++)</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//algorithm<sp/>knows<sp/>for<sp/>now<sp/>if<sp/>it&apos;s<sp/>refined<sp/>an<sp/>element<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementTagArray[eN_parent]<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/><ref refid="group__mesh_1ga8c0a09d2570b320080038656fb2efba6" kindref="member">add4TnodesForRefinement2d</ref>(eN_parent,</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_new,</highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined,</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>,</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>,</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***********************************************************************</highlight></codeline>
<codeline lineno="6713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Now<sp/>have<sp/>a<sp/>set<sp/>of<sp/>tagged<sp/>elements<sp/>for<sp/>refinement<sp/>and<sp/>new<sp/>nodes<sp/>to<sp/>add<sp/>at<sp/>their</highlight></codeline>
<codeline lineno="6714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>edge<sp/>midpoints</highlight></codeline>
<codeline lineno="6715"><highlight class="comment"></highlight></codeline>
<codeline lineno="6716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>cases<sp/>to<sp/>consider<sp/>for<sp/>each<sp/>eN<sp/>in<sp/>parent</highlight></codeline>
<codeline lineno="6717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0).<sp/>element<sp/>not<sp/>tagged<sp/>(0T)</highlight></codeline>
<codeline lineno="6718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise<sp/>if<sp/>tagged</highlight></codeline>
<codeline lineno="6719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1).<sp/>all<sp/>3<sp/>element<sp/>boundaries<sp/>have<sp/>been<sp/>bisected<sp/>(4T)</highlight></codeline>
<codeline lineno="6720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2).<sp/>2<sp/>element<sp/>boundaries<sp/>have<sp/>been<sp/>bisected<sp/>(3T)</highlight></codeline>
<codeline lineno="6722"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="6723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3).<sp/>1<sp/>element<sp/>boundary<sp/>has<sp/>been<sp/>bisected(2T)</highlight></codeline>
<codeline lineno="6724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6725"><highlight class="comment"><sp/><sp/><sp/><sp/>***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_parent<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN_parent++)</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBisectedEdges<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refined[eN_parent])</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_local<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_local<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>;<sp/>ebN_local++)</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/></highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>[eN_parent*</highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>+</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_local];</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeMidNodesArray[ebN]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBisectedEdges++;</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//count<sp/>based<sp/>on<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBisectedEdges<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_new<sp/>+=<sp/>3;<sp/></highlight><highlight class="comment">//4T<sp/>lose<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBisectedEdges<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_new<sp/>+=<sp/>2;<sp/></highlight><highlight class="comment">//3T<sp/>lose<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBisectedEdges<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_new<sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">//2T<sp/>lose<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"></highlight></codeline>
<codeline lineno="6752"><highlight class="normal"></highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>ahead<sp/>and<sp/>allocate<sp/>memory<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6754"><highlight class="normal"></highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//multilevel<sp/>genealogy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>array<sp/>:<sp/>nElementsNew<sp/>--&gt;<sp/>new<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev]<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[nElements_new];</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initialize<sp/>children<sp/>offsets<sp/>on<sp/>previous<sp/>finest<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>+1];</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[nElements_new];</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1][0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"></highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//child<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>take<sp/>care<sp/>of<sp/>mesh<sp/>data<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref><sp/><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref><sp/>=<sp/>nElements_new;</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/><sp/><sp/><sp/>=<sp/>nNodes_new;</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementNodesArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>=<sp/></highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>*3];</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//elementMaterialTypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>];</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//node<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[3*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>];</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"></highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>copy<sp/>over<sp/>node<sp/>information<sp/>so<sp/>that<sp/>we<sp/>can<sp/>maintain<sp/>(for<sp/>now)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//property<sp/>that<sp/>nodes<sp/>and<sp/>elements<sp/>inherit<sp/>their<sp/>numbers<sp/>if<sp/>they<sp/>arent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//refined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>+</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3*multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"></highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>go<sp/>through<sp/>and<sp/>create<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_parent<sp/>=<sp/>0;<sp/>ebN_parent<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>;<sp/>ebN_parent++)</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeMidNodesArray[ebN_parent]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(edgeMidNodesArray[ebN_parent]<sp/>&gt;=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>);</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>midpoints[1];</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN0<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN_parent*2+0];</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN1<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>[ebN_parent*2+1];</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref><sp/>=<sp/>edgeMidNodesArray[ebN_parent];</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>nN0*3,</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref><sp/>+<sp/>nN1*3,</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midpoints[0]);</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>+0]=<sp/>midpoints[0].<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>+1]=<sp/>midpoints[0].<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>[3*midpoints[0].<ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>+2]=<sp/>midpoints[0].<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>take<sp/>care<sp/>of<sp/>refining<sp/>(or<sp/>not)<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//put<sp/>this<sp/>in<sp/>subdivide<sp/>element<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_new<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subdivideFailed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_parent<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN_parent++)</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subdivideFailed<sp/>=<sp/><ref refid="group__mesh_1gac307634f2b836753119cb91562215cd9" kindref="member">subdivideTriangle4T</ref>(eN_parent,</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new,</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev],</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[nLevelsPrev-1],</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[nLevelsPrev-1],</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined,</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>,</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>);</highlight></codeline>
<codeline lineno="6825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subdivideFailed)</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>element<sp/>material<sp/>types<sp/>from<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN<sp/>=<sp/>0;<sp/>eN<sp/>&lt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>;<sp/>eN++)</highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent<sp/>=<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[nLevelsPrev][eN];</highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>[eN_parent];</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nodes<sp/>on<sp/>parent<sp/>mesh<sp/>retain<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref><sp/>+<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>);</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref><sp/>&gt;<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>+multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="6841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mesh_8cpp_1ac5eb1896979304d2cb81a648238fc653" kindref="member">DEFAULT_NODE_MATERIAL</ref>,</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>-multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>[nLevelsPrev-1].<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6845"><highlight class="normal">}</highlight><highlight class="comment">//extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6846"><highlight class="normal"></highlight></codeline>
<codeline lineno="6847" refid="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" kindref="member">newestNodeBisect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nElements_global,</highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nNodes_global,</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>nodeArray,</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">std::vector</ref>&lt;std::list&lt;int&gt;<sp/>&gt;&amp;<sp/>childrenList,</highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>bases,</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined)</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"></highlight></codeline>
<codeline lineno="6858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_element<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSpace<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/*********************</highlight></codeline>
<codeline lineno="6863"><highlight class="comment"><sp/><sp/><sp/><sp/>nodeArray<sp/>--&gt;<sp/>3d<sp/>not<sp/>2d</highlight></codeline>
<codeline lineno="6864"><highlight class="comment"><sp/><sp/><sp/><sp/>ie<sp/>--&gt;<sp/>eN,<sp/>ibase<sp/>--&gt;<sp/>ebN_base,<sp/>simplexDim-&gt;nElementBoundaries_element</highlight></codeline>
<codeline lineno="6865"><highlight class="comment"><sp/><sp/><sp/><sp/>nNodes--&gt;<sp/>nNodes_global,<sp/>nElements--&gt;<sp/>nElements_global</highlight></codeline>
<codeline lineno="6866"><highlight class="comment"><sp/><sp/><sp/><sp/>spaceDim<sp/>--&gt;<sp/>nSpace</highlight></codeline>
<codeline lineno="6867"><highlight class="comment"><sp/><sp/>********************/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3]<sp/>=<sp/>{0.0,0.0,0.0};<sp/></highlight><highlight class="comment">//node<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ib[3];<sp/><sp/><sp/></highlight><highlight class="comment">//local<sp/>node<sp/>numbers<sp/>starting<sp/>with<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibn[3];<sp/><sp/></highlight><highlight class="comment">//local<sp/>node<sp/>numbers<sp/>starting<sp/>with<sp/>base<sp/>for<sp/>neigbhor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IB[3];<sp/><sp/><sp/></highlight><highlight class="comment">//global<sp/>node<sp/>numbers<sp/>starting<sp/>with<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1[3],E2[3];<sp/></highlight><highlight class="comment">//global<sp/>nodes<sp/>of<sp/>new<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N1[3],N2[3];<sp/></highlight><highlight class="comment">//global<sp/>element<sp/>neighbors<sp/>of<sp/>new<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>E1n[3],E2n[3];<sp/></highlight><highlight class="comment">//global<sp/>nodes<sp/>of<sp/>new<sp/>triangles<sp/>for<sp/>neig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N1n[3],N2n[3];<sp/></highlight><highlight class="comment">//global<sp/>element<sp/>neighbors<sp/>of<sp/>new<sp/>triangles<sp/>for<sp/>neig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_base<sp/><sp/>=<sp/>bases[eN];<sp/></highlight><highlight class="comment">//local<sp/>base<sp/>(edge<sp/>number<sp/>and<sp/>node<sp/>across<sp/>from<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/>ib[0]<sp/>=<sp/>ebN_base;<sp/>ib[1]<sp/>=<sp/>(ebN_base+1)%nElementBoundaries_element;<sp/>ib[2]=(ebN_base+2)%nElementBoundaries_element;</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>i++)</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/><sp/><sp/>IB[i]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[i]];</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"></highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//neighbor<sp/>of<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig<sp/>=<sp/>elementNeighborsArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[0]];</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_neig<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6885"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>/**************************************************</highlight></codeline>
<codeline lineno="6886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>is<sp/>a<sp/>boundary<sp/>edge</highlight></codeline>
<codeline lineno="6887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>just<sp/>refine<sp/>it<sp/>by<sp/>bisecting<sp/>edge</highlight></codeline>
<codeline lineno="6888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>new<sp/>node<sp/>at<sp/>center<sp/>of<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newNodeNumber<sp/>=<sp/>nNodes_global;</highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>0.0;<sp/>x[1]<sp/>=<sp/>0.0;<sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="6892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>nSpace;<sp/>nN++)</highlight><highlight class="comment">//loop<sp/>through<sp/>nodes<sp/>on<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>3;<sp/>I++)</highlight></codeline>
<codeline lineno="6894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[I]<sp/>+=<sp/>0.5*nodeArray[3*IB[nN+1]+I];</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_REFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;eN=<sp/>&quot;&lt;&lt;eN&lt;&lt;&quot;<sp/>base=<sp/>&quot;&lt;&lt;ebN_base&lt;&lt;&quot;<sp/>eN_neig=<sp/>&quot;&lt;&lt;eN_neig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;&lt;&quot;<sp/>newNode<sp/>nN=<sp/>&quot;&lt;&lt;newNodeNumber&lt;&lt;&quot;<sp/>x=<sp/>[&quot;&lt;&lt;x[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;,&quot;&lt;&lt;x[1]&lt;&lt;&quot;]&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6899"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>new<sp/>node,<sp/>bm,<sp/>at<sp/>end<sp/>of<sp/>array,<sp/>x<sp/>coord<sp/>then<sp/>y<sp/>coord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>3;<sp/>I++)</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray.push_back(x[I]);</highlight></codeline>
<codeline lineno="6903"><highlight class="normal"></highlight></codeline>
<codeline lineno="6904"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="6905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two<sp/>new<sp/>triangles<sp/>to<sp/>add:</highlight></codeline>
<codeline lineno="6906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E1<sp/>=<sp/>(base,base+1,bm)</highlight></codeline>
<codeline lineno="6907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E2<sp/>=<sp/>(bm,base+2,base)</highlight></codeline>
<codeline lineno="6908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>neighbor<sp/>arrays</highlight></codeline>
<codeline lineno="6909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N1<sp/>=<sp/>(-1,E2,N(base+2))</highlight></codeline>
<codeline lineno="6910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N2<sp/>=<sp/>(N(base+1),E1,-1)</highlight></codeline>
<codeline lineno="6911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>eN<sp/>with<sp/>E1</highlight></codeline>
<codeline lineno="6912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Have<sp/>to<sp/>update<sp/>interior<sp/>neighbors&apos;<sp/>own<sp/>neighbor<sp/>info</highlight></codeline>
<codeline lineno="6913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newElementNumber<sp/>=<sp/>nElements_global;</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1[0]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[0]];<sp/></highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1[1]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[1]];</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1[2]<sp/>=<sp/>newNodeNumber;</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2[0]<sp/>=<sp/>newNodeNumber;<sp/></highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2[1]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[2]];</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2[2]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[0]];</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"></highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1[0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1[1]<sp/>=<sp/>newElementNumber;</highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1[2]<sp/>=<sp/>elementNeighborsArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[2]];</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//don&apos;t<sp/>have<sp/>to<sp/>change<sp/>E1<sp/>neighbor<sp/>because<sp/>it<sp/>inherits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//old<sp/>element<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2[0]<sp/>=<sp/>elementNeighborsArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[1]];</highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>neighbor<sp/>across<sp/>from<sp/>0,<sp/>get<sp/>its<sp/>local<sp/>id<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N2[0]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(N2[0]<sp/>&lt;<sp/>nElements_global);</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementNeighborsArray[nElementBoundaries_element*N2[0]<sp/>+<sp/>ebN]<sp/>==<sp/>eN)</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray[nElementBoundaries_element*N2[0]<sp/>+<sp/>ebN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementNumber;</highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2[1]<sp/>=<sp/>eN;</highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2[2]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"></highlight></codeline>
<codeline lineno="6945"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_REFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;eN=<sp/>&quot;&lt;&lt;eN&lt;&lt;&quot;<sp/>adding<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;\n\t<sp/>E1=<sp/>[&quot;&lt;&lt;E1[0]&lt;&lt;&quot;,&quot;&lt;&lt;E1[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;,&quot;&lt;&lt;E1[2]&lt;&lt;&quot;]&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;\n\t<sp/>N1=<sp/>[&quot;&lt;&lt;N1[0]&lt;&lt;&quot;,&quot;&lt;&lt;N1[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;,&quot;&lt;&lt;N1[2]&lt;&lt;&quot;]&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;\n\t<sp/>E2=<sp/>[&quot;&lt;&lt;E2[0]&lt;&lt;&quot;,&quot;&lt;&lt;E2[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;,&quot;&lt;&lt;E2[2]&lt;&lt;&quot;]&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;\n\t<sp/>N2=<sp/>[&quot;&lt;&lt;N2[0]&lt;&lt;&quot;,&quot;&lt;&lt;N2[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;&quot;,&quot;&lt;&lt;N2[2]&lt;&lt;&quot;]&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6956"><highlight class="normal"></highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ebN]=E1[ebN];<sp/></highlight><highlight class="comment">//replace<sp/>eN<sp/>with<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>append<sp/>new<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray.push_back(E2[ebN]);</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//same<sp/>thing<sp/>with<sp/>neighbor<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray[nElementBoundaries_element*eN<sp/>+<sp/>ebN]=N1[ebN];<sp/></highlight><highlight class="comment">//replace<sp/>eN<sp/>with<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray.push_back(N2[ebN]);</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>update<sp/>bases<sp/>with<sp/>local<sp/>indeces<sp/>of<sp/>new<sp/>node<sp/>that<sp/>was<sp/>inserted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bases[eN]<sp/>=<sp/>2;<sp/><sp/><sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bases.push_back(0);<sp/></highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6971"><highlight class="normal"></highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>parent<sp/>and<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN)<sp/>&lt;<sp/>refined.size()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!refined[eN])<sp/></highlight><highlight class="comment">//refined<sp/>is<sp/>just<sp/>for<sp/>parent<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN]<sp/>=<sp/>eN;<sp/></highlight><highlight class="comment">//E1<sp/>replaced<sp/>eN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray.push_back(eN);</highlight><highlight class="comment">//E2<sp/>is<sp/>global<sp/>element<sp/>nElements_global<sp/>(0<sp/>indexing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN].push_back(eN);</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN].push_back(newElementNumber);</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//eN<sp/>has<sp/>to<sp/>be<sp/>a<sp/>&quot;refined&quot;<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eN<sp/>has<sp/>been<sp/>refined<sp/>already<sp/>on<sp/>this<sp/>level,<sp/>so<sp/>get<sp/>its<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN)<sp/>&lt;<sp/>elementParentsArray.size());</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1<sp/>remains<sp/>unchanged,<sp/>just<sp/>get&apos;s<sp/>element<sp/>eN&apos;s<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray.push_back(elementParentsArray[eN]);</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//climb<sp/>back<sp/>up<sp/>until<sp/>find<sp/>an<sp/>element<sp/>on<sp/>the<sp/>original<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_tmp<sp/>=<sp/>eN;</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN_tmp)<sp/>&gt;=<sp/>refined.size())</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_tmp<sp/>=<sp/>elementParentsArray[eN_tmp];</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(elementParentsArray[eN_tmp])<sp/>&lt;<sp/>childrenList.size());</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>need<sp/>to<sp/>insert<sp/>or<sp/>remove<sp/>eN<sp/>because<sp/>it&apos;s<sp/>already<sp/>listed<sp/>as<sp/>a<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN_tmp].push_back(newElementNumber);</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"></highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>number<sp/>of<sp/>elements<sp/>and<sp/>nodes<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//refined<sp/>is<sp/>just<sp/>for<sp/>the<sp/>original<sp/>parent<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN)<sp/>&lt;<sp/>refined.size())</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined[eN]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//end<sp/>base<sp/>on<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementNeighborsArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>bases[eN_neig]]<sp/>==<sp/>eN)<sp/></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="7007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighboring<sp/>element<sp/>shares<sp/>the<sp/>same<sp/>base</highlight></codeline>
<codeline lineno="7008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/>refine<sp/>them<sp/>both</highlight></codeline>
<codeline lineno="7009"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(eN_neig<sp/>&lt;<sp/>nElements_global);</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"></highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>new<sp/>node<sp/>at<sp/>center<sp/>of<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newNodeNumber<sp/>=<sp/>nNodes_global;</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x[0]<sp/>=<sp/>0.0;<sp/>x[1]<sp/>=<sp/>0.0;<sp/>x[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>nSpace;<sp/>nN++)</highlight><highlight class="comment">//loop<sp/>through<sp/>nodes<sp/>on<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>3;<sp/><sp/>I++)</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[I]<sp/>+=<sp/>0.5*nodeArray[3*IB[nN+1]+I];</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//insert<sp/>new<sp/>node,<sp/>bm,<sp/>at<sp/>end<sp/>of<sp/>array,<sp/>x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>3;<sp/>I++)</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray.push_back(x[I]);</highlight></codeline>
<codeline lineno="7023"><highlight class="normal"></highlight></codeline>
<codeline lineno="7024"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="7025"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two<sp/>new<sp/>triangles<sp/>to<sp/>add<sp/>on<sp/>each<sp/>element.</highlight></codeline>
<codeline lineno="7026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>On<sp/>eN:<sp/>E1,E2<sp/>and<sp/>on<sp/>eN_neig:<sp/>E1&apos;<sp/>and<sp/>E2&apos;</highlight></codeline>
<codeline lineno="7027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E1<sp/>=<sp/>(base,base+1,bm)</highlight></codeline>
<codeline lineno="7028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E2<sp/>=<sp/>(bm,base+2,base)</highlight></codeline>
<codeline lineno="7029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>neighbor<sp/>arrays</highlight></codeline>
<codeline lineno="7030"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N1<sp/>=<sp/>(E2&apos;,E2,N(base+2))</highlight></codeline>
<codeline lineno="7031"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N2<sp/>=<sp/>(N(base+1),E1,E1&apos;)</highlight></codeline>
<codeline lineno="7032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>eN<sp/>with<sp/>E1</highlight></codeline>
<codeline lineno="7033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>On<sp/>eN_neig<sp/>have:</highlight></codeline>
<codeline lineno="7034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E1<sp/>=<sp/>(base&apos;,base&apos;+1,bm)</highlight></codeline>
<codeline lineno="7035"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E2<sp/>=<sp/>(bm,base&apos;+2,base&apos;)</highlight></codeline>
<codeline lineno="7036"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>neighbor<sp/>arrays</highlight></codeline>
<codeline lineno="7037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N1<sp/>=<sp/>(E2,E2&apos;,N(base&apos;+2))</highlight></codeline>
<codeline lineno="7038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N2<sp/>=<sp/>(N(base&apos;+1),E1&apos;,E1)</highlight></codeline>
<codeline lineno="7039"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="7040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_base_neig<sp/>=<sp/>bases[eN_neig];</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ibn[0]=ebN_base_neig;<sp/>ibn[1]=(ebN_base_neig+1)%nElementBoundaries_element;<sp/></highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ibn[2]=(ebN_base_neig+2)%nElementBoundaries_element;</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"></highlight></codeline>
<codeline lineno="7045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newElementNumber<sp/>=<sp/>nElements_global;</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newElementNumberNeig<sp/>=<sp/>nElements_global+1;</highlight></codeline>
<codeline lineno="7047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1[0]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[0]];<sp/></highlight></codeline>
<codeline lineno="7048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1[1]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[1]];</highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1[2]<sp/>=<sp/>newNodeNumber;</highlight><highlight class="comment">//bm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2[0]<sp/>=<sp/>newNodeNumber;</highlight><highlight class="comment">//bm<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2[1]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[2]];</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2[2]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[0]];</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"></highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1[0]<sp/>=<sp/>newElementNumberNeig;<sp/></highlight><highlight class="comment">//E2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1[1]<sp/>=<sp/>newElementNumber;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1[2]<sp/>=<sp/>elementNeighborsArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[2]];</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//don&apos;t<sp/>have<sp/>to<sp/>change<sp/>E1<sp/>neighbor<sp/>because<sp/>it<sp/>inherits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//old<sp/>element<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7059"><highlight class="normal"></highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2[0]<sp/>=<sp/>elementNeighborsArray[nElementBoundaries_element*eN<sp/>+<sp/>ib[1]];</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>neighbor<sp/>across<sp/>from<sp/>0,<sp/>get<sp/>its<sp/>local<sp/>id<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N2[0]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(N2[0]<sp/>&lt;<sp/>nElements_global);</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementNeighborsArray[nElementBoundaries_element*N2[0]<sp/>+<sp/>ebN]<sp/>==<sp/>eN)</highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray[nElementBoundaries_element*N2[0]<sp/>+<sp/>ebN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementNumber;</highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2[1]<sp/>=<sp/>eN;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2[2]<sp/>=<sp/>eN_neig;<sp/><sp/></highlight><highlight class="comment">//E1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7077"><highlight class="normal"></highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1n[0]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ibn[0]];<sp/></highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1n[1]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ibn[1]];</highlight></codeline>
<codeline lineno="7081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E1n[2]<sp/>=<sp/>newNodeNumber;</highlight><highlight class="comment">//bm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2n[0]<sp/>=<sp/>newNodeNumber;</highlight><highlight class="comment">//bm<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2n[1]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ibn[2]];</highlight></codeline>
<codeline lineno="7084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>E2n[2]<sp/>=<sp/>elementNodesArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ibn[0]];</highlight></codeline>
<codeline lineno="7085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1n[0]<sp/>=<sp/>newElementNumber;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1n[1]<sp/>=<sp/>newElementNumberNeig;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N1n[2]<sp/>=<sp/>elementNeighborsArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ibn[2]];</highlight></codeline>
<codeline lineno="7089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//again<sp/>don&apos;t<sp/>have<sp/>to<sp/>update<sp/>this<sp/>neighbor<sp/>because<sp/>its<sp/>going</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>point<sp/>to<sp/>E1&apos;<sp/>&lt;---<sp/>ieNeig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7091"><highlight class="normal"></highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2n[0]<sp/>=<sp/>elementNeighborsArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ibn[1]];</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>neighbor<sp/>across<sp/>from<sp/>0,<sp/>get<sp/>its<sp/>local<sp/>id<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N2n[0]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(N2n[0]<sp/>&lt;<sp/>nElements_global);</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elementNeighborsArray[nElementBoundaries_element*N2n[0]<sp/>+<sp/>ebN]<sp/>==<sp/>eN_neig)</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray[nElementBoundaries_element*N2n[0]<sp/>+<sp/>ebN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newElementNumberNeig;</highlight><highlight class="comment">//E2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"></highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2n[1]<sp/>=<sp/>eN_neig;<sp/></highlight><highlight class="comment">//E1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N2n[2]<sp/>=<sp/>eN;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7110"><highlight class="normal"></highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray[nElementBoundaries_element*eN<sp/>+<sp/>ebN]<sp/><sp/><sp/><sp/><sp/>=E1[ebN];<sp/><sp/></highlight><highlight class="comment">//replace<sp/>eN<sp/>with<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ebN]=E1n[ebN];<sp/></highlight><highlight class="comment">//replace<sp/>eN_neig<sp/>with<sp/>E1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>append<sp/>new<sp/>element<sp/>for<sp/>eN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray.push_back(E2[ebN]);</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>append<sp/>new<sp/>element<sp/>for<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray.push_back(E2n[ebN]);</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"></highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//same<sp/>thing<sp/>with<sp/>neighbor<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray[nElementBoundaries_element*eN<sp/>+<sp/>ebN]<sp/><sp/><sp/><sp/><sp/>=N1[ebN];<sp/></highlight><highlight class="comment">//replace<sp/>ie<sp/>with<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray[nElementBoundaries_element*eN_neig<sp/>+<sp/>ebN]=N1n[ebN];<sp/></highlight><highlight class="comment">//replace<sp/>eN_neig<sp/>with<sp/>E1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray.push_back(N2[ebN]);</highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray.push_back(N2n[ebN]);</highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>update<sp/>bases<sp/>with<sp/>local<sp/>indeces<sp/>of<sp/>new<sp/>node<sp/>that<sp/>was<sp/>inserted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bases[eN]<sp/><sp/><sp/><sp/><sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bases[eN_neig]<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//E1&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bases.push_back(0);<sp/></highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bases.push_back(0);<sp/></highlight><highlight class="comment">//E2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7139"><highlight class="normal"></highlight></codeline>
<codeline lineno="7140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>parent<sp/>and<sp/>children<sp/>for<sp/>eN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN)<sp/>&lt;<sp/>refined.size()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="7142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!refined[eN])<sp/></highlight><highlight class="comment">//refined<sp/>is<sp/>just<sp/>for<sp/>parent<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN]<sp/>=<sp/>eN;<sp/></highlight><highlight class="comment">//E1<sp/>replaced<sp/>eN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray.push_back(eN);</highlight><highlight class="comment">//E2<sp/>is<sp/>global<sp/>element<sp/>nElements_global<sp/>(0<sp/>indexing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN].push_back(eN);</highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN].push_back(newElementNumber);</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//eN<sp/>has<sp/>to<sp/>be<sp/>a<sp/>&quot;refined&quot;<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eN<sp/>has<sp/>been<sp/>refined<sp/>already<sp/>on<sp/>this<sp/>level,<sp/>so<sp/>get<sp/>its<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN)<sp/>&lt;<sp/>elementParentsArray.size());</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1<sp/>remains<sp/>unchanged,<sp/>just<sp/>get&apos;s<sp/>element<sp/>eN&apos;s<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray.push_back(elementParentsArray[eN]);</highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//climb<sp/>back<sp/>up<sp/>until<sp/>find<sp/>an<sp/>element<sp/>on<sp/>the<sp/>original<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_tmp<sp/>=<sp/>eN;</highlight></codeline>
<codeline lineno="7157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN_tmp)<sp/>&gt;=<sp/>refined.size())</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_tmp<sp/>=<sp/>elementParentsArray[eN_tmp];</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(elementParentsArray[eN_tmp])<sp/>&lt;<sp/>childrenList.size());</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>need<sp/>to<sp/>insert<sp/>or<sp/>remove<sp/>eN<sp/>because<sp/>it&apos;s<sp/>already<sp/>listed<sp/>as<sp/>a<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN_tmp].push_back(newElementNumber);</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//repeat<sp/>for<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN_neig)<sp/>&lt;<sp/>refined.size()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!refined[eN_neig])<sp/></highlight><highlight class="comment">//refined<sp/>is<sp/>just<sp/>for<sp/>parent<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_neig]<sp/>=<sp/>eN_neig;<sp/></highlight><highlight class="comment">//E1&apos;<sp/>replaced<sp/>eN_neig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray.push_back(eN_neig);</highlight><highlight class="comment">//E2&apos;<sp/>is<sp/>global<sp/>element<sp/>nElements_global+1<sp/>(0<sp/>indexing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN_neig].push_back(eN_neig);<sp/></highlight><highlight class="comment">//E1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN_neig].push_back(newElementNumberNeig);<sp/></highlight><highlight class="comment">//E2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//eN_neig<sp/>has<sp/>to<sp/>be<sp/>a<sp/>&quot;refined&quot;<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eN<sp/>has<sp/>been<sp/>refined<sp/>already<sp/>on<sp/>this<sp/>level,<sp/>so<sp/>get<sp/>its<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN_neig)<sp/>&lt;<sp/>elementParentsArray.size());</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1&apos;<sp/>remains<sp/>unchanged,<sp/>just<sp/>get&apos;s<sp/>element<sp/>eN_neig&apos;s<sp/>parent<sp/>for<sp/>E2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray.push_back(elementParentsArray[eN_neig]);</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//climb<sp/>back<sp/>up<sp/>until<sp/>find<sp/>an<sp/>element<sp/>on<sp/>the<sp/>original<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_tmp<sp/>=<sp/>eN_neig;</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN_tmp)<sp/>&gt;=<sp/>refined.size())</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_tmp<sp/>=<sp/>elementParentsArray[eN_tmp];</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(elementParentsArray[eN_tmp])<sp/>&lt;<sp/>childrenList.size());</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>need<sp/>to<sp/>insert<sp/>or<sp/>remove<sp/>eN<sp/>because<sp/>it&apos;s<sp/>already<sp/>listed<sp/>as<sp/>a<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList[eN_tmp].push_back(newElementNumberNeig);</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7186"><highlight class="normal"></highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>number<sp/>of<sp/>elements<sp/>and<sp/>nodes<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//refined<sp/>is<sp/>just<sp/>for<sp/>the<sp/>original<sp/>parent<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN)<sp/>&lt;<sp/>refined.size())</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined[eN]<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//refined<sp/>is<sp/>just<sp/>for<sp/>the<sp/>original<sp/>parent<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">(eN_neig)<sp/>&lt;<sp/>refined.size())</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined[eN_neig]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//recursive<sp/>call<sp/>for<sp/>neighbor<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/><ref refid="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" kindref="member">newestNodeBisect</ref>(eN_neig,</highlight></codeline>
<codeline lineno="7202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global,</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray,</highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList,</highlight></codeline>
<codeline lineno="7208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases,</highlight></codeline>
<codeline lineno="7210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined);</highlight></codeline>
<codeline lineno="7211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/><ref refid="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" kindref="member">newestNodeBisect</ref>(eN,</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global,</highlight></codeline>
<codeline lineno="7213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray,</highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childrenList,</highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases,</highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined);</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7224"><highlight class="normal"></highlight></codeline>
<codeline lineno="7225" refid="group__mesh_1ga8c0a09d2570b320080038656fb2efba6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8c0a09d2570b320080038656fb2efba6" kindref="member">add4TnodesForRefinement2d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight><highlight class="comment">//element<sp/>to<sp/>be<sp/>refined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nNodes_global,</highlight><highlight class="comment">//number<sp/>of<sp/>nodes<sp/>in<sp/>mesh,<sp/>will<sp/>grow<sp/>as<sp/>refine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined,<sp/><sp/></highlight><highlight class="comment">//is<sp/>an<sp/>element<sp/>to<sp/>be<sp/>refined<sp/>or<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>edgeMidNodesArray,</highlight><highlight class="comment">//edge--&gt;<sp/>new<sp/>node<sp/>from<sp/>bisection<sp/>(-1<sp/>=<sp/>none)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>mesh<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementBoundariesArray,</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nodeArray)</highlight></codeline>
<codeline lineno="7233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_element<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//2d<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>refinedAlready<sp/>=<sp/>refined[eN];</highlight></codeline>
<codeline lineno="7237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_REFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Entering<sp/>add4TnodesRef<sp/>eN=<sp/>&quot;&lt;&lt;eN&lt;&lt;&quot;<sp/>refined<sp/>=<sp/>&quot;&lt;&lt;refined[eN]&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/>refined[eN]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_longest_local<sp/>=<sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(eN,</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray);</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_longest;</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/>eN_longest<sp/>=<sp/>elementBoundariesArray[eN*nElementBoundaries_element+eN_longest_local];</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_local<sp/>=<sp/>0;<sp/>ebN_local<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN_local++)</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundariesArray[eN*nElementBoundaries_element+ebN_local];</highlight></codeline>
<codeline lineno="7249"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_REFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeMidNodesArray[ebN]<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>!refinedAlready)</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;WARNING<sp/>add4Tnodes<sp/>for<sp/>refinement<sp/>eN=&quot;&lt;&lt;eN&lt;&lt;&quot;<sp/>ebN_loc=&quot;&lt;&lt;ebN_local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;&lt;&quot;<sp/>ebN=<sp/>&quot;&lt;&lt;ebN&lt;&lt;&quot;<sp/>already<sp/>bisected<sp/>edgeMidNodesArray[ebN]<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;&lt;edgeMidNodesArray[ebN]&lt;&lt;&quot;<sp/>not<sp/>tagged<sp/>as<sp/>already<sp/>refined&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(edgeMidNodesArray[ebN]<sp/>&lt;<sp/>0<sp/>||<sp/>refinedAlready);</highlight><highlight class="comment">//otherwise<sp/>this<sp/>element<sp/>should<sp/>be<sp/>tagged<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeMidNodesArray[ebN]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMidNodesArray[ebN]<sp/>=<sp/>nNodes_global;</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global++;</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"></highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig<sp/>=<sp/>elementNeighborsArray[eN*nElementBoundaries_element+ebN_local];</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_neig<sp/>&gt;=<sp/>0)<sp/></highlight><highlight class="comment">//not<sp/>physical<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//orig,<sp/>used<sp/>eN_longest<sp/>for<sp/>original<sp/>call,<sp/>but<sp/>what<sp/>if<sp/>start<sp/>with<sp/>ebN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failed<sp/>=<sp/><ref refid="group__mesh_1ga5dce5689b08b93d8ae8d051e70e96391" kindref="member">add4TnodesForConformity2d</ref>(eN,ebN,</highlight><highlight class="comment">//eN_longest,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN,eN_neig,</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined,</highlight></codeline>
<codeline lineno="7271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>mesh<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundariesArray,</highlight></codeline>
<codeline lineno="7274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray);</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//has<sp/>a<sp/>neighbor<sp/>across<sp/>ebN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//edge<sp/>not<sp/>bisected<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//local<sp/>element<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7279"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7282"><highlight class="normal"></highlight></codeline>
<codeline lineno="7283" refid="group__mesh_1ga5dce5689b08b93d8ae8d051e70e96391" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5dce5689b08b93d8ae8d051e70e96391" kindref="member">add4TnodesForConformity2d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_longest,<sp/></highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_neig,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig,</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined,</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="7288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>mesh<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementBoundariesArray,</highlight></codeline>
<codeline lineno="7290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nodeArray)</highlight></codeline>
<codeline lineno="7292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7293"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/***********************************************************************</highlight></codeline>
<codeline lineno="7294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>here<sp/>eN<sp/>has<sp/>been<sp/>looked<sp/>at,<sp/>eN_longest<sp/>is<sp/>its<sp/>longest<sp/>edge<sp/>and</highlight></codeline>
<codeline lineno="7295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>eN_neig<sp/>is<sp/>the<sp/>neighbor<sp/>across<sp/>from<sp/>ebN_neig</highlight></codeline>
<codeline lineno="7296"><highlight class="comment"><sp/><sp/>***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//hardwire<sp/>for<sp/>2d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_element<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/>assert(eN<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_REFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Entering<sp/>add4Tnodes4Conf<sp/>eN=<sp/>&quot;&lt;&lt;eN&lt;&lt;&quot;<sp/>refined<sp/>=<sp/>&quot;&lt;&lt;refined[eN]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//&lt;&lt;&quot;eN_neig=<sp/>&quot;&lt;&lt;eN_neig&lt;&lt;&quot;<sp/>refined=<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(eN_neig<sp/>&gt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;refined[eN_neig]&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;<sp/>on<sp/>boundary<sp/>&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//going<sp/>to<sp/>have<sp/>to<sp/>refine<sp/>this<sp/>one<sp/>regardless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/>refined[eN]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_neig<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">//hit<sp/>boundary<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ok<sp/>to<sp/>bisect<sp/>eN<sp/>using<sp/>ebN<sp/>because<sp/>at<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assume<sp/>eN<sp/>already<sp/>tagged<sp/>for<sp/>refinement?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeMidNodesArray[ebN_neig]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMidNodesArray[ebN_neig]<sp/>=<sp/>nNodes_global;</highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global++;</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"><sp/><sp/>assert(eN_neig<sp/>&gt;=0);</highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig_longest_local<sp/>=<sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(eN_neig,</highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray);</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_neig_longest<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>elementBoundariesArray[eN_neig*nElementBoundaries_element+eN_neig_longest_local];</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//going<sp/>to<sp/>have<sp/>to<sp/>refine<sp/>neighbor<sp/>regardless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/>refined[eN_neig]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeMidNodesArray[ebN_neig_longest]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edgeMidNodesArray[ebN_neig_longest]<sp/>=<sp/>nNodes_global;</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global++;</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ebN_longest<sp/>==<sp/>ebN_neig_longest)</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//means<sp/>ebN_longest<sp/>==<sp/>ebN_neig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ebN_longest<sp/>==<sp/>ebN_neig);</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;<sp/></highlight><highlight class="comment">//done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"></highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig_neig<sp/>=<sp/>elementNeighborsArray[eN_neig*nElementBoundaries_element+eN_neig_longest_local];</highlight></codeline>
<codeline lineno="7343"><highlight class="normal"><sp/><sp/>failed<sp/>=<sp/><ref refid="group__mesh_1ga5dce5689b08b93d8ae8d051e70e96391" kindref="member">add4TnodesForConformity2d</ref>(eN_neig,ebN_neig_longest,</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_neig_longest,eN_neig_neig,</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refined,</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundariesArray,</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray);</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7354" refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nodeArray)</highlight></codeline>
<codeline lineno="7357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_element<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>longest<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_longest=0.0;</highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN0<sp/>=<sp/>elementNodesArray[eN*nElementBoundaries_element+((ebN+1)%nElementBoundaries_element)];</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN1<sp/>=<sp/>elementNodesArray[eN*nElementBoundaries_element+((ebN+2)%nElementBoundaries_element)];</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>fabs((nodeArray[3*nN1+0]-nodeArray[3*nN0+0])*(nodeArray[3*nN1+0]-nodeArray[3*nN0+0])+</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nodeArray[3*nN1+1]-nodeArray[3*nN0+1])*(nodeArray[3*nN1+1]-nodeArray[3*nN0+1])+</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nodeArray[3*nN1+2]-nodeArray[3*nN0+2])*(nodeArray[3*nN1+2]-nodeArray[3*nN0+2]));</highlight></codeline>
<codeline lineno="7366"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7367"><highlight class="normal"><sp/><sp/>longest<sp/>=<sp/>ebN;<sp/>h_longest<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="7368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ebN<sp/>=<sp/>1;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nN0<sp/>=<sp/>elementNodesArray[eN*nElementBoundaries_element+((ebN+1)%nElementBoundaries_element)];</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nN1<sp/>=<sp/>elementNodesArray[eN*nElementBoundaries_element+((ebN+2)%nElementBoundaries_element)];</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>fabs((nodeArray[3*nN1+0]-nodeArray[3*nN0+0])*(nodeArray[3*nN1+0]-nodeArray[3*nN0+0])+</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nodeArray[3*nN1+1]-nodeArray[3*nN0+1])*(nodeArray[3*nN1+1]-nodeArray[3*nN0+1])+</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nodeArray[3*nN1+2]-nodeArray[3*nN0+2])*(nodeArray[3*nN1+2]-nodeArray[3*nN0+2]));</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>h_longest)</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>len<sp/>=<sp/>h_longest;<sp/>longest<sp/>=<sp/>ebN;}</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>longest;</highlight></codeline>
<codeline lineno="7380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"></highlight></codeline>
<codeline lineno="7382" refid="group__mesh_1gac307634f2b836753119cb91562215cd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac307634f2b836753119cb91562215cd9" kindref="member">subdivideTriangle4T</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent,</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>eN_new,</highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementChildrenOffsets,</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementChildrenArray,</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray_child,</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined,</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray_parent,</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementBoundariesArray_parent,</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>nodeArray_parent)</highlight></codeline>
<codeline lineno="7393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,u4T=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//cek<sp/>added<sp/>u4T<sp/>to<sp/>test<sp/>as<sp/>alternative<sp/>to<sp/>rivara<sp/>4T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//hardwire<sp/>for<sp/>2d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>simplexDim<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childOffset<sp/>=<sp/>elementChildrenOffsets[eN_parent];</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!refined[eN_parent])</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>over<sp/>parent<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>simplexDim;<sp/>nN++)</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+nN]<sp/>=<sp/></highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_parent[eN_parent*simplexDim+nN];</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_parent]<sp/>=<sp/>eN_parent;<sp/></highlight><highlight class="comment">//own<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenOffsets[eN_parent+1]=<sp/>childOffset+1;</highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset]<sp/>=<sp/>eN_parent;</highlight><highlight class="comment">//own<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//count<sp/>number<sp/>of<sp/>refined<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBisectedEdges<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>midnodes[3],vnodes[3];</highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_local<sp/>=<sp/>0;<sp/>ebN_local<sp/>&lt;<sp/>simplexDim;<sp/>ebN_local++)</highlight></codeline>
<codeline lineno="7417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>elementBoundariesArray_parent[eN_parent*simplexDim+ebN_local];</highlight></codeline>
<codeline lineno="7419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[ebN_local]<sp/><sp/><sp/>=<sp/>elementNodesArray_parent[eN_parent*simplexDim+ebN_local];</highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[ebN_local]<sp/>=<sp/>edgeMidNodesArray[ebN];</highlight></codeline>
<codeline lineno="7421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgeMidNodesArray[ebN]<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBisectedEdges++;</highlight></codeline>
<codeline lineno="7423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(nBisectedEdges<sp/>&gt;<sp/>0);</highlight><highlight class="comment">//shouldnt<sp/>be<sp/>refined<sp/>if<sp/>no<sp/>bisected<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refCase<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBisectedEdges<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cek<sp/>added<sp/>uniform<sp/>4T<sp/>to<sp/>test<sp/>difference<sp/>with<sp/>rivara<sp/>4T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u4T)</highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refCase<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//4<sp/>children<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenOffsets[eN_parent+1]=<sp/>childOffset+4;</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+0]=</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[0];</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+1]=</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[1];</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+2]=</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[2];</highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_parent]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+0]<sp/>=<sp/>eN_parent;</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=0;<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>&lt;simplexDim;<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>++)</highlight></codeline>
<codeline lineno="7447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>+1)%simplexDim];</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>+2)%simplexDim];</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight><highlight class="comment">//own<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>+1]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refCase<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="7464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>longest<sp/>edge,<sp/></highlight></codeline>
<codeline lineno="7465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nB<sp/><sp/><sp/>=<sp/>also<sp/>node<sp/>across<sp/>from<sp/>it</highlight></codeline>
<codeline lineno="7466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note<sp/>mid(nB,nB+1)<sp/>=<sp/>midnodes[nB+2]<sp/>(across<sp/>from<sp/>other<sp/>node)</highlight></codeline>
<codeline lineno="7467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>triangles:</highlight></codeline>
<codeline lineno="7468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nB,mid(nB,nB+1),mid(nB+1,nB+2)<sp/><sp/><sp/>eN_parent</highlight></codeline>
<codeline lineno="7469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mid(nB,nB+1),nB+1,mid(nB+1,nB+2)<sp/>eN_new</highlight></codeline>
<codeline lineno="7470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mid(nB+1,nB+2,nB+2,mid(nB+2,nB))<sp/>eN_new+1</highlight></codeline>
<codeline lineno="7471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mid(nB+2,nB),nB,mid(nB+1,nB+2))<sp/><sp/>eN_new+2</highlight></codeline>
<codeline lineno="7472"><highlight class="comment"></highlight></codeline>
<codeline lineno="7473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>=<sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(eN_parent,</highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_parent,</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_parent);</highlight></codeline>
<codeline lineno="7478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(midnodes[base]<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="7479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//4<sp/>children<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenOffsets[eN_parent+1]=<sp/>childOffset+4;</highlight></codeline>
<codeline lineno="7481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+0]=</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+1]=</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+2]=</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_parent]<sp/>=<sp/>eN_parent;<sp/></highlight><highlight class="comment">//own<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+0]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+1]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+2]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+3]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//4T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBisectedEdges<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refCase<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="7530"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="7531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>longest<sp/>edge,<sp/></highlight></codeline>
<codeline lineno="7532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nB<sp/><sp/><sp/>=<sp/>also<sp/>node<sp/>across<sp/>from<sp/>it</highlight></codeline>
<codeline lineno="7533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn<sp/><sp/><sp/>=<sp/>node<sp/>across<sp/>from<sp/>other<sp/>bisected<sp/>edge</highlight></codeline>
<codeline lineno="7534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note<sp/>mid(nB,nB+1)<sp/>=<sp/>midnodes[nB+2]<sp/>(across<sp/>from<sp/>other<sp/>node)</highlight></codeline>
<codeline lineno="7535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>triangles:</highlight></codeline>
<codeline lineno="7536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>nn=nB+1</highlight></codeline>
<codeline lineno="7537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nB,nB+1,mid(nB+1,nB+2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_parent</highlight></codeline>
<codeline lineno="7538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nB,mid(nB+1,nB+2),mid(nB+2,nB))<sp/><sp/><sp/><sp/>eN_new</highlight></codeline>
<codeline lineno="7539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mid(nB+1,nB+2),nB+2,mid(nB+2,nB))<sp/><sp/>eN_new+2</highlight></codeline>
<codeline lineno="7540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="7541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nB+2,nB,mid(nB+1,nB+2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_parent</highlight></codeline>
<codeline lineno="7542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nB,mid(nB,nB+1),mid(nB+1,nB+2))<sp/><sp/><sp/><sp/>eN_new</highlight></codeline>
<codeline lineno="7543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mid(nB,nB+1),nB+1,mid(nB+1,nB+2))<sp/><sp/>eN_new+2</highlight></codeline>
<codeline lineno="7544"><highlight class="comment"></highlight></codeline>
<codeline lineno="7545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>=<sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(eN_parent,</highlight></codeline>
<codeline lineno="7548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_parent,</highlight></codeline>
<codeline lineno="7549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_parent);</highlight></codeline>
<codeline lineno="7550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(midnodes[base]<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//3<sp/>children<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenOffsets[eN_parent+1]=<sp/>childOffset+3;</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"></highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midnodes[(base+1)%simplexDim]<sp/>&lt;<sp/>0)</highlight><highlight class="comment">//edge<sp/>across<sp/>from<sp/>node<sp/>nB+1<sp/>is<sp/>not<sp/>bisected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(midnodes[(base+2)%simplexDim]<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nn<sp/>=<sp/>nB+2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+0]=</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+1]=</highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+2]=</highlight></codeline>
<codeline lineno="7564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_parent]<sp/>=<sp/>eN_parent;<sp/></highlight><highlight class="comment">//own<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+0]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+1]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+2]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="comment">//edge<sp/>across<sp/>from<sp/>node<sp/>nB+1<sp/>is<sp/>bisected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(midnodes[(base+2)%simplexDim]<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nn<sp/>=<sp/>nB+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+0]=</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+1]=</highlight></codeline>
<codeline lineno="7599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+2]=</highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_parent]<sp/>=<sp/>eN_parent;<sp/></highlight><highlight class="comment">//own<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+0]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+1]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+2]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//orientation<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//3T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBisectedEdges<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refCase<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/***************************************************</highlight></codeline>
<codeline lineno="7633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>longest<sp/>edge,<sp/></highlight></codeline>
<codeline lineno="7634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nB<sp/><sp/><sp/>=<sp/>also<sp/>node<sp/>across<sp/>from<sp/>it</highlight></codeline>
<codeline lineno="7635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>triangles:</highlight></codeline>
<codeline lineno="7636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nB,nB+1,mid(nB+1,nB+2))<sp/><sp/><sp/>eN_parent</highlight></codeline>
<codeline lineno="7637"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mid(nB+1,nB+2),nB+2,nB)<sp/><sp/><sp/>eN_new</highlight></codeline>
<codeline lineno="7638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>=<sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(eN_parent,</highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_parent,</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray_parent);</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//2<sp/>children<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenOffsets[eN_parent+1]=<sp/>childOffset+2;</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(midnodes[base]<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+0]=</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+1]=</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+1)%simplexDim];</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_parent*simplexDim+2]=</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_parent]<sp/>=<sp/>eN_parent;<sp/></highlight><highlight class="comment">//own<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+0]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+0]=</highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midnodes[base];</highlight></codeline>
<codeline lineno="7660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+1]=</highlight></codeline>
<codeline lineno="7661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[(base+2)%simplexDim];</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray_child[eN_new*simplexDim+2]=</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vnodes[base];</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent/child<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_new]<sp/>=<sp/>eN_parent;<sp/></highlight></codeline>
<codeline lineno="7666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementChildrenArray[childOffset+1]<sp/>=<sp/>eN_new;</highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_new++;</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//2T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7669"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_REFINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;subdivide4T<sp/>eN_parent<sp/>=<sp/>&quot;&lt;&lt;eN_parent&lt;&lt;&quot;<sp/>case=<sp/>&quot;&lt;&lt;refCase&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>child_start<sp/>=<sp/>elementChildrenOffsets[eN_parent];<sp/></highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>child_end<sp/><sp/><sp/>=<sp/>elementChildrenOffsets[eN_parent+1];</highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;child<sp/>elements<sp/>---<sp/>&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i<sp/>=<sp/>child_start;<sp/>i<sp/>&lt;<sp/>child_end;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>eN_child<sp/>=<sp/>elementChildrenArray[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//std::cout&lt;&lt;&quot;eN_child=<sp/>&quot;&lt;&lt;eN_child&lt;&lt;&quot;<sp/>nodes=<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//for<sp/>(int<sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>3;<sp/>nN++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//std::cout&lt;&lt;elementNodesArray_child[eN_child*3+nN]&lt;&lt;&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//std::cout&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7682"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//element<sp/>refined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7688"><highlight class="normal"></highlight></codeline>
<codeline lineno="7689"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MWF_HACK_2D_COARSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7690"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findGlueNeighbor2d(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementParentsArray)</highlight></codeline>
<codeline lineno="7693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/*****************************************</highlight></codeline>
<codeline lineno="7695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>glue<sp/>neighbor<sp/>is<sp/>neighbor<sp/>that<sp/>has<sp/>same<sp/>parent</highlight></codeline>
<codeline lineno="7696"><highlight class="comment"><sp/><sp/>****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_element<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_glue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig<sp/>=<sp/>elementNeighborsArray[eN*nElementBoundaries_element+ebN];</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_neig<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>elementParentsArray[eN_neig]<sp/>==<sp/>elementParentsArray[eN])</highlight></codeline>
<codeline lineno="7703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//neighbor<sp/>has<sp/>same<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_glue<sp/>=<sp/>eN_neig;</highlight></codeline>
<codeline lineno="7706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eN_glue;</highlight></codeline>
<codeline lineno="7709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>findT2Neighbor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_base,</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementParentsArray)</highlight></codeline>
<codeline lineno="7713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7714"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/*****************************************</highlight></codeline>
<codeline lineno="7715"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&quot;other<sp/>neighbor&quot;<sp/>t2,<sp/>is<sp/>the<sp/>neighbor<sp/>of<sp/>eN<sp/>that<sp/>contains</highlight></codeline>
<codeline lineno="7716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>base<sp/>node<sp/>but<sp/>is<sp/>not<sp/>the<sp/>glue<sp/>neighbor</highlight></codeline>
<codeline lineno="7717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>That<sp/>is,<sp/>t2<sp/>is<sp/>not<sp/>across<sp/>the<sp/>from<sp/>the<sp/>base<sp/>and<sp/>is<sp/>not<sp/>the<sp/>glue<sp/></highlight></codeline>
<codeline lineno="7718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbor<sp/></highlight></codeline>
<codeline lineno="7719"><highlight class="comment"><sp/><sp/>****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_t2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN<sp/>=<sp/>0;<sp/>ebN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>ebN++)</highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig<sp/>=<sp/>elementNeighborsArray[eN*nElementBoundaries_element+ebN];</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ebN<sp/>!=<sp/>eN_base<sp/>&amp;&amp;<sp/>eN_neig<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray[eN_neig]<sp/>!=<sp/>elementParentsArray[eN])</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_t2<sp/>=<sp/>eN_neig;</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eN_t2;</highlight></codeline>
<codeline lineno="7731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"></highlight><highlight class="comment">//try<sp/>to<sp/>implement<sp/>glue<sp/>unrefinement<sp/>(Algorithm<sp/>3)<sp/>from<sp/>Kossaczky<sp/>94</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7733"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newestNodeGlue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight></codeline>
<codeline lineno="7734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>mayCoarsen,<sp/></highlight><highlight class="comment">//tag<sp/>for<sp/>current<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nElements_global,</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>nodeArray,</highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>bases,</highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>coarsened)</highlight></codeline>
<codeline lineno="7743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mayCoarsen[eN])</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"><sp/><sp/><sp/><sp/>{failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;}</highlight></codeline>
<codeline lineno="7748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//2d<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_element<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connectable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_base<sp/>=<sp/>bases[eN];</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_global_base<sp/>=<sp/>elementNodesArray[eN*nElementBoundaries_element+eN_base];</highlight></codeline>
<codeline lineno="7753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_glue<sp/>=<sp/>-1,<sp/>eN_t2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7754"><highlight class="normal"><sp/><sp/>eN_glue<sp/>=<sp/>findGlueNeighbor(eN,</highlight></codeline>
<codeline lineno="7755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray);</highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/>eN_t2<sp/><sp/><sp/>=<sp/>findT2Neighbor(eN,eN_base,</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray);</highlight></codeline>
<codeline lineno="7760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_glue<sp/>&lt;<sp/>0)</highlight><highlight class="comment">//no<sp/>sibling<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7761"><highlight class="normal"><sp/><sp/><sp/><sp/>{failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;}</highlight></codeline>
<codeline lineno="7762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_t2<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>elementNodesArray[eN_t2*nElementBoundaries_element+bases[eN_t2]]<sp/>!=<sp/>nN_global_base)</highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>newestNodeGlue(eN_t2,</highlight></codeline>
<codeline lineno="7764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mayCoarsen,</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global,</highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray,</highlight></codeline>
<codeline lineno="7768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases,</highlight></codeline>
<codeline lineno="7772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarsened);</highlight></codeline>
<codeline lineno="7773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="7774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7775"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//connectable<sp/>if<sp/>glue<sp/>neighbor<sp/>(ie<sp/>sibling<sp/>shares<sp/>same<sp/>base)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7776"><highlight class="normal"><sp/><sp/>connectable<sp/>=<sp/>(nN_global_base<sp/>==<sp/>elementNodesArray[eN_glue*nElementBoundaries_element+bases[eN_glue]]);</highlight></codeline>
<codeline lineno="7777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!connectable)</highlight></codeline>
<codeline lineno="7778"><highlight class="normal"><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>newestNodeGlue(eN_glue,</highlight></codeline>
<codeline lineno="7779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mayCoarsen,</highlight></codeline>
<codeline lineno="7780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global,</highlight></codeline>
<codeline lineno="7781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray,</highlight></codeline>
<codeline lineno="7783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases,</highlight></codeline>
<codeline lineno="7787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarsened);</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//neighbor<sp/>information<sp/>may<sp/>have<sp/>changed,<sp/>just<sp/>t2?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7791"><highlight class="normal"><sp/><sp/>eN_glue<sp/>=<sp/>findGlueNeighbor(eN,</highlight></codeline>
<codeline lineno="7792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray);</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_glue<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>failed<sp/>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;}</highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/>eN_t2<sp/><sp/><sp/>=<sp/>findT2Neighbor(eN,eN_base,</highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray);</highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>t2connectable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//find<sp/>glue<sp/>neighbor<sp/>of<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7801"><highlight class="normal"></highlight></codeline>
<codeline lineno="7802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_t2_glue<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_t2<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/>eN_t2_glue<sp/>=<sp/>findGlueNeighbor(eN_t2,</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray);</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"></highlight></codeline>
<codeline lineno="7808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_t2_glue<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>eN_t2<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/>{failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;}</highlight></codeline>
<codeline lineno="7810"><highlight class="normal"><sp/><sp/>t2connectable<sp/>=<sp/>(eN_t2<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elementNodesArray[eN_t2*nElementBoundaries_element+bases[eN_t2]]<sp/>==</highlight></codeline>
<codeline lineno="7812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray[eN_t2_glue*nElementBoundaries_element+bases[eN_t2_glue]]));</highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_t2<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>!t2connectable)</highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>newestNodeGlue(eN_t2_glue,</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mayCoarsen,</highlight></codeline>
<codeline lineno="7816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global,</highlight></codeline>
<codeline lineno="7817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray,</highlight></codeline>
<codeline lineno="7819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases,</highlight></codeline>
<codeline lineno="7823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarsened);</highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/>t2connectable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_t2<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/><sp/><sp/>eN_t2_glue<sp/>=<sp/>findGlueNeighbor(eN_t2,</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray);</highlight></codeline>
<codeline lineno="7831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eN_t2<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>eN_t2_glue<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7832"><highlight class="normal"><sp/><sp/><sp/><sp/>t2connectable<sp/>=<sp/>(elementNodesArray[eN_t2*nElementBoundaries_element+bases[eN_t2]]<sp/>==</highlight></codeline>
<codeline lineno="7833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray[eN_t2_glue*nElementBoundaries_element+bases[eN_t2_glue]]);</highlight></codeline>
<codeline lineno="7834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2connectable)</highlight></codeline>
<codeline lineno="7835"><highlight class="normal"><sp/><sp/><sp/><sp/>failed<sp/>=<sp/>glueElements(eN_t2,eN_t2_glue,</highlight></codeline>
<codeline lineno="7836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mayCoarsen,</highlight></codeline>
<codeline lineno="7837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global,</highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray,</highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases,</highlight></codeline>
<codeline lineno="7844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarsened);</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed)</highlight></codeline>
<codeline lineno="7846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7847"><highlight class="normal"><sp/><sp/>failed<sp/>=<sp/>glueElements(eN,eN_glue,</highlight></codeline>
<codeline lineno="7848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mayCoarsen,</highlight></codeline>
<codeline lineno="7849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nElements_global,</highlight></codeline>
<codeline lineno="7850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodeArray,</highlight></codeline>
<codeline lineno="7852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bases,</highlight></codeline>
<codeline lineno="7856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarsened);</highlight></codeline>
<codeline lineno="7857"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7860"><highlight class="normal"></highlight></codeline>
<codeline lineno="7861"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>glueElements(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_glue,</highlight></codeline>
<codeline lineno="7862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>mayCoarsen,<sp/></highlight><highlight class="comment">//tag<sp/>for<sp/>current<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nElements_global,</highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nNodes_global,</highlight></codeline>
<codeline lineno="7865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>nodeArray,</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="7869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>bases,</highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>coarsened)</highlight></codeline>
<codeline lineno="7871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>failed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//2d<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nElementBoundaries_element<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/>assert(eN<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>eN_glue<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mayCoarsen[eN]<sp/>||<sp/>!mayCoarsen[eN_glue])</highlight></codeline>
<codeline lineno="7877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connectable<sp/>=<sp/>(elementNodesArray[eN*nElementBoundaries_element+bases[eN]]<sp/>==</highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray[eN_glue*nElementBoundaries_element+bases[eN_glue]]);</highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!connectable)</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="7882"><highlight class="normal"></highlight></codeline>
<codeline lineno="7883"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/>/*****************************************</highlight></codeline>
<codeline lineno="7884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>eN<sp/>and<sp/>eN_glue<sp/>share<sp/>the<sp/></highlight></codeline>
<codeline lineno="7885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>same<sp/>local<sp/>base<sp/>so<sp/>have<sp/>same<sp/>newest<sp/>node</highlight></codeline>
<codeline lineno="7886"><highlight class="comment"></highlight></codeline>
<codeline lineno="7887"><highlight class="comment"><sp/><sp/><sp/><sp/>How<sp/>to<sp/>maintain<sp/>counter<sp/>clockwise<sp/>order</highlight></codeline>
<codeline lineno="7888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>create<sp/>new<sp/>element</highlight></codeline>
<codeline lineno="7889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(eN_base+1,eN_base+2,eN_glue_base+1)</highlight></codeline>
<codeline lineno="7890"><highlight class="comment"><sp/><sp/><sp/><sp/>assuming<sp/>elements<sp/>were<sp/>originally<sp/>in<sp/></highlight></codeline>
<codeline lineno="7891"><highlight class="comment"><sp/><sp/><sp/><sp/>clockwise<sp/>order</highlight></codeline>
<codeline lineno="7892"><highlight class="comment"><sp/><sp/>****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_parent;<sp/></highlight></codeline>
<codeline lineno="7894"><highlight class="normal"><sp/><sp/>base_parent<sp/>=<sp/>(bases[eN]+1)<sp/>%<sp/>nElementBoundaries_element;</highlight></codeline>
<codeline lineno="7895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN_global_gone<sp/>=<sp/>elementNodesArray[eN*nElementBoundaries_element+bases[eN]];</highlight></codeline>
<codeline lineno="7896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//overwrite<sp/>eN<sp/>with<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nN<sp/>=<sp/>0;<sp/>nN<sp/>&lt;<sp/>nElementBoundaries_element;<sp/>nN++)</highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="7899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nN<sp/>==<sp/>bases[eN])</highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementNodesArray[eN*nElementBoundaries_element+ebN]<sp/>=<sp/>(bases[eN_glue]+1)<sp/>%<sp/>nElementBoundaries_element;</highlight></codeline>
<codeline lineno="7901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7902"><highlight class="normal"><sp/><sp/>coarsened[eN]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7903"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//how<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>nodes<sp/>in<sp/>node<sp/>array<sp/>and<sp/>keep<sp/>track<sp/>of<sp/>global<sp/>node<sp/>numbers???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7904"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7905"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//2d<sp/>HACK<sp/>COARSEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7906"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/mesh.cpp"/>
  </compounddef>
</doxygen>

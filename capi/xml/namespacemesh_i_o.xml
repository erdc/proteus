<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacemesh_i_o" kind="namespace" language="C++">
    <compoundname>meshIO</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemesh_i_o_1a8080a4ccd397a8f463e92f973d7fe6b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::readTriangleMeshNodesAndElements</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, int &amp;nElements, int &amp;nNodes, std::vector&lt; double &gt; &amp;nodeArray, std::vector&lt; int &gt; &amp;elementNodesArray, std::vector&lt; int &gt; &amp;nodeMaterialTypes, std::vector&lt; int &gt; &amp;elementMaterialTypes, const int &amp;defaultElementMaterialType, const int &amp;defaultNodeMaterialType)</argsstring>
        <name>readTriangleMeshNodesAndElements</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>nodeMaterialTypes</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementMaterialTypes</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>defaultElementMaterialType</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>defaultNodeMaterialType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="41" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="41" bodyend="147" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="50" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1a816291a6b91f54297bc738c5e00474d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::writeTriangleMeshNodesAndElements</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, const int &amp;nElements, const int &amp;nNodes, const double *nodeArray, const int *elementNodesArray, const int *nodeMaterialTypes, const int *elementMaterialTypes)</argsstring>
        <name>writeTriangleMeshNodesAndElements</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nNodes</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeMaterialTypes</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementMaterialTypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="150" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="150" bodyend="224" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="91" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1af22ab8c87e496e0bda776152b2923ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::readTriangleElementBoundaries</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, bool &amp;hasMarkers, int &amp;nElementBoundaries, std::vector&lt; int &gt; &amp;elementBoundaryNodesArray, std::vector&lt; int &gt; &amp;elementBoundaryMaterialTypesArray, const int &amp;defaultBoundaryMaterialType)</argsstring>
        <name>readTriangleElementBoundaries</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasMarkers</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nElementBoundaries</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementBoundaryNodesArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementBoundaryMaterialTypesArray</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>defaultBoundaryMaterialType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="232" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="232" bodyend="286" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="120" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1a32eee7185fbc3b8c7b9c7983d37b2b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::writeTriangleElementBoundaryNodes</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, const int &amp;nElementBoundaries, const int *elementBoundaryNodesArray, const int *elementBoundaryMaterialTypes)</argsstring>
        <name>writeTriangleElementBoundaryNodes</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nElementBoundaries</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryMaterialTypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="290" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="290" bodyend="332" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="133" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1aaa9ba7069e5469d82aaa5b2a3810b391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::readTetgenMeshNodesAndElements</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, int &amp;nElements, int &amp;nNodes, std::vector&lt; double &gt; &amp;nodeArray, std::vector&lt; int &gt; &amp;elementNodesArray, std::vector&lt; int &gt; &amp;nodeMaterialTypes, std::vector&lt; int &gt; &amp;elementMaterialTypes, const int &amp;defaultElementMaterialType, const int &amp;defaultNodeMaterialType)</argsstring>
        <name>readTetgenMeshNodesAndElements</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>nodeMaterialTypes</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementMaterialTypes</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>defaultElementMaterialType</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>defaultNodeMaterialType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="339" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="339" bodyend="445" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="170" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1a6c4816c4d0d40b671dd8a864e055d88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::readTetgenElementBoundaries</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, bool &amp;hasMarkers, int &amp;nElementBoundaries, std::vector&lt; int &gt; &amp;elementBoundaryNodesArray, std::vector&lt; int &gt; &amp;elementBoundaryMaterialTypesArray, const int &amp;defaultBoundaryMaterialType)</argsstring>
        <name>readTetgenElementBoundaries</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>hasMarkers</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nElementBoundaries</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementBoundaryNodesArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementBoundaryMaterialTypesArray</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>defaultBoundaryMaterialType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="448" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="448" bodyend="504" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="203" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1a94f693575c705e500c84b2232f8fb5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::writeTetgenMeshNodesAndElements</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, const int &amp;nElements, const int &amp;nNodes, const double *nodeArray, const int *elementNodesArray, const int *nodeMaterialTypes, const int *elementMaterialTypes)</argsstring>
        <name>writeTetgenMeshNodesAndElements</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nNodes</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeMaterialTypes</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementMaterialTypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="508" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="508" bodyend="583" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="242" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1afd358c552a9ebaa2ce3ad8ae4b389de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::writeTetgenElementBoundaryNodes</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, const int &amp;nElementBoundariesToWrite, const int *elementBoundaryNodesArray, const int *elementBoundaryMaterialTypes, const bool &amp;writeExteriorElementBoundariesOnly, const int *exteriorElementBoundariesArray)</argsstring>
        <name>writeTetgenElementBoundaryNodes</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nElementBoundariesToWrite</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryMaterialTypes</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>writeExteriorElementBoundariesOnly</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="586" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="586" bodyend="661" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="260" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1a187ce9f835e193a5af02760c2a451229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::write3dmMeshNodesAndElements</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, const int &amp;nElements, const int &amp;nNodes, const double *nodeArray, const int *elementNodesArray, const int *elementMaterialTypes)</argsstring>
        <name>write3dmMeshNodesAndElements</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nNodes</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementMaterialTypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="668" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="668" bodyend="715" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="291" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemesh_i_o_1a9742e24e7c18b92dd4de812edbc275c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool meshIO::write2dmMeshNodesAndElements</definition>
        <argsstring>(const char *filebase, const int &amp;indexBase, const int &amp;nElements, const int &amp;nNodes, const double *nodeArray, const int *elementNodesArray, const int *elementMaterialTypes)</argsstring>
        <name>write2dmMeshNodesAndElements</name>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nElements</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nNodes</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementMaterialTypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="718" column="1" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" bodystart="718" bodyend="762" declfile="/home/tridelat/PROTEUS/proteus2/proteus/meshio.h" declline="323" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/meshio.cpp" line="34" column="1"/>
  </compounddef>
</doxygen>

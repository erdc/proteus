<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="flop_test_8c" kind="file" language="C++">
    <compoundname>flopTest.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">strings.h</includes>
    <includes local="no">mach/mach_time.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>flopTest.c</label>
        <link refid="flop_test_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>mach/mach_time.h</label>
      </node>
      <node id="5">
        <label>strings.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="flop_test_8c_1a61c67c5aed8dad35932ccf2f00b8589d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double CurrentTime</definition>
        <argsstring>(void)</argsstring>
        <name>CurrentTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/tests/flopTest.c" line="239" column="15" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/tests/flopTest.c" bodystart="239" bodyend="250" declfile="/home/tridelat/PROTEUS/proteus2/proteus/tests/flopTest.c" declline="13" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="flop_test_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/tests/flopTest.c" line="20" column="5" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/tests/flopTest.c" bodystart="20" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mach/mach_time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*#include<sp/>&lt;Accelerate/Accelerate.h&gt;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//****************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>*<sp/>local<sp/>(<sp/>static<sp/>)<sp/>function<sp/>prototypes<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CurrentTime(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//****************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>*<sp/>exported<sp/>function<sp/>implementations<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="flop_test_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="flop_test_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vlen=atoi(argv[1]),stride=1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,m,ntimes;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a=atof(argv[2]),b=atof(argv[3]),<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>=atof(argv[4]),xi,yi;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,*y,*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>,*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>,*<ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>,*<ref refid="jf_8h_1a903054ae14c61b1d440291818185c51c" kindref="member">w</ref>,start,stop,diff;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>ntimes<sp/>=0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ntimes&lt;<sp/>25)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ntimes+=1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>&lt;<sp/>5)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;usage:<sp/>zerotest<sp/>vlen<sp/>da<sp/>db<sp/>dc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*vlen);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*vlen);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*vlen);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*vlen);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*vlen);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="jf_8h_1a903054ae14c61b1d440291818185c51c" kindref="member">w</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)*vlen);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2e<sp/>seconds<sp/>per<sp/>double;<sp/>malloc\n&quot;</highlight><highlight class="normal">,(stop-start),(stop-start)/(3.0*vlen));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>memset(x,0,vlen*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>memset(y,0,vlen*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>memset(<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>,0,vlen*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2e<sp/>seconds<sp/>per<sp/>double;<sp/>memset\n&quot;</highlight><highlight class="normal">,(stop-start),(stop-start)/(3.0*vlen));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]=<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>[i]=b;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a903054ae14c61b1d440291818185c51c" kindref="member">w</ref>[i]=a;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2e<sp/>seconds<sp/>per<sp/>double;<sp/>x[i]=c<sp/>\n&quot;</highlight><highlight class="normal">,(stop-start),(stop-start)/(3.0*vlen));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y[i]=x[i];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2e<sp/>seconds<sp/>per<sp/>double;<sp/>y[i]=x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(stop-start)/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(vlen));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>cblas_dcopy(vlen,x,stride,y,stride);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2e<sp/>seconds<sp/>per<sp/>double;<sp/>dcopy<sp/>y[i]=x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(stop-start)/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(vlen));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x[i]*=a;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]=a*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),((stop-start)/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(vlen))/1.0e6);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>cblas_dscal(vlen,a,x,stride);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>dscal<sp/>y[i]=a*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),((stop-start)/(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(vlen))/1.0e6);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>+=<sp/>a*x[i];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>+=<sp/>a*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*2/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>cblas_daxpy(vlen,a,x,stride,y,stride);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>daxpy<sp/>y[i]<sp/>+=<sp/>a*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*2/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>+=<sp/>a*x[i];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>+=<sp/>a*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*2/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*2/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*4/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*y[i];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]<sp/>+<sp/>c*x[i]*y[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*7/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]<sp/>+<sp/>c*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*10/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*y[i]*y[i];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]<sp/>+<sp/>c*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*y[i]*y[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*13/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*y[i]*y[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*x[i]*x[i];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]<sp/>+<sp/>c*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*y[i]*y[i]<sp/>+<sp/>c*x[i]*x[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*17/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*y[i]*y[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*x[i]*x[i]<sp/>+<sp/>a*x[i]*y[i]*y[i]<sp/>+<sp/>b*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*x[i];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*y[i]<sp/>+<sp/>c*x[i]*y[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*y[i]*y[i]<sp/>+<sp/>c*x[i]*x[i]*x[i]<sp/>+<sp/>a*x[i]*y[i]*y[i]<sp/>+<sp/>b*x[i]*z[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*25/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*z[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*4/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*7/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*x[i]*x[i];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*x[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*10/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*z[i]*z[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*13/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*x[i]*x[i];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*z[i]*z[i]<sp/>+<sp/>c*x[i]*x[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*17/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*x[i]*x[i]<sp/>+<sp/>a*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>b*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*x[i];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*x[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*x[i]*x[i]<sp/>+<sp/>b*z[i]*z[i]<sp/>+<sp/>c*x[i]*x[i]*x[i]<sp/>+<sp/>a*x[i]*z[i]*z[i]<sp/>+<sp/>b*x[i]*z[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*25/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*u[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*7/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*x[i];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*u[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*u[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*10/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]+<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*u[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*u[i]*x[i]<sp/>+<sp/>b*z[i]*z[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*13/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*x[i]*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*u[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*u[i]*x[i]<sp/>+<sp/>b*z[i]*z[i]<sp/>+<sp/>c*u[i]*x[i]*u[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*17/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;vlen;i++)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>a*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*x[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*x[i]*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]<sp/>+<sp/>a*x[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]<sp/>+<sp/>b*<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>[i]*<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>[i]*x[i];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2f<sp/>MFLOPS;<sp/>y[i]<sp/>=<sp/>c<sp/>+<sp/>a*u[i]<sp/>+<sp/>b*z[i]<sp/>+<sp/>c*x[i]*z[i]<sp/>+<sp/>a*u[i]*x[i]<sp/>+<sp/>b*z[i]*z[i]<sp/>+<sp/>c*u[i]*x[i]*u[i]<sp/>+<sp/>a*x[i]*z[i]*z[i]<sp/>+<sp/>b*u[i]*z[i]*x[i]\n&quot;</highlight><highlight class="normal">,(stop-start),(vlen*25/(stop-start))/1.0e6);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>free(x);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>free(y);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>free(<ref refid="_headers_8h_1a9d199fcfc162b9ad09d4c9426e713a74" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>free(<ref refid="_headers_8h_1a81073496b3df485c6b59c5823819310b" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>free(<ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>free(<ref refid="jf_8h_1a903054ae14c61b1d440291818185c51c" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>stop<sp/>=<sp/>CurrentTime();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%10.2e<sp/>s<sp/>%10.2e<sp/>seconds<sp/>per<sp/>double;<sp/>free;<sp/>\n&quot;</highlight><highlight class="normal">,(stop-start),(stop-start)/(6.0*vlen));</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//****************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>*<sp/>local<sp/>(<sp/>static<sp/>)<sp/>function<sp/>implementations<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>time<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//cek<sp/>took<sp/>from<sp/>apple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CurrentTime(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0.0<sp/>==<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mach_timebase_info_data_t<sp/>info;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mach_timebase_info(&amp;info);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>info.numer<sp/>/<sp/>info.denom<sp/>*<sp/>1e-9;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mach_absolute_time()<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CurrentTime</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/tests/flopTest.c"/>
  </compounddef>
</doxygen>

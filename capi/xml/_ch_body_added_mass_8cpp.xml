<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_ch_body_added_mass_8cpp" kind="file" language="C++">
    <compoundname>ChBodyAddedMass.cpp</compoundname>
    <includes refid="_ch_body_added_mass_8h" local="yes">ChBodyAddedMass.h</includes>
    <includes refid="_ch_variables_body_added_mass_8h" local="yes">ChVariablesBodyAddedMass.h</includes>
    <incdepgraph>
      <node id="1">
        <label>ChBodyAddedMass.cpp</label>
        <link refid="_ch_body_added_mass_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ChVariablesBodyAddedMass.h</label>
        <link refid="_ch_variables_body_added_mass_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>chrono/physics/ChBody.h</label>
      </node>
      <node id="2">
        <label>ChBodyAddedMass.h</label>
        <link refid="_ch_body_added_mass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>chrono/solver/ChVariablesBodyOwnMass.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacechrono">chrono</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="_ch_body_added_mass_8cpp_1a3088e8415772ee855c07453beda528c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_ch_body_added_mass" kindref="compound">chrono::ChBodyAddedMass</ref> *</type>
        <definition>chrono::ChBodyAddedMass* newChBodyAddedMass</definition>
        <argsstring>()</argsstring>
        <name>newChBodyAddedMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tridelat/PROTEUS/proteus2/proteus/mbd/ChBodyAddedMass.cpp" line="201" column="26" bodyfile="/home/tridelat/PROTEUS/proteus2/proteus/mbd/ChBodyAddedMass.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ch_body_added_mass_8h" kindref="compound">ChBodyAddedMass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ch_variables_body_added_mass_8h" kindref="compound">ChVariablesBodyAddedMass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="namespacechrono" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacechrono" kindref="compound">chrono</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>into<sp/>the<sp/>object<sp/>factory,<sp/>to<sp/>enable<sp/>run-time<sp/>dynamic<sp/>creation<sp/>and<sp/>persistence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CH_FACTORY_REGISTER(<ref refid="classchrono_1_1_ch_body_added_mass" kindref="compound">ChBodyAddedMass</ref>)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classchrono_1_1_ch_body_added_mass_1a34a22e401cf6b4af0f88971784de7b6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass" kindref="compound">ChBodyAddedMass</ref>::<ref refid="classchrono_1_1_ch_body_added_mass" kindref="compound">ChBodyAddedMass</ref>()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChBody::variables<sp/>=<sp/>variables;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classchrono_1_1_ch_body_added_mass_1a16f82cf925e661c4fba3623bb5c31371" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a16f82cf925e661c4fba3623bb5c31371" kindref="member">ChBodyAddedMass::SetMass</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newmass)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.SetBodyMass(newmass);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChBody::variables.SetBodyMass(newmass);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classchrono_1_1_ch_body_added_mass_1ab5f30b2d7871b769a08e38b5973b4153" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1ab5f30b2d7871b769a08e38b5973b4153" kindref="member">ChBodyAddedMass::SetInertia</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChMatrix33&lt;&gt;&amp;<sp/>newXInertia)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.SetBodyInertia(newXInertia);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>ChBody::variables.SetBodyInertia(newXInertia);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classchrono_1_1_ch_body_added_mass_1af064a4a16c6442794da47915ed4c902a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af064a4a16c6442794da47915ed4c902a" kindref="member">ChBodyAddedMass::SetInertiaXX</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChVector&lt;&gt;&amp;<sp/>iner)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(0,<sp/>0,<sp/>iner.x());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(1,<sp/>1,<sp/>iner.y());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(2,<sp/>2,<sp/>iner.z());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().FastInvert(<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInvInertia());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>ChBody::SetInertiaXX(iner);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classchrono_1_1_ch_body_added_mass_1a09607fe374532e6b5a97ccf6a86fb2c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a09607fe374532e6b5a97ccf6a86fb2c1" kindref="member">ChBodyAddedMass::SetInertiaXY</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChVector&lt;&gt;&amp;<sp/>iner)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(0,<sp/>1,<sp/>iner.x());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(0,<sp/>2,<sp/>iner.y());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(1,<sp/>2,<sp/>iner.z());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(1,<sp/>0,<sp/>iner.x());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(2,<sp/>0,<sp/>iner.y());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().SetElement(2,<sp/>1,<sp/>iner.z());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInertia().FastInvert(<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.GetBodyInvInertia());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ChBody::SetInertiaXY(iner);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ChVector&lt;&gt;<sp/>ChBodyAddedMass::GetInertiaXX()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChVector&lt;&gt;<sp/>iner;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iner.x()<sp/>=<sp/>variables.GetBodyInertia().GetElement(0,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iner.y()<sp/>=<sp/>variables.GetBodyInertia().GetElement(1,<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iner.z()<sp/>=<sp/>variables.GetBodyInertia().GetElement(2,<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>iner;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ChVector&lt;&gt;<sp/>ChBodyAddedMass::GetInertiaXY()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChVector&lt;&gt;<sp/>iner;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iner.x()<sp/>=<sp/>variables.GetBodyInertia().GetElement(0,<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iner.y()<sp/>=<sp/>variables.GetBodyInertia().GetElement(0,<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iner.z()<sp/>=<sp/>variables.GetBodyInertia().GetElement(1,<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>iner;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classchrono_1_1_ch_body_added_mass_1a2a8c94d13713b3fede4184c44393933c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a2a8c94d13713b3fede4184c44393933c" kindref="member">ChBodyAddedMass::SetMfullmass</ref>(ChMatrixDynamic&lt;&gt;<sp/>Mfullmass_in)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(Mfullmass_in.GetRows()<sp/>==<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_ndof());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(Mfullmass_in.GetColumns()<sp/>==<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_ndof());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChMatrix&lt;&gt;&amp;<sp/>Mm<sp/>=<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.<ref refid="classchrono_1_1_ch_variables_body_added_mass_1a0eb286374f5cc6f5df385f2068eed414" kindref="member">GetMfullmass</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>6;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mm.SetElement(i,<sp/>j,<sp/>Mfullmass_in.GetElement(i,<sp/>j));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classchrono_1_1_ch_body_added_mass_1adcc36656d22b11d2976f78363a5f88b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1adcc36656d22b11d2976f78363a5f88b5" kindref="member">ChBodyAddedMass::SetInvMfullmass</ref>(ChMatrixDynamic&lt;&gt;<sp/>inv_Mfullmass_in)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(inv_Mfullmass_in.GetRows()<sp/>==<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_ndof());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(inv_Mfullmass_in.GetColumns()<sp/>==<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_ndof());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChMatrix&lt;&gt;&amp;<sp/>Mm<sp/>=<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.<ref refid="classchrono_1_1_ch_variables_body_added_mass_1a0378440220e2e8e06596b3497dc9589d" kindref="member">GetInvMfullmass</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>6;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mm(i,<sp/>j)<sp/>=<sp/>inv_Mfullmass_in.GetElement(i,<sp/>j);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classchrono_1_1_ch_body_added_mass_1a4e48df3df41ef1e9a4b9930411ca8122" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a4e48df3df41ef1e9a4b9930411ca8122" kindref="member">ChBodyAddedMass::IntToDescriptor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_v,<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>v,<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChStateDelta&amp;<sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChVectorDynamic&lt;&gt;&amp;<sp/><ref refid="_headers_8h_1ac8e838e6f10957014cfbeb426045ceea" kindref="member">R</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_L,<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>L,<sp/>Qc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChVectorDynamic&lt;&gt;&amp;<sp/><ref refid="_headers_8h_1a499d78bdc2c754c7a4cf8d39ed245e9f" kindref="member">L</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChVectorDynamic&lt;&gt;&amp;<sp/>Qc)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb().PasteClippedMatrix(v,<sp/>off_v,<sp/>0,<sp/>6,<sp/>1,<sp/>0,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>solver<sp/>warm<sp/>starting<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_fb().PasteClippedMatrix(R,<sp/>off_v,<sp/>0,<sp/>6,<sp/>1,<sp/>0,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>solver<sp/>known<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classchrono_1_1_ch_body_added_mass_1a0b8691fcdfa1de9658219c4a47aa7017" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a0b8691fcdfa1de9658219c4a47aa7017" kindref="member">ChBodyAddedMass::IntFromDescriptor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_v,<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChStateDelta&amp;<sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off_L,<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChVectorDynamic&lt;&gt;&amp;<sp/><ref refid="_headers_8h_1a499d78bdc2c754c7a4cf8d39ed245e9f" kindref="member">L</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>.PasteMatrix(this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb(),<sp/>off_v,<sp/>0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classchrono_1_1_ch_body_added_mass_1a0025a4f168b01c98e06ac64331f18082" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a0025a4f168b01c98e06ac64331f18082" kindref="member">ChBodyAddedMass::InjectVariables</ref>(ChSystemDescriptor&amp;<sp/>mdescriptor)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.SetDisabled(!this-&gt;IsActive());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>mdescriptor.InsertVariables(&amp;this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classchrono_1_1_ch_body_added_mass_1aaf3ff4c1a7735074cec691fde0d6a87b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1aaf3ff4c1a7735074cec691fde0d6a87b" kindref="member">ChBodyAddedMass::VariablesFbReset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_fb().FillElem(0.0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classchrono_1_1_ch_body_added_mass_1a255e3f972cf76fadcf68effcb69b5676" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a255e3f972cf76fadcf68effcb69b5676" kindref="member">ChBodyAddedMass::VariablesFbLoadForces</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>applied<sp/>forces<sp/>to<sp/>&apos;fb&apos;<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_fb().PasteSumVector(Xforce<sp/>*<sp/>factor,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>applied<sp/>torques<sp/>to<sp/>&apos;fb&apos;<sp/>vector,<sp/>including<sp/>gyroscopic<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;GetNoGyroTorque())</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_fb().PasteSumVector((Xtorque)*factor,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_fb().PasteSumVector((Xtorque<sp/>-<sp/>gyro)<sp/>*<sp/>factor,<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classchrono_1_1_ch_body_added_mass_1a2bc5cfb833abab5bdc7c1204d6231c62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a2bc5cfb833abab5bdc7c1204d6231c62" kindref="member">ChBodyAddedMass::VariablesFbIncrementMq</ref>()<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.<ref refid="classchrono_1_1_ch_variables_body_added_mass_1aa230ae3d8b2821a86757f227c6cfc7b0" kindref="member">Compute_inc_Mb_v</ref>(this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_fb(),<sp/>this-&gt;variables.Get_qb());</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classchrono_1_1_ch_body_added_mass_1a9ac1b48fa93f4c54dc7ea5d2638f33e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a9ac1b48fa93f4c54dc7ea5d2638f33e2" kindref="member">ChBodyAddedMass::VariablesQbLoadSpeed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>current<sp/>speed<sp/>in<sp/>&apos;qb&apos;,<sp/>it<sp/>can<sp/>be<sp/>used<sp/>by<sp/>the<sp/>solver<sp/>when<sp/>working<sp/>in<sp/>incremental<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb().PasteVector(GetCoord_dt().<ref refid="test_f_m_mand_f_s_w_8cpp_1af2d8f5c7beb781a847dc0f33fbdca44b" kindref="member">pos</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb().PasteVector(GetWvel_loc(),<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classchrono_1_1_ch_body_added_mass_1a411c363975eade48316927a33b26528f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a411c363975eade48316927a33b26528f" kindref="member">ChBodyAddedMass::VariablesQbSetSpeed</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ChCoordsys&lt;&gt;<sp/>old_coord_dt<sp/>=<sp/>this-&gt;GetCoord_dt();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>&apos;qb&apos;<sp/>vector,<sp/>sets<sp/>body<sp/>speed,<sp/>and<sp/>updates<sp/>auxiliary<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetPos_dt(this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb().ClipVector(0,<sp/>0));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetWvel_loc(this-&gt;<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb().ClipVector(3,<sp/>0));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>limits<sp/>(if<sp/>in<sp/>speed<sp/>clamping<sp/>mode)<sp/>to<sp/>speeds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ClampSpeed();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>auxiliary<sp/>gyroscopic<sp/>forces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>ComputeGyro();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>accel.<sp/>by<sp/>BDF<sp/>(approximate<sp/>by<sp/>differentiation);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetPos_dtdt((this-&gt;GetCoord_dt().<ref refid="test_f_m_mand_f_s_w_8cpp_1af2d8f5c7beb781a847dc0f33fbdca44b" kindref="member">pos</ref><sp/>-<sp/>old_coord_dt.pos)<sp/>/<sp/>step);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetRot_dtdt((this-&gt;GetCoord_dt().rot<sp/>-<sp/>old_coord_dt.rot)<sp/>/<sp/>step);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classchrono_1_1_ch_body_added_mass_1aedf137bf3351a163a50cc602dae4e267" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1aedf137bf3351a163a50cc602dae4e267" kindref="member">ChBodyAddedMass::VariablesQbIncrementPosition</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt_step)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;IsActive())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updates<sp/>position<sp/>with<sp/>incremental<sp/>action<sp/>of<sp/>speed<sp/>contained<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;qb&apos;<sp/>vector:<sp/><sp/>pos&apos;<sp/>=<sp/>pos<sp/>+<sp/>dt<sp/>*<sp/>speed<sp/><sp/><sp/>,<sp/>like<sp/>in<sp/>an<sp/>Eulero<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ChVector&lt;&gt;<sp/>newspeed<sp/>=<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb().ClipVector(0,<sp/>0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ChVector&lt;&gt;<sp/>newwel<sp/>=<sp/><ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.Get_qb().ClipVector(3,<sp/>0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ADVANCE<sp/>POSITION:<sp/>pos&apos;<sp/>=<sp/>pos<sp/>+<sp/>dt<sp/>*<sp/>vel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetPos(this-&gt;GetPos()<sp/>+<sp/>newspeed<sp/>*<sp/>dt_step);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ADVANCE<sp/>ROTATION:<sp/>rot&apos;<sp/>=<sp/>[dt*wwel]%rot<sp/><sp/>(use<sp/>quaternion<sp/>for<sp/>delta<sp/>rotation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>ChQuaternion&lt;&gt;<sp/>mdeltarot;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ChQuaternion&lt;&gt;<sp/>moldrot<sp/>=<sp/>this-&gt;GetRot();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ChVector&lt;&gt;<sp/>newwel_abs<sp/>=<sp/>Amatrix<sp/>*<sp/>newwel;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mangle<sp/>=<sp/>newwel_abs.Length()<sp/>*<sp/>dt_step;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>newwel_abs.Normalize();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>mdeltarot.Q_from_AngAxis(mangle,<sp/>newwel_abs);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ChQuaternion&lt;&gt;<sp/>mnewrot<sp/>=<sp/>mdeltarot<sp/>%<sp/>moldrot;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetRot(mnewrot);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175" refid="classchrono_1_1_ch_body_added_mass_1adffba2c2dd0b3d562cb2ed29e877b1d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1adffba2c2dd0b3d562cb2ed29e877b1d7" kindref="member">ChBodyAddedMass::IntLoadResidual_F</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off,<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>R<sp/>residual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChVectorDynamic&lt;&gt;&amp;<sp/><ref refid="_headers_8h_1ac8e838e6f10957014cfbeb426045ceea" kindref="member">R</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>result:<sp/>the<sp/>R<sp/>residual,<sp/>R<sp/>+=<sp/>c*F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>scaling<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>applied<sp/>forces<sp/>to<sp/>&apos;fb&apos;<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1ac8e838e6f10957014cfbeb426045ceea" kindref="member">R</ref>.PasteSumVector(Xforce<sp/>*<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>,<sp/>off,<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>applied<sp/>torques<sp/>to<sp/>&apos;fb&apos;<sp/>vector,<sp/>including<sp/>gyroscopic<sp/>torque</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;GetNoGyroTorque())</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1ac8e838e6f10957014cfbeb426045ceea" kindref="member">R</ref>.PasteSumVector((Xtorque)*<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>,<sp/>off<sp/>+<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1ac8e838e6f10957014cfbeb426045ceea" kindref="member">R</ref>.PasteSumVector((Xtorque<sp/>-<sp/>gyro)<sp/>*<sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>,<sp/>off<sp/>+<sp/>3,<sp/>0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classchrono_1_1_ch_body_added_mass_1a2e6430f29889de1f73dfb7cc41b9c8fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass_1a2e6430f29889de1f73dfb7cc41b9c8fb" kindref="member">ChBodyAddedMass::IntLoadResidual_Mv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>R<sp/>residual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChVectorDynamic&lt;&gt;&amp;<sp/><ref refid="_headers_8h_1ac8e838e6f10957014cfbeb426045ceea" kindref="member">R</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>result:<sp/>the<sp/>R<sp/>residual,<sp/>R<sp/>+=<sp/>c*M*v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChVectorDynamic&lt;&gt;&amp;<sp/><ref refid="jf_8h_1a903054ae14c61b1d440291818185c51c" kindref="member">w</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>w<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>scaling<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>ChMatrixDynamic&lt;&gt;<sp/>ww<sp/>=<sp/>ChMatrixDynamic&lt;&gt;(6,<sp/>1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ww.SetElement(i,<sp/>0,<sp/><ref refid="jf_8h_1a903054ae14c61b1d440291818185c51c" kindref="member">w</ref>(off+i));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="_headers_8h_1ac8e838e6f10957014cfbeb426045ceea" kindref="member">R</ref>.PasteSumMatrix(<ref refid="classchrono_1_1_ch_body_added_mass_1af7486941756f0f71d7e6934d0453354a" kindref="member">variables</ref>.<ref refid="classchrono_1_1_ch_variables_body_added_mass_1a0eb286374f5cc6f5df385f2068eed414" kindref="member">GetMfullmass</ref>()*ww*<ref refid="_headers_8h_1aa0903c8c48f55ad539ee4e47f2d020ba" kindref="member">c</ref>,<sp/>off,<sp/>0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>chrono</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="_ch_body_added_mass_8h_1a3088e8415772ee855c07453beda528c2" refkind="member"><highlight class="normal"><ref refid="classchrono_1_1_ch_body_added_mass" kindref="compound">chrono::ChBodyAddedMass</ref><sp/>*<sp/><ref refid="_ch_body_added_mass_8cpp_1a3088e8415772ee855c07453beda528c2" kindref="member">newChBodyAddedMass</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classchrono_1_1_ch_body_added_mass" kindref="compound">chrono::ChBodyAddedMass</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/mbd/ChBodyAddedMass.cpp"/>
  </compounddef>
</doxygen>

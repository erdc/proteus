<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_domain_8cpp" kind="file" language="C++">
    <compoundname>Domain.cpp</compoundname>
    <includes refid="_domain_8h" local="yes">Domain.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cassert</includes>
    <incdepgraph>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>Domain.cpp</label>
        <link refid="_domain_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Domain.h</label>
        <link refid="_domain_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_domain_8h" kindref="compound">Domain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_d__base_1a0a6e52d303b6eebaec25bc94e01a33cf" refkind="member"><highlight class="normal"><ref refid="class_d__base_1a0a6e52d303b6eebaec25bc94e01a33cf" kindref="member">D_base::D_base</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>dim(dimIn),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>name(nameIn),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>units(unitsIn)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_rectangular_domain_1ae4b47547080286f33fd25ffdf18329e3" refkind="member"><highlight class="normal"><ref refid="class_rectangular_domain_1ae4b47547080286f33fd25ffdf18329e3" kindref="member">RectangularDomain::RectangularDomain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(dimIn,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_rectangular_domain_1afa332f3db2a0cafc07b13c8ba8f98345" refkind="member"><highlight class="normal"><ref refid="class_rectangular_domain_1ae4b47547080286f33fd25ffdf18329e3" kindref="member">RectangularDomain::RectangularDomain</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lx,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(1,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(x0);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(Lx);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_rectangular_domain_1a6230598de79a37ac7cc9638fed46103e" refkind="member"><highlight class="normal"><ref refid="class_rectangular_domain_1ae4b47547080286f33fd25ffdf18329e3" kindref="member">RectangularDomain::RectangularDomain</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lx<sp/>,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ly,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(2,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(x0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(y0);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(Lx);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(Ly);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="class_rectangular_domain_1af0898354705b85ead4d3c6a7b0062c49" refkind="member"><highlight class="normal"><ref refid="class_rectangular_domain_1ae4b47547080286f33fd25ffdf18329e3" kindref="member">RectangularDomain::RectangularDomain</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ly,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Lz,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(3,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(x0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(y0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(z0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(Lx);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(Ly);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(Lz);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_rectangular_domain_1a4c29ada05ce8c5168e5f3261cf0ad6d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_rectangular_domain_1a4c29ada05ce8c5168e5f3261cf0ad6d0" kindref="member">RectangularDomain::writePoly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>ofstream<sp/>outfile(filename);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_d__base_1a630e203b1b2e5a330787cee20e1f75a5" kindref="member">dim</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#vertices&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>2<sp/>0<sp/>0<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#segments&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>1<sp/>2<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2<sp/>2<sp/>3<sp/>2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;3<sp/>3<sp/>4<sp/>3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>4<sp/>1<sp/>4&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#holes&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#regions&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0])/2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1])/2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.close();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_d__base_1a630e203b1b2e5a330787cee20e1f75a5" kindref="member">dim</ref><sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#vertices&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;8<sp/>3<sp/>0<sp/>0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>4&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;5&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>5&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;6&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>6&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;7&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>7&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;8&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>8&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#facets&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;6<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>1<sp/>2<sp/>3<sp/>4\t\t#bottom&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>1<sp/>5<sp/>8<sp/>4\t\t#front&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>1<sp/>5<sp/>6<sp/>2\t\t#left&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>4&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>5<sp/>6<sp/>7<sp/>8\t\t#top&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>5&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>4<sp/>8<sp/>7<sp/>3\t\t#right&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>6&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4<sp/>3<sp/>7<sp/>6<sp/>2\t\t#back&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#holes&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#regions&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0])/2.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1])/2.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2])/2.9<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.close();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_rectangular_domain_1a6a74661d619ed83d9a31bddb2276f61a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_rectangular_domain_1a6a74661d619ed83d9a31bddb2276f61a" kindref="member">RectangularDomain::writeAsymptote</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>outfile(filename);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_d__base_1a630e203b1b2e5a330787cee20e1f75a5" kindref="member">dim</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//interval1D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unitsize(4.0<sp/>inches/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;size(6<sp/>inches);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>L=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>offset=.0125L;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>x=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>str=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>graph;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>palette;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pen[]<sp/>allPens=Wheel();&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[3];&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for(int<sp/>i=0;i&lt;<sp/>3;++i)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/3);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>myPens[i]<sp/>=<sp/>allPens[iPen];&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw((x,0)--(x+L,0)^^(x,offset)--(x+L,offset),myPens[0]);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw((x,0)--(x,offset),myPens[1]);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw((x+L,0)--(x+L,offset),myPens[2]);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(str,(x,-offset)--(x+L,-offset),black,Bars,Arrows,PenMargins)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>endl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_d__base_1a630e203b1b2e5a330787cee20e1f75a5" kindref="member">dim</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rectangle<sp/>2D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>math;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>graph;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unitsize(4.0<sp/>inches<sp/>/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;size(6<sp/>inches);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Lx<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Ly<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>offset<sp/>=<sp/>0.0125Lx;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>x<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>strx=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>stry=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>graph;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>palette;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pen[]<sp/>allPens=Wheel();&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[4];&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for(int<sp/>i=0;i&lt;<sp/>4;++i)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/4);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>myPens[i]<sp/>=<sp/>allPens[iPen];&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw((x,y)--(x+Lx,y),myPens[0]);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw((x,y+Ly)--(x+Lx,y+Ly),myPens[1]);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw((x,y)--(x,y+Ly),myPens[2]);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw((x+Lx,y)--(x+Lx,y+Ly),myPens[3]);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(strx,(x,y-offset)--(x+Lx,y-offset),S,black,Bars,Arrows,PenMargins);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(stry,(x-offset,y)--(x-offset,y+Ly),W,black,Bars,Arrows,PenMargins);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>three;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;currentlight=adobe;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;currentprojection=perspective(-2,-2,1,up=Z,target=O,showtarget=true,autoadjust=true,center=false);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unitsize(4.0<sp/>inches/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;size(6<sp/>inches);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Lx=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Ly=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Lz=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>offset=.0125Lx;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>x=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>y=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>z=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p0=(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p1=(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p2=(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p3=(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p4=(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p5=(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]+<ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[2]+<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p6=(x+Lx,y+Ly,z+Lz);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p7=(x+Lx,y,z+Lz);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>strx=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>stry=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>strz=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[2]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(surface(p0--p1--p2--p3--cycle),red);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(surface(p4--p5--p6--p7--cycle),blue);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(surface(p0--p1--p5--p4--cycle),green);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(surface(p1--p2--p6--p5--cycle),orange);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(surface(p2--p3--p7--p6--cycle),purple);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(surface(p3--p0--p4--p7--cycle),yellow);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(strx,(x,y-offset,z-offset)--(x+Lx,y-offset,z-offset),-(Y+Z),black,Bars3(Z),Arrows3);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(stry,(x-offset,y,z-offset)--(x-offset,y+Ly,z-offset),-(X+Z),black,Bars3(Z),Arrows3);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(strz,(x-offset,y-offset,z)--(x-offset,y-offset,z+Lz),-(X+Z),black,Bars3(Z),Arrows3);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;shipout();&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile.close();</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_planar_straight_line_graph_domain_1a6155b1ed2eab340d14cc14aa8736f325" refkind="member"><highlight class="normal"><ref refid="class_planar_straight_line_graph_domain_1a6155b1ed2eab340d14cc14aa8736f325" kindref="member">PlanarStraightLineGraphDomain::PlanarStraightLineGraphDomain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(dimIn,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_planar_straight_line_graph_domain_1a188258f8ef0030339a3f9392f5167b9c" refkind="member"><highlight class="normal"><ref refid="class_planar_straight_line_graph_domain_1a6155b1ed2eab340d14cc14aa8736f325" kindref="member">PlanarStraightLineGraphDomain::PlanarStraightLineGraphDomain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref>&lt;vector&lt;double&gt;<sp/>&gt;&amp;<sp/>verticesIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref>&lt;<sp/>vector&lt;int&gt;<sp/>&gt;&amp;<sp/>segmentsIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref>&lt;<sp/>vector&lt;double&gt;<sp/>&gt;&amp;<sp/>holesIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>regionsIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>vertexFlagsIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>segmentFlagsIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>vertices(verticesIn),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>segments(segmentsIn),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>holes(holesIn),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>regions(regionsIn),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>vertexFlags(vertexFlagsIn),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>segmentFlags(segmentFlagsIn),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(2,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_planar_straight_line_graph_domain_1a5c5a16298a196fd0a9f6bbd8f5292cb0" refkind="member"><highlight class="normal"><ref refid="class_planar_straight_line_graph_domain_1a5c5a16298a196fd0a9f6bbd8f5292cb0" kindref="member">PlanarStraightLineGraphDomain::~PlanarStraightLineGraphDomain</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="227" refid="class_planar_straight_line_graph_domain_1ad6ade6af7f073be5ea77c3829053d400" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_planar_straight_line_graph_domain_1ad6ade6af7f073be5ea77c3829053d400" kindref="member">PlanarStraightLineGraphDomain::writePoly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>ofstream<sp/>outfile(filename);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!filename)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_planar_straight_line_graph_domain_1aebe274fabccb24a19f4b4c90ea914a6c" kindref="member">vertexFlags</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1aa1dcbebc9a9b151dd3c6a64f1f664bd6" kindref="member">hasVertexFlags</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1aa1dcbebc9a9b151dd3c6a64f1f664bd6" kindref="member">hasVertexFlags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_planar_straight_line_graph_domain_1a33bad7c15a20c0a1b01aebd15436e846" kindref="member">segmentFlags</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1aee432b3fac8522813a5133a2c9468f5a" kindref="member">hasSegmentFlags</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1aee432b3fac8522813a5133a2c9468f5a" kindref="member">hasSegmentFlags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1aa1dcbebc9a9b151dd3c6a64f1f664bd6" kindref="member">hasVertexFlags</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1aa6b4ed856986381cb740e25d732b913c" kindref="member">vN</ref>[i*3<sp/>+<sp/>j]<sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>[i][j];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1aa6b4ed856986381cb740e25d732b913c" kindref="member">vN</ref>.size()+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[1]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//import<sp/>pdb;<sp/>pdb.set_trace()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(vertexFlags.size()<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>vertexFlags[vN]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//write<sp/>the<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>segments.size()<sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>hasSegmentFlags<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>segments.size();i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sN[i*3+j]<sp/>=<sp/>segments[i][j];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>sN.size()+1<sp/>&lt;&lt;&quot;\t&quot;<sp/>&lt;&lt;<sp/>s[0]+1<sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>s[1]+1<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(segmentFlags.size()<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>segmentFlags[sN]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(holes.size()<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>holes.size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>holes.size();<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hN[i*3<sp/>+<sp/>j]<sp/>=<sp/>holes[i][j];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>hN.size()+1<sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>h[0]<sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>h[1]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>&quot;0&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(regions.size()<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>regions.size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>regions.size();<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rN[i*3]<sp/>=<sp/>regions[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>rN.size()+1<sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>r[0]<sp/>&lt;&lt;<sp/>&quot;\t&quot;<sp/>&lt;&lt;<sp/>r[1]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(regionFlags.size()<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>regionFlags[rN]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>&quot;0&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile.close();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>exists,<sp/>not<sp/>writing<sp/>polyfile:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="class_planar_straight_line_graph_domain_1a336dd9b54fd9fcf4f6b67ec104f7c735" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_planar_straight_line_graph_domain_1a336dd9b54fd9fcf4f6b67ec104f7c735" kindref="member">PlanarStraightLineGraphDomain::writeAsymptote</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>ofstream<sp/>outfile(filename);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unitsize(4.0<sp/>inches/<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;size(6<sp/>inches);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Lx=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Ly=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>offset=0.0125Lx;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>x=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>y=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>strx=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>stry=\&quot;$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\mbox{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d__base_1a21b5f51f4c8d2a66cef73931474a95e3" kindref="member">units</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(strx,(x,y-offset)--(x+Lx,y-offset),S,black,Bars,Arrows,PenMargins);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(stry,(x-offset,y)--(x-offset,y+Ly),W,black,Bars,Arrows,PenMargins);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>graph;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>palette;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pen[]<sp/>allPens=wheel();&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1a33bad7c15a20c0a1b01aebd15436e846" kindref="member">segmentFlags</ref>.size()<sp/>+<sp/>1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;];&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;for(int<sp/>i=<sp/>0;<sp/>i&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1a33bad7c15a20c0a1b01aebd15436e846" kindref="member">segmentFlags</ref>.size()<sp/>+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;++i)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>iPen<sp/>=<sp/>round(i*allPens.length//&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1a33bad7c15a20c0a1b01aebd15436e846" kindref="member">segmentFlags</ref>.size()<sp/>+<sp/>1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;myPens[i]<sp/>=<sp/>allPens[iPen];&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;shipout();&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<ref refid="class_planar_straight_line_graph_domain_1aca4121f4cdbed19270354a0d4927c0fe" kindref="member">segments</ref>.size();i++)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a0908c528d6e40a2454c564dd43919b68" kindref="member">s</ref>[i*3<sp/>+<sp/>j]<sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1aca4121f4cdbed19270354a0d4927c0fe" kindref="member">segments</ref>[i][j];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1a33bad7c15a20c0a1b01aebd15436e846" kindref="member">segmentFlags</ref>.size();i++)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a0bd0802dcefe8718e1557c4976fb733d" kindref="member">sFlags</ref>[i*3]<sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1a33bad7c15a20c0a1b01aebd15436e846" kindref="member">segmentFlags</ref>[i];<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>outfile<sp/>&lt;&lt;<sp/>&quot;draw((&quot;<sp/>&lt;&lt;<sp/>vertices[s[0]]<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>vertices[s[1]]<sp/>&lt;&lt;<sp/>&quot;)--(&quot;<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//for<sp/>loop<sp/>in<sp/>python<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//#now<sp/>loop<sp/>over<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>for<sp/>s,sFlag<sp/>in<sp/>zip(self.segments,self.segmentFlags):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/>fileString+=&quot;draw((%f,%f)--(%f,%f),myPens[%d]);\n&quot;<sp/>%<sp/>tuple(self.vertices[s[0]]+self.vertices[s[1]]+[sFlag])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>outfile.close();</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="class_planar_straight_line_graph_domain_1a1eb4881579d2723f8721ad6cd67e00f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_planar_straight_line_graph_domain_1a1eb4881579d2723f8721ad6cd67e00f9" kindref="member">PlanarStraightLineGraphDomain::getSegmentPartition</ref>(vector&lt;int&gt;&amp;<sp/><ref refid="_headers_8h_1a7cbe4dbecea8b00e5845e24579f6036d" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/>sMin<sp/>=<sp/>segmentFlags[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>sMax<sp/>=<sp/>segmentFlags[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>segmentFlags.size();<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[i]<sp/>=<sp/>segmentFlags[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(s<sp/>&gt;<sp/>sMax)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>sMax<sp/>=<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(s<sp/>&lt;<sp/>sMin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>sMin<sp/>=<sp/>s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="class_planar_straight_line_graph_domain_1a67b34cbe3715956e7e82c28c25f61744" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_planar_straight_line_graph_domain_1a67b34cbe3715956e7e82c28c25f61744" kindref="member">PlanarStraightLineGraphDomain::getBoundingBox</ref>(vector&lt;double&gt;&amp;<sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a71735fcd98ec7475fcb23ecc2726054c" kindref="member">xMax</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>[0][0];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a1ac3888a27011c8ae299a4115c2a1eb0" kindref="member">xMin</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>[0][0];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1adcbf04db6caf9dc70f7087bc9ae9aa91" kindref="member">yMax</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>[0][1];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a2b1356bcb0aaaeb872f7b380d247c8aa" kindref="member">yMin</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>[0][1];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=0;<sp/>i<sp/>&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>.size();<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;3;<sp/>j++)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[i*3<sp/>+<sp/>j]<sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1afa1ab77c5903b908184509374ff994e7" kindref="member">vertices</ref>[i][j];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[0]<sp/>&gt;<sp/><ref refid="class_planar_straight_line_graph_domain_1a71735fcd98ec7475fcb23ecc2726054c" kindref="member">xMax</ref>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a71735fcd98ec7475fcb23ecc2726054c" kindref="member">xMax</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[0];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[1]<sp/>&gt;<sp/><ref refid="class_planar_straight_line_graph_domain_1adcbf04db6caf9dc70f7087bc9ae9aa91" kindref="member">yMax</ref>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1adcbf04db6caf9dc70f7087bc9ae9aa91" kindref="member">yMax</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[1];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[0]<sp/>&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1a1ac3888a27011c8ae299a4115c2a1eb0" kindref="member">xMin</ref>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a1ac3888a27011c8ae299a4115c2a1eb0" kindref="member">xMin</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[0];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[1]<sp/>&lt;<sp/><ref refid="class_planar_straight_line_graph_domain_1a2b1356bcb0aaaeb872f7b380d247c8aa" kindref="member">yMin</ref>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_planar_straight_line_graph_domain_1a2b1356bcb0aaaeb872f7b380d247c8aa" kindref="member">yMin</ref><sp/>=<sp/><ref refid="class_planar_straight_line_graph_domain_1a5d99bfaf32a7755f5ef94d64b705799b" kindref="member">v</ref>[1];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(<ref refid="class_planar_straight_line_graph_domain_1a1ac3888a27011c8ae299a4115c2a1eb0" kindref="member">xMin</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3b73f494635dabeb3e85355d24f8bd1d" kindref="member">x</ref>.push_back(<ref refid="class_planar_straight_line_graph_domain_1a2b1356bcb0aaaeb872f7b380d247c8aa" kindref="member">yMin</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(<ref refid="class_planar_straight_line_graph_domain_1a71735fcd98ec7475fcb23ecc2726054c" kindref="member">xMax</ref>-<ref refid="class_planar_straight_line_graph_domain_1a1ac3888a27011c8ae299a4115c2a1eb0" kindref="member">xMin</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="class_d__base_1a3a982a9943f929ffff437be69fcdebd7" kindref="member">L</ref>.push_back(<ref refid="class_planar_straight_line_graph_domain_1adcbf04db6caf9dc70f7087bc9ae9aa91" kindref="member">yMax</ref>-<ref refid="class_planar_straight_line_graph_domain_1a2b1356bcb0aaaeb872f7b380d247c8aa" kindref="member">yMin</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="class_planar_straight_line_graph_domain_1a2a686d32ff72284faf0f9afc63d1356e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_planar_straight_line_graph_domain_1a2a686d32ff72284faf0f9afc63d1356e" kindref="member">PlanarStraightLineGraphDomain::readPoly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ifstream<sp/>infile;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>infile.open(filename);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>while(!infile)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>infile.close();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>infile.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Error:<sp/>Invalid<sp/>filename.<sp/>Please<sp/>re-enter:<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cin<sp/>&gt;&gt;<sp/>filename;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>infile.open(filename);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>while(firstLine.length()<sp/>==<sp/>0<sp/>||<sp/>firstLine[0][0]<sp/>==<sp/>&quot;#&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>infile<sp/>&gt;&gt;<sp/>nVertices<sp/>&gt;&gt;<sp/>dim<sp/>&gt;&gt;<sp/>nVertexAttributes<sp/>&gt;&gt;<sp/>hasVertexFlags;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>infile.close();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//Constructors<sp/>for<sp/>TriangulatedSurfaceDomain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TriangulatedSurfaceDomain::TriangulatedSurfaceDomain()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//vertices<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>triangles<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>nodes<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>name<sp/>=<sp/>&quot;DefaultTriangulatedSurfaceDomain&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>units<sp/>=<sp/>&quot;m&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>dim<sp/>=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TriangulatedSurfaceDomain::~TriangulatedSurfaceDomain()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>TriangulatedSurfaceDomain::writeAsymptote(const<sp/>char*<sp/>filename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ofstream<sp/>outfile(filename);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//PiecewiseLinearComplexDomain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="class_piecewise_linear_complex_domain_1a110b3a9f85eb6921102a47d9155a10c8" refkind="member"><highlight class="normal"><ref refid="class_piecewise_linear_complex_domain_1a110b3a9f85eb6921102a47d9155a10c8" kindref="member">PiecewiseLinearComplexDomain::PiecewiseLinearComplexDomain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(dimIn,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="class_piecewise_linear_complex_domain_1a24e6fd3b1c07c01298fe8edcd553b3f1" refkind="member"><highlight class="normal"><ref refid="class_piecewise_linear_complex_domain_1a110b3a9f85eb6921102a47d9155a10c8" kindref="member">PiecewiseLinearComplexDomain::PiecewiseLinearComplexDomain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref>&lt;<ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref><sp/>&lt;<sp/>vector<sp/>&lt;double&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/>verticesIn,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref>&lt;<sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref><sp/>&lt;<sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref><sp/>&lt;<sp/>vector<sp/>&lt;int&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;&amp;<sp/>facetsIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">vector</ref>&lt;vector&lt;double&gt;<sp/>&gt;&amp;<sp/>holesIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>regionsIn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>vertexFlagsIn,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector<sp/>&lt;int&gt;&amp;<sp/>facetFlagsIn,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nameIn<sp/>=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Domain&quot;</highlight><highlight class="normal">),</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unitsIn<sp/>=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>vertices(verticesIn),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>facets(facetsIn),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>holes(holesIn),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>regions(regionsIn),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>vertexFlags(vertexFlagsIn),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>facetFlags(facetFlagsIn),</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="class_d__base" kindref="compound">D_base</ref>(3,nameIn,unitsIn)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="450" refid="class_piecewise_linear_complex_domain_1ac8b366c480bc3e2a288887ea1f1c898d" refkind="member"><highlight class="normal"><ref refid="class_piecewise_linear_complex_domain_1ac8b366c480bc3e2a288887ea1f1c898d" kindref="member">PiecewiseLinearComplexDomain::~PiecewiseLinearComplexDomain</ref>()</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="class_piecewise_linear_complex_domain_1a9a63082fbb5a9e994a3c5a29d1b66f23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_piecewise_linear_complex_domain_1a9a63082fbb5a9e994a3c5a29d1b66f23" kindref="member">PiecewiseLinearComplexDomain::writeAsymptote</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>ofstream<sp/>outfile(filename);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>three;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;currentlight=adobe;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;currentprojection=perspective(-2,-2,1,up=Z,target=(%(xc)f,%(yc)f,%(zc)f),showtarget=true,autoadjust=true,center=false);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unitsize(4.0<sp/>inches/%(Lx)f);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;size(6<sp/>inches);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Lx=%(Lx)f;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Ly=%(Ly)f;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>Lz=%(Lz)f;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>offset=.0125Lx;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>x=%(x)f;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>y=%(y)f;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;real<sp/>z=%(z)f;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p0=(x,y,z);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p1=(x,y+Ly,z);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p2=(x+Lx,y+Ly,z);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p3=(x+Lx,y,z);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p4=(x,y,z+Lz);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p5=(x,y+Ly,z+Lz);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p6=(x+Lx,y+Ly,z+Lz);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;triple<sp/>p7=(x+Lx,y,z+Lz);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>strx=\&quot;$%(Lx)2.2f\\mbox{%(units)s}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>stry=\&quot;$%(Ly)2.2f\\mbox{%(units)s}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;string<sp/>strz=\&quot;$%(Lz)2.2f\\mbox{%(units)s}$\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(strx,(x,y-offset,z-offset)--(x+Lx,y-offset,z-offset),-(Y+Z),black,Bars3(Z),Arrows3);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(stry,(x-offset,y,z-offset)--(x-offset,y+Ly,z-offset),-(X+Z),black,Bars3(Z),Arrows3);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;draw(strz,(x-offset,y-offset,z)--(x-offset,y-offset,z+Lz),-(X+Y),black,Bars3(X),Arrows3);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>facets.size();<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>vertexList.size();<sp/>j++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>&quot;draw(surface((&quot;<sp/>&lt;&lt;<sp/>vertices[vertexList[0]]<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><sp/>vertices[vertexList[1]]<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/><sp/>vertices[vertexList[2]]<sp/>&lt;&lt;<sp/>&quot;))&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(int<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>vN;<sp/>k++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//outfile<sp/>&lt;&lt;<sp/>&quot;(--(&quot;<sp/>&lt;&lt;<sp/>vertices[vN]<sp/>&lt;&lt;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//Python<sp/>Loop<sp/>found<sp/>in<sp/>Domain.py<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{&apos;Lx&apos;:self.L[0],&apos;Ly&apos;:self.L[1],&apos;Lz&apos;:self.L[2],&apos;x&apos;:self.x[0],&apos;y&apos;:self.x[1],&apos;z&apos;:self.x[2],&apos;units&apos;:self.units,</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&apos;xc&apos;:(self.x[0]+0.5*self.L[0]),</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&apos;yc&apos;:(self.x[1]+0.5*self.L[1]),</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&apos;zc&apos;:(self.x[2]+0.5*self.L[2])}</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>f.write(fileString)</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>facet<sp/>in<sp/>self.facets:</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>vertexList<sp/>in<sp/>facet:</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>f.write(&quot;draw(surface((%f,%f,%f)&quot;<sp/>%<sp/>tuple(self.vertices[vertexList[0]]))</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>vN<sp/>in<sp/>vertexList[1:]:</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>f.write(&quot;--(%f,%f,%f)&quot;<sp/>%<sp/>tuple(self.vertices[vN]))</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>f.write(&quot;--cycle));\n&quot;)</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>outfile.close();</highlight></codeline>
<codeline lineno="507"><highlight class="comment"></highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>PiecewiseLinearComplex::getBoundingBox(vector&lt;double&gt;<sp/>&amp;<sp/>v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="class_piecewise_linear_complex_domain_1a482100cccb2fbbd2b20627ea903240ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_piecewise_linear_complex_domain_1a482100cccb2fbbd2b20627ea903240ac" kindref="member">PiecewiseLinearComplexDomain::writePoly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!filename)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ofstream<sp/>outfile;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_piecewise_linear_complex_domain_1abe647a6f33bbe4f24fac4f55c694559d" kindref="member">vertexFlags</ref>.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1a3448db1e3a5bfd45863ac870c97def15" kindref="member">hasVertexFlags</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1a3448db1e3a5bfd45863ac870c97def15" kindref="member">hasVertexFlags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_piecewise_linear_complex_domain_1ae304c12c229d9226ddee04c88a8594c8" kindref="member">facetFlags</ref><sp/>&gt;1)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1ae2fd5f04b9b4cd1c0cc65bb1bf4c341f" kindref="member">hasFacetFlags</ref>.size()<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1ae2fd5f04b9b4cd1c0cc65bb1bf4c341f" kindref="member">hasFacetFlags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1af144e683d2e4a1b035dd00be1132f00a" kindref="member">vertices</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>0<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1a3448db1e3a5bfd45863ac870c97def15" kindref="member">hasVertexFlags</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1af144e683d2e4a1b035dd00be1132f00a" kindref="member">vertices</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1ae64b365a952bb4fc71c59574646f2c8a" kindref="member">vN</ref>[i*3<sp/>+<sp/>j]<sp/>=<sp/><ref refid="class_piecewise_linear_complex_domain_1af144e683d2e4a1b035dd00be1132f00a" kindref="member">vertices</ref>[i][j];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1ae64b365a952bb4fc71c59574646f2c8a" kindref="member">vN</ref>.size()+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1a1b84412c47183b461e9894d7b5be2e04" kindref="member">v</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1a1b84412c47183b461e9894d7b5be2e04" kindref="member">v</ref>[1]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_piecewise_linear_complex_domain_1abe647a6f33bbe4f24fac4f55c694559d" kindref="member">vertexFlags</ref>.size()<sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1abe647a6f33bbe4f24fac4f55c694559d" kindref="member">vertexFlags</ref>[<ref refid="class_piecewise_linear_complex_domain_1ae64b365a952bb4fc71c59574646f2c8a" kindref="member">vN</ref>]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>facets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1acfff7c9b64b08a4f8bf7022e7385877f" kindref="member">facets</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1ae2fd5f04b9b4cd1c0cc65bb1bf4c341f" kindref="member">hasFacetFlags</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1acfff7c9b64b08a4f8bf7022e7385877f" kindref="member">facets</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1a76e06620b0b43c720da6434e1da58119" kindref="member">fN</ref>[i*3+j]<sp/>=<sp/><ref refid="class_piecewise_linear_complex_domain_1acfff7c9b64b08a4f8bf7022e7385877f" kindref="member">facets</ref>[i][j];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_piecewise_linear_complex_domain_1a28f697160ec723c3d432636f4c7d24b0" kindref="member">facetHoles</ref>.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFacetHoles<sp/>=<sp/><ref refid="class_piecewise_linear_complex_domain_1a28f697160ec723c3d432636f4c7d24b0" kindref="member">facetHoles</ref>[<ref refid="class_piecewise_linear_complex_domain_1a76e06620b0b43c720da6434e1da58119" kindref="member">fN</ref>].size();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFacetHoles<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_piecewise_linear_complex_domain_1ae2fd5f04b9b4cd1c0cc65bb1bf4c341f" kindref="member">hasFacetFlags</ref><sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1aad554b194fbe43c550254ef033e726fb" kindref="member">f</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nFacetHoles<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1ae304c12c229d9226ddee04c88a8594c8" kindref="member">facetFlags</ref>[<ref refid="class_piecewise_linear_complex_domain_1a76e06620b0b43c720da6434e1da58119" kindref="member">fN</ref>]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1a76e06620b0b43c720da6434e1da58119" kindref="member">fN</ref>.size()+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nFacetHoles<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1aad554b194fbe43c550254ef033e726fb" kindref="member">f</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_piecewise_linear_complex_domain_1aad554b194fbe43c550254ef033e726fb" kindref="member">f</ref><sp/>=<sp/>segmentList[i];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>segmentList.size()+1<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>segmentList.size();<sp/>j++)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentList<sp/>=<sp/><ref refid="class_piecewise_linear_complex_domain_1ae64b365a952bb4fc71c59574646f2c8a" kindref="member">vN</ref>[j];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1ae64b365a952bb4fc71c59574646f2c8a" kindref="member">vN</ref>+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_piecewise_linear_complex_domain_1a28f697160ec723c3d432636f4c7d24b0" kindref="member">facetHoles</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1a28f697160ec723c3d432636f4c7d24b0" kindref="member">facetHoles</ref>[<ref refid="class_piecewise_linear_complex_domain_1a76e06620b0b43c720da6434e1da58119" kindref="member">fN</ref>].size();<sp/>i++)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/><ref refid="class_piecewise_linear_complex_domain_1a28f697160ec723c3d432636f4c7d24b0" kindref="member">facetHoles</ref>[i];</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1a28f697160ec723c3d432636f4c7d24b0" kindref="member">facetHoles</ref>[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_piecewise_linear_complex_domain_1af2689fc32983e0720d9d939ed409b34e" kindref="member">holes</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1af2689fc32983e0720d9d939ed409b34e" kindref="member">holes</ref>.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_piecewise_linear_complex_domain_1af2689fc32983e0720d9d939ed409b34e" kindref="member">holes</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hN[i*3+j]<sp/>=<sp/><ref refid="class_piecewise_linear_complex_domain_1af2689fc32983e0720d9d939ed409b34e" kindref="member">holes</ref>[i][j];<sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>hN+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>h[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>h[1]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(regionFlags<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>regionFlags[rN]<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outfile.close();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>exits,<sp/>not<sp/>writing<sp/>polyfile:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>PiecewiseLinearComplex::readPoly(const<sp/>char*<sp/>filename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>/*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.polyfile<sp/>=<sp/>fileprefix+&quot;.poly&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.name=fileprefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(self.polyfile,&apos;r&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>firstLine=f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(firstLine)<sp/>==<sp/>0<sp/>or<sp/>firstLine[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>firstLine<sp/>=<sp/>f.readline()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nVertices<sp/>=<sp/>int(firstLine[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.dim<sp/>=<sp/>int(firstLine[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>assert(self.dim<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nVertexAttributes<sp/>=<sp/>int(firstLine[2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.vertexAttributes<sp/>=<sp/>[[]<sp/>for<sp/>j<sp/>in<sp/>range(nVertexAttributes)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>hasVertexFlag<sp/>=<sp/>bool(firstLine[3])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.vertices=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.base=None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>hasVertexFlag:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.vertexFlags=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(nVertices):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(line)<sp/>==<sp/>0<sp/>or<sp/>line[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>self.base<sp/>is<sp/>None:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.base<sp/>=<sp/>int(line[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.vertices.append([float(line[1]),float(line[2]),float(line[3])])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>j<sp/>in<sp/>range(nVertexAttributes):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.attributes[j].append(float(line[4+j]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>hasVertexFlag:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.vertexFlags.append(line[4+nVertexAttributes+1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>facetLine<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(facetLine)<sp/>==<sp/>0<sp/>or<sp/>facetLine[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>facetLine<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nFacets<sp/>=<sp/>int(facetLine[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>hasFacetFlag<sp/>=<sp/>bool(facetLine[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facets=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facetHoles=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>hasFacetFlag:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facetFlags=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(nFacets):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(line)<sp/>==<sp/>0<sp/>or<sp/>line[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facets.append([])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facetHoles.append([])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nPolygons<sp/>=<sp/>int(line[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nHoles<sp/>=<sp/>int(line[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>hasFacetFlag:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facetFlags.append(int(line[2]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>j<sp/>in<sp/>range(nPolygons):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(line)<sp/>==<sp/>0<sp/>or<sp/>line[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nSegments<sp/>=<sp/>int(line[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facets[-1].append([int(line[1+k])-self.base<sp/>for<sp/>k<sp/>in<sp/>range(nSegments)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>j<sp/>in<sp/>range(nHoles):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(line)<sp/>==<sp/>0<sp/>or<sp/>line[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.facetHoles[-1].append([float(line[0]),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>float(line[1]),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>float(line[2])])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>holeLine<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(holeLine)<sp/>==<sp/>0<sp/>or<sp/>holeLine[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>holeLine<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nHoles<sp/>=<sp/>int(holeLine[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.holes=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(nHoles):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/><sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>len(line)<sp/>==<sp/>0<sp/>or<sp/>line[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.holes.append([float(line[0]),float(line[1])])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>regionLine<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(regionLine)<sp/>==<sp/>0<sp/>or<sp/>regionLine[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>regionLine<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>nRegions<sp/>=<sp/>int(regionLine[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.regions=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.regionAttributes=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.areaConstraings=[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(nRegions):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/><sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>while<sp/>len(line)<sp/>==<sp/>0<sp/>or<sp/>line[0][0]<sp/>==<sp/>&apos;#&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.regions.append([float(line[1]),float(line[2]),float(line[3])])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>len(line)<sp/>&gt;<sp/>4:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.regionAttributes.append(int(line[4]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>len(line)<sp/>&gt;<sp/>5:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.areaConstraint.append(float(line[5]))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>self.getBoundingBox()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tridelat/PROTEUS/proteus2/proteus/Domain.cpp"/>
  </compounddef>
</doxygen>

# A type of -*- python -*- file
import numpy as np
cimport numpy as np
cdef extern from "subgridError.h":
    void ccalculateNumericalDiffusionResGrad "calculateNumericalDiffusionResGrad"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                int nSpace,
                                                double shockCapturingDiffusion,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* grad_u,
                                                double* numDiff)
    void ccalculateNumericalDiffusionResGradQuad "calculateNumericalDiffusionResGradQuad"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                int nSpace,
                                                double shockCapturingDiffusion,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* grad_u,
                                                double* numDiff)
    void ccalculateNumericalDiffusionEikonal "calculateNumericalDiffusionEikonal"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                double shockCapturingDiffusion,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* numDiff)
    void ccalculateNumericalDiffusionHJ "calculateNumericalDiffusionHJ"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                char shockCapturing,
                                                double shockCapturingDiffusion,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* mt,
                                                double* H,
                                                double* numDiff)
    void ccalculateNumericalDiffusion_A_1 "calculateNumericalDiffusion_A_1"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                int nSpace,
                                                double shockCapturingFactor,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* mt,
                                                double* df,
                                                double* numDiff)
    void ccalculateNumericalDiffusionResGradJuanes "calculateNumericalDiffusionResGradJuanes"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                int nSpace,
                                                double shockCapturingDiffusion,
                                                double uSC,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* grad_u,
                                                double* numDiff)
    void ccalculateNumericalDiffusionJaffre "calculateNumericalDiffusionJaffre"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                int nSpace,
                                                double shockCapturingDiffusion,
                                                double beta,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* grad_u,
                                                double* numDiff)
    void ccalculateNumericalDiffusionHJV2 "calculateNumericalDiffusionHJV2"(int nElements_global,
                                                int nQuadraturePoints_element,
                                                char shockCapturing,
                                                double shockCapturingDiffusion,
                                                double* elementDiameter,
                                                double* strong_residual,
                                                double* mt,
                                                double* H,
                                                double* numDiff)
###11111111111
def calculateNumericalDiffusionResGrad(double shockCapturingDiffusion,
                                        np.ndarray elementDiameter,
                                        np.ndarray strong_residual,
                                        np.ndarray grad_u,
                                        np.ndarray numDiff):
    ccalculateNumericalDiffusionResGrad(grad_u.shape[0],
                                        grad_u.shape[1],
                                        grad_u.shape[2],
                                        shockCapturingDiffusion,
                                        <double*> elementDiameter.data,
                                        <double*> strong_residual.data,
                                        <double*> grad_u.data,
                                        <double*> numDiff.data)
def calculateNumericalDiffusionResGradQuad(double shockCapturingDiffusion,
                                        np.ndarray elementDiameter,
                                        np.ndarray strong_residual,
                                        np.ndarray grad_u,
                                        np.ndarray numDiff):
    ccalculateNumericalDiffusionResGradQuad(grad_u.shape[0],
                                        grad_u.shape[1],
                                        grad_u.shape[2],
                                        shockCapturingDiffusion,
                                        <double*> elementDiameter.data,
                                        <double*> strong_residual.data,
                                        <double*> grad_u.data,
                                        <double*> numDiff.data)
def calculateNumericalDiffusionEikonal(double shockCapturingDiffusion,
                                        np.ndarray elementDiameter,
                                        np.ndarray strong_residual,
                                        np.ndarray numDiff):
    ccalculateNumericalDiffusionEikonal(numDiff.shape[0],
                                        numDiff.shape[1],
                                        shockCapturingDiffusion,
                                        <double*> elementDiameter.data,
                                        <double*> strong_residual.data,
                                        <double*> numDiff.data)
def calculateNumericalDiffusionHJ(char shockCapturing,
                                        double shockCapturingDiffusion,
                                        np.ndarray elementDiameter,
                                        np.ndarray strong_residual,
                                        np.ndarray mt,
                                        np.ndarray H,
                                        np.ndarray numDiff):
    ccalculateNumericalDiffusionHJ(H.shape[0],
                                    H.shape[1],
                                    shockCapturing,
                                    shockCapturingDiffusion,
                                    <double*> elementDiameter.data,
                                    <double*> strong_residual.data,
                                    <double*> mt.data,
                                    <double*> H.data,
                                    <double*> numDiff.data)
def calculateNumericalDiffusionHJV2(char shockCapturing,
                                    double shockCapturingDiffusion,
                                    np.ndarray elementDiameter,
                                    np.ndarray strong_residual,
                                    np.ndarray mt,
                                    np.ndarray H,
                                    np.ndarray numDiff):
    ccalculateNumericalDiffusionHJV2(H.shape[0],
                                    H.shape[1],
                                    shockCapturing,
                                    shockCapturingDiffusion,
                                    <double*> elementDiameter.data,
                                    <double*> strong_residual.data,
                                    <double*> mt.data,
                                    <double*> H.data,
                                    <double*> numDiff.data)
def calculateNumericalDiffusion_A_1(double shockCapturingFactor,
                                    np.ndarray elementDiameter,
                                    np.ndarray strong_residual,
                                    np.ndarray mt,
                                    np.ndarray df,
                                    np.ndarray numDiff):
    ccalculateNumericalDiffusion_A_1(df.shape[0],
                                    df.shape[1],
                                    df.shape[2],
                                    shockCapturingFactor,
                                    <double*> elementDiameter.data,
                                    <double*> strong_residual.data,
                                    <double*> mt.data,
                                    <double*> df.data,
                                    <double*> numDiff.data)
def calculateNumericalDiffusionResGradJuanes(double shockCapturingDiffusion,
                                    double uSC,
                                    np.ndarray elementDiameter,
                                    np.ndarray strong_residual,
                                    np.ndarray grad_u,
                                    np.ndarray numDiff):
    ccalculateNumericalDiffusionResGradJuanes(grad_u.shape[0],
                                    grad_u.shape[1],
                                    grad_u.shape[2],
                                    shockCapturingDiffusion,
                                    uSC,
                                    <double*> elementDiameter.data,
                                    <double*> strong_residual.data,
                                    <double*> grad_u.data,
                                    <double*> numDiff.data)
def calculateNumericalDiffusionJaffre(double shockCapturingDiffusion,
                                    double beta,
                                    np.ndarray elementDiameter,
                                    np.ndarray strong_residual,
                                    np.ndarray grad_u,
                                    np.ndarray numDiff):
    ccalculateNumericalDiffusionJaffre(grad_u.shape[0],
                                    grad_u.shape[1],
                                    grad_u.shape[2],
                                    shockCapturingDiffusion,
                                    beta,
                                    <double*> elementDiameter.data,
                                    <double*> strong_residual.data,
                                    <double*> grad_u.data,
                                    <double*> numDiff.data)

import numpy
cimport numpy
from proteus import *
from proteus.Transport import *
from proteus.Transport import OneLevelTransport

cdef extern from "ElastoPlastic.h" namespace "proteus":
    cdef cppclass ElastoPlastic_base:
        void calculateResidual(double* mesh_trial_ref,
                               double* mesh_grad_trial_ref,
                               double* mesh_dof,
                               int* mesh_l2g,
                               double* dV_ref,
                               double* disp_trial_ref,
                               double* disp_grad_trial_ref,
                               double* disp_test_ref,
                               double* disp_grad_test_ref,
                               double* mesh_trial_trace_ref,
                               double* mesh_grad_trial_trace_ref,
                               double* dS_ref,
                               double* disp_trial_trace_ref,
                               double* disp_grad_trial_trace_ref,
                               double* disp_test_trace_ref,
                               double* disp_grad_test_trace_ref,					 
                               double* normal_ref,
                               double* boundaryJac_ref,
                               double* penalty,
                               int gravityStep,
                               int nElements_global,
                               int* materialTypes,
                               int nMaterialProperties,
                               double* materialProperties,
                               double pore_fluid_unit_weight,
                               double* pore_pressure_head_dof,
                               double* q_strain,
                               double* q_strain0,
                               double* q_strain_last,
                               double* q_plasticStrain,
                               double* q_plasticStrain_last,
                               double* ebeq_strain,
                               double* ebeq_strain0,
                               double* ebeq_strain_last,
                               double* ebqe_plasticStrain,
                               double* ebqe_plasticStrain_last,
                               int* disp_l2g, 
                               double* u_dof, 
                               double* v_dof, 
                               double* w_dof,
                               double* bodyForce,
                               int offset_u, int offset_v, int offset_w, 
                               int stride_u, int stride_v, int stride_w, 
                               double* globalResidual,
                               int nExteriorElementBoundaries_global,
                               int* exteriorElementBoundariesArray,
                               int* elementBoundaryElementsArray,
                               int* elementBoundaryLocalElementBoundariesArray,
                               int* isDOFBoundary_u,
                               int* isDOFBoundary_v,
                               int* isDOFBoundary_w,
                               int* isStressFluxBoundary_u,
                               int* isStressFluxBoundary_v,
                               int* isStressFluxBoundary_w,
                               double* ebqe_bc_u_ext,
                               double* ebqe_bc_v_ext,
                               double* ebqe_bc_w_ext,
                               double* ebqe_bc_stressFlux_u_ext,
                               double* ebqe_bc_stressFlux_v_ext,
                               double* ebqe_bc_stressFlux_w_ext)
        void calculateJacobian(int usePicard,
                               double* mesh_trial_ref,
                               double* mesh_grad_trial_ref,
                               double* mesh_dof,
                               int* mesh_l2g,
                               double* dV_ref,
                               double* disp_trial_ref,
                               double* disp_grad_trial_ref,
                               double* disp_test_ref,
                               double* disp_grad_test_ref,
                               double* mesh_trial_trace_ref,
                               double* mesh_grad_trial_trace_ref,
                               double* dS_ref,
                               double* disp_trial_trace_ref,
                               double* disp_grad_trial_trace_ref,
                               double* disp_test_trace_ref,
                               double* disp_grad_test_trace_ref,					 
                               double* normal_ref,
                               double* boundaryJac_ref,
                               double* penalty,
                               int gravityStep,
                               int nElements_global,
                               int* materialTypes,
                               int nMaterialProperties,
                               double* materialProperties,
                               double pore_fluid_unit_weight,
                               double* pore_pressure_head_dof,
                               double* q_strain,
                               double* q_strain0,
                               double* q_strain_last,
                               double* q_plasticStrain,
                               double* q_plasticStrain_last,
                               double* ebqe_strain,
                               double* ebqe_strain0,
                               double* ebqe_strain_last,
                               double* ebqe_plasticStrain,
                               double* ebqe_plasticStrain_last,
                               int* disp_l2g,
                               double* u_dof, double* v_dof, double* w_dof,
                               double* bodyForce,
                               int* csrRowIndeces_u_u,int* csrColumnOffsets_u_u,
                               int* csrRowIndeces_u_v,int* csrColumnOffsets_u_v,
                               int* csrRowIndeces_u_w,int* csrColumnOffsets_u_w,
                               int* csrRowIndeces_v_u,int* csrColumnOffsets_v_u,
                               int* csrRowIndeces_v_v,int* csrColumnOffsets_v_v,
                               int* csrRowIndeces_v_w,int* csrColumnOffsets_v_w,
                               int* csrRowIndeces_w_u,int* csrColumnOffsets_w_u,
                               int* csrRowIndeces_w_v,int* csrColumnOffsets_w_v,
                               int* csrRowIndeces_w_w,int* csrColumnOffsets_w_w,
                               double* globalJacobian,
                               int nExteriorElementBoundaries_global,
                               int* exteriorElementBoundariesArray,
                               int* elementBoundaryElementsArray,
                               int* elementBoundaryLocalElementBoundariesArray,
                               int* isDOFBoundary_u,
                               int* isDOFBoundary_v,
                               int* isDOFBoundary_w,
                               int* isStressFluxBoundary_u,
                               int* isStressFluxBoundary_v,
                               int* isStressFluxBoundary_w,
                               int* csrColumnOffsets_eb_u_u,
                               int* csrColumnOffsets_eb_u_v,
                               int* csrColumnOffsets_eb_u_w,
                               int* csrColumnOffsets_eb_v_u,
                               int* csrColumnOffsets_eb_v_v,
                               int* csrColumnOffsets_eb_v_w,
                               int* csrColumnOffsets_eb_w_u,
                               int* csrColumnOffsets_eb_w_v,
                               int* csrColumnOffsets_eb_w_w)
    ElastoPlastic_base* newElastoPlastic(int nSpaceIn,
                               int nQuadraturePoints_elementIn,
                               int nDOF_mesh_trial_elementIn,
                               int nDOF_trial_elementIn,
                               int nDOF_test_elementIn,
                               int nQuadraturePoints_elementBoundaryIn,
                               int CompKernelFlag)

cdef class cElastoPlastic_base:
    cdef ElastoPlastic_base* thisptr
    def __cinit__(self,
                  int nSpaceIn,
                  int nQuadraturePoints_elementIn,
                  int nDOF_mesh_trial_elementIn,
                  int nDOF_trial_elementIn,
                  int nDOF_test_elementIn,
                  int nQuadraturePoints_elementBoundaryIn,
                  int CompKernelFlag):
        self.thisptr = newElastoPlastic(nSpaceIn,
                                   nQuadraturePoints_elementIn,
                                   nDOF_mesh_trial_elementIn,
                                   nDOF_trial_elementIn,
                                   nDOF_test_elementIn,
                                   nQuadraturePoints_elementBoundaryIn,
                                   CompKernelFlag)
    def __dealloc__(self):
        del self.thisptr
    def calculateResidual(self,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray disp_trial_ref,
                          numpy.ndarray disp_grad_trial_ref,
                          numpy.ndarray disp_test_ref,
                          numpy.ndarray disp_grad_test_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray disp_trial_trace_ref,
                          numpy.ndarray disp_grad_trial_trace_ref,
                          numpy.ndarray disp_test_trace_ref,
                          numpy.ndarray disp_grad_test_trace_ref,					 
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          numpy.ndarray penalty,
                          int gravityStep,
                          int nElements_global,
                          numpy.ndarray materialTypes,
                          int nMaterialProperties,
                          numpy.ndarray materialProperties,
                          double pore_fluid_unit_weight,
                          numpy.ndarray pore_pressure_head_dof,
                          numpy.ndarray q_strain,
                          numpy.ndarray q_strain0,
                          numpy.ndarray q_strain_last,
                          numpy.ndarray q_plasticStrain,
                          numpy.ndarray q_plasticStrain_last,
                          numpy.ndarray ebqe_strain,
                          numpy.ndarray ebqe_strain0,
                          numpy.ndarray ebqe_strain_last,
                          numpy.ndarray ebqe_plasticStrain,
                          numpy.ndarray ebqe_plasticStrain_last,
                          numpy.ndarray disp_l2g, 
                          numpy.ndarray u_dof, 
                          numpy.ndarray v_dof, 
                          numpy.ndarray w_dof,
                          numpy.ndarray bodyForce,
                          int offset_u, int offset_v, int offset_w, 
                          int stride_u, int stride_v, int stride_w, 
                          numpy.ndarray globalResidual,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray isDOFBoundary_v,
                          numpy.ndarray isDOFBoundary_w,
                          numpy.ndarray isStressFluxBoundary_u,
                          numpy.ndarray isStressFluxBoundary_v,
                          numpy.ndarray isStressFluxBoundary_w,
                          numpy.ndarray ebqe_bc_u_ext,
                          numpy.ndarray ebqe_bc_v_ext,
                          numpy.ndarray ebqe_bc_w_ext,
                          numpy.ndarray ebqe_bc_stressFlux_u_ext,
                          numpy.ndarray ebqe_bc_stressFlux_v_ext,
                          numpy.ndarray ebqe_bc_stressFlux_w_ext):
        self.thisptr.calculateResidual(<double*>mesh_trial_ref.data,
                                        <double*>mesh_grad_trial_ref.data,
                                        <double*>mesh_dof.data,
                                        <int*>mesh_l2g.data,
                                        <double*>dV_ref.data,
                                        <double*>disp_trial_ref.data,
                                        <double*>disp_grad_trial_ref.data,
                                        <double*>disp_test_ref.data,
                                        <double*>disp_grad_test_ref.data,
                                        <double*>mesh_trial_trace_ref.data,
                                        <double*>mesh_grad_trial_trace_ref.data,
                                        <double*>dS_ref.data,
                                        <double*>disp_trial_trace_ref.data,
                                        <double*>disp_grad_trial_trace_ref.data,
                                        <double*>disp_test_trace_ref.data,
                                        <double*>disp_grad_test_trace_ref.data,					 
                                        <double*>normal_ref.data,
                                        <double*>boundaryJac_ref.data,
                                        <double*>penalty.data,
                                        gravityStep,
                                        nElements_global,
                                        <int*>materialTypes.data,
                                        nMaterialProperties,
                                        <double*>materialProperties.data,
                                        pore_fluid_unit_weight,
                                        <double*>pore_pressure_head_dof.data,
                                        <double*>q_strain.data,
                                        <double*>q_strain0.data,
                                        <double*>q_strain_last.data,
                                        <double*>q_plasticStrain.data,
                                        <double*>q_plasticStrain_last.data,
                                        <double*>ebqe_strain.data,
                                        <double*>ebqe_strain0.data,
                                        <double*>ebqe_strain_last.data,
                                        <double*>ebqe_plasticStrain.data,
                                        <double*>ebqe_plasticStrain_last.data,
                                        <int*>disp_l2g.data, 
                                        <double*>u_dof.data, 
                                        <double*>v_dof.data, 
                                        <double*>w_dof.data,
                                        <double*>bodyForce.data,
                                        offset_u, offset_v, offset_w, 
                                        stride_u, stride_v, stride_w, 
                                        <double*>globalResidual.data,
                                        nExteriorElementBoundaries_global,
                                        <int*>exteriorElementBoundariesArray.data,
                                        <int*>elementBoundaryElementsArray.data,
                                        <int*>elementBoundaryLocalElementBoundariesArray.data,
                                        <int*>isDOFBoundary_u.data,
                                        <int*>isDOFBoundary_v.data,
                                        <int*>isDOFBoundary_w.data,
                                        <int*>isStressFluxBoundary_u.data,
                                        <int*>isStressFluxBoundary_v.data,
                                        <int*>isStressFluxBoundary_w.data,
                                        <double*>ebqe_bc_u_ext.data,
                                        <double*>ebqe_bc_v_ext.data,
                                        <double*>ebqe_bc_w_ext.data,
                                        <double*>ebqe_bc_stressFlux_u_ext.data,
                                        <double*>ebqe_bc_stressFlux_v_ext.data,
                                        <double*>ebqe_bc_stressFlux_w_ext.data)
    def calculateJacobian(self,
                          int usePicard,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray disp_trial_ref,
                          numpy.ndarray disp_grad_trial_ref,
                          numpy.ndarray disp_test_ref,
                          numpy.ndarray disp_grad_test_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray disp_trial_trace_ref,
                          numpy.ndarray disp_grad_trial_trace_ref,
                          numpy.ndarray disp_test_trace_ref,
                          numpy.ndarray disp_grad_test_trace_ref,					 
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          numpy.ndarray penalty,
                          int gravityStep,
                          int nElements_global,
                          numpy.ndarray materialTypes,
                          int nMaterialProperties,
                          numpy.ndarray materialProperties,
                          double pore_fluid_unit_weight,
                          numpy.ndarray pore_pressure_head_dof,
                          numpy.ndarray q_strain,
                          numpy.ndarray q_strain0,
                          numpy.ndarray q_strain_last,
                          numpy.ndarray q_plasticStrain,
                          numpy.ndarray q_plasticStrain_last,
                          numpy.ndarray ebqe_strain,
                          numpy.ndarray ebqe_strain0,
                          numpy.ndarray ebqe_strain_last,
                          numpy.ndarray ebqe_plasticStrain,
                          numpy.ndarray ebqe_plasticStrain_last,
                          numpy.ndarray disp_l2g,
                          numpy.ndarray u_dof, numpy.ndarray v_dof, numpy.ndarray w_dof,
                          numpy.ndarray bodyForce,
                          numpy.ndarray csrRowIndeces_u_u,numpy.ndarray csrColumnOffsets_u_u,
                          numpy.ndarray csrRowIndeces_u_v,numpy.ndarray csrColumnOffsets_u_v,
                          numpy.ndarray csrRowIndeces_u_w,numpy.ndarray csrColumnOffsets_u_w,
                          numpy.ndarray csrRowIndeces_v_u,numpy.ndarray csrColumnOffsets_v_u,
                          numpy.ndarray csrRowIndeces_v_v,numpy.ndarray csrColumnOffsets_v_v,
                          numpy.ndarray csrRowIndeces_v_w,numpy.ndarray csrColumnOffsets_v_w,
                          numpy.ndarray csrRowIndeces_w_u,numpy.ndarray csrColumnOffsets_w_u,
                          numpy.ndarray csrRowIndeces_w_v,numpy.ndarray csrColumnOffsets_w_v,
                          numpy.ndarray csrRowIndeces_w_w,numpy.ndarray csrColumnOffsets_w_w,
                          globalJacobian,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray isDOFBoundary_v,
                          numpy.ndarray isDOFBoundary_w,
                          numpy.ndarray isStressFluxBoundary_u,
                          numpy.ndarray isStressFluxBoundary_v,
                          numpy.ndarray isStressFluxBoundary_w,
                          numpy.ndarray csrColumnOffsets_eb_u_u,
                          numpy.ndarray csrColumnOffsets_eb_u_v,
                          numpy.ndarray csrColumnOffsets_eb_u_w,
                          numpy.ndarray csrColumnOffsets_eb_v_u,
                          numpy.ndarray csrColumnOffsets_eb_v_v,
                          numpy.ndarray csrColumnOffsets_eb_v_w,
                          numpy.ndarray csrColumnOffsets_eb_w_u,
                          numpy.ndarray csrColumnOffsets_eb_w_v,
                          numpy.ndarray csrColumnOffsets_eb_w_w):
        cdef numpy.ndarray rowptr,colind,globalJacobian_a
        (rowptr,colind,globalJacobian_a) = globalJacobian.getCSRrepresentation()
        self.thisptr.calculateJacobian(usePicard,
                                       <double*>mesh_trial_ref.data,
                                        <double*>mesh_grad_trial_ref.data,
                                        <double*>mesh_dof.data,
                                        <int*>mesh_l2g.data,
                                        <double*>dV_ref.data,
                                        <double*>disp_trial_ref.data,
                                        <double*>disp_grad_trial_ref.data,
                                        <double*>disp_test_ref.data,
                                        <double*>disp_grad_test_ref.data,
                                        <double*>mesh_trial_trace_ref.data,
                                        <double*>mesh_grad_trial_trace_ref.data,
                                        <double*>dS_ref.data,
                                        <double*>disp_trial_trace_ref.data,
                                        <double*>disp_grad_trial_trace_ref.data,
                                        <double*>disp_test_trace_ref.data,
                                        <double*>disp_grad_test_trace_ref.data,					 
                                        <double*>normal_ref.data,
                                        <double*>boundaryJac_ref.data,
                                       <double*>penalty.data,
                                        gravityStep,
                                        nElements_global,
                                        <int*>materialTypes.data,
                                        nMaterialProperties,
                                        <double*>materialProperties.data,
                                       pore_fluid_unit_weight,
                                       <double*> pore_pressure_head_dof.data,
                                        <double*>q_strain.data,
                                        <double*>q_strain0.data,
                                        <double*>q_strain_last.data,
                                        <double*>q_plasticStrain.data,
                                        <double*>q_plasticStrain_last.data,
                                        <double*>ebqe_strain.data,
                                        <double*>ebqe_strain0.data,
                                        <double*>ebqe_strain_last.data,
                                        <double*>ebqe_plasticStrain.data,
                                        <double*>ebqe_plasticStrain_last.data,
                                        <int*>disp_l2g.data,
                                        <double*>u_dof.data, <double*>v_dof.data, <double*>w_dof.data,
                                        <double*>bodyForce.data,
                                        <int*>csrRowIndeces_u_u.data,<int*>csrColumnOffsets_u_u.data,
                                        <int*>csrRowIndeces_u_v.data,<int*>csrColumnOffsets_u_v.data,
                                        <int*>csrRowIndeces_u_w.data,<int*>csrColumnOffsets_u_w.data,
                                        <int*>csrRowIndeces_v_u.data,<int*>csrColumnOffsets_v_u.data,
                                        <int*>csrRowIndeces_v_v.data,<int*>csrColumnOffsets_v_v.data,
                                        <int*>csrRowIndeces_v_w.data,<int*>csrColumnOffsets_v_w.data,
                                        <int*>csrRowIndeces_w_u.data,<int*>csrColumnOffsets_w_u.data,
                                        <int*>csrRowIndeces_w_v.data,<int*>csrColumnOffsets_w_v.data,
                                        <int*>csrRowIndeces_w_w.data,<int*>csrColumnOffsets_w_w.data,
                                        <double*>globalJacobian_a.data,
                                        nExteriorElementBoundaries_global,
                                        <int*>exteriorElementBoundariesArray.data,
                                        <int*>elementBoundaryElementsArray.data,
                                        <int*>elementBoundaryLocalElementBoundariesArray.data,
                                        <int*>isDOFBoundary_u.data,
                                        <int*>isDOFBoundary_v.data,
                                        <int*>isDOFBoundary_w.data,
                                        <int*>isStressFluxBoundary_u.data,
                                        <int*>isStressFluxBoundary_v.data,
                                        <int*>isStressFluxBoundary_w.data,
                                        <int*>csrColumnOffsets_eb_u_u.data,
                                        <int*>csrColumnOffsets_eb_u_v.data,
                                        <int*>csrColumnOffsets_eb_u_w.data,
                                        <int*>csrColumnOffsets_eb_v_u.data,
                                        <int*>csrColumnOffsets_eb_v_v.data,
                                        <int*>csrColumnOffsets_eb_v_w.data,
                                        <int*>csrColumnOffsets_eb_w_u.data,
                                        <int*>csrColumnOffsets_eb_w_v.data,
                                        <int*>csrColumnOffsets_eb_w_w.data)

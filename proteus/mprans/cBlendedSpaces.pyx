# A type of -*- python -*- file
import numpy
cimport numpy
from proteus import *
from proteus.Transport import *
from proteus.Transport import OneLevelTransport

cdef extern from "BlendedSpaces.h" namespace "proteus":
    cdef cppclass BlendedSpaces_base:
        void calculateResidual(double dt,
                               double * mesh_trial_ref,
                               double * mesh_grad_trial_ref,
                               double * mesh_dof,
                               int * mesh_l2g,
                               double * dV_ref,
                               double * u_trial_ref,
                               double * u_grad_trial_ref,
                               double * u_test_ref,
                               double * u_grad_test_ref,
                               double * u_hess_trial_ref,
                               double * mesh_trial_trace_ref,
                               double * mesh_grad_trial_trace_ref,
                               double * dS_ref,
                               double * u_trial_trace_ref,
                               double * u_grad_trial_trace_ref,
                               double * u_test_trace_ref,
                               double * u_grad_test_trace_ref,
                               double * normal_ref,
                               double * boundaryJac_ref,
                               int nElements_global,
                               int * u_l2g,
                               int * r_l2g,
                               double * elementDiameter,
                               double * u_dof,
                               double * u_dof_old,
                               double * velocity,
                               double * q_u,
                               double * q_grad_u,
                               int offset_u, int stride_u,
                               double * globalResidual,
                               int nExteriorElementBoundaries_global,
                               int * exteriorElementBoundariesArray,
                               int * elementBoundaryElementsArray,
                               int * elementBoundaryLocalElementBoundariesArray,
                               double * ebqe_velocity_ext,
                               int * isDOFBoundary_u,
                               double * ebqe_bc_u_ext,
                               int * isFluxBoundary_u,
                               double * ebqe_bc_flux_u_ext,
                               double * ebqe_phi, double epsFact,
                               double * ebqe_u,
                               double * ebqe_flux,
                               int numDOFs,
                               int NNZ,
                               int * csrRowIndeces_DofLoops,
                               int * csrColumnOffsets_DofLoops,
                               int * csrRowIndeces_CellLoops,
                               int * csrColumnOffsets_CellLoops,
                               int * csrColumnOffsets_eb_CellLoops,
			       double* force,
			       double* alpha_dof,
			       double* aux_test_ref,
			       double* aux_grad_test_ref,
                               double* aux_test_trace_ref,
			       double* dLow,
                               int PROBLEM_TYPE,
                               int ONE_DIM_PROBLEM,
                               int METHOD,
                               double * quantDOFs,
                               double * quantDOFs4,
                               double * quantDOFs5,
                               double* ebqe_uInlet,
                               int GET_POINT_VALUES,
                               double* flux_qij,
                               double* element_flux_qij,
			       double* MC,
                               double* vVector,
                               double* flux_el_i,
                               double* intBernMat,
                               double* edge_based_cfl,
                               double* u_vel_dofs,
                               double* v_vel_dofs,
                               double* QH_ML,
                               double* inv_element_ML_minus_MC,
                               double umaxG,
			       double uminG,
			       double* uHDot,
			       double* EntVisc,
                               double* gamma_dof,
			       int* first_adjacent_dof_to_middle_dof,
			       int* second_adjacent_dof_to_middle_dof,
			       double* is_dof_external,
			       double* is_dof_internal,
			       double* den_hi,
                               double* Cx,
			       double* Cy,
			       double* CTx,
			       double* CTy,
                               double* PrCx,
			       double* PrCy,
			       double* PrCTx,
			       double* PrCTy,
			       double* CxElem,
			       double* CyElem,
                               double* CTxElem,
                               double* CTyElem,
                               double* PrCxElem,
			       double* PrCyElem,
			       double* PrCTxElem,
			       double* PrCTyElem,
                               double* dLowElem,
                               double* QL_sparsity,
                               double* qNorm,
                               double* xGradRHS,
                               double* yGradRHS)
        void calculateResidualEntropyVisc(double dt,
                               double * mesh_trial_ref,
                               double * mesh_grad_trial_ref,
                               double * mesh_dof,
                               int * mesh_l2g,
                               double * dV_ref,
                               double * u_trial_ref,
                               double * u_grad_trial_ref,
                               double * u_test_ref,
                               double * u_grad_test_ref,
                                          double * u_hess_trial_ref,
                               double * mesh_trial_trace_ref,
                               double * mesh_grad_trial_trace_ref,
                               double * dS_ref,
                               double * u_trial_trace_ref,
                               double * u_grad_trial_trace_ref,
                               double * u_test_trace_ref,
                               double * u_grad_test_trace_ref,
                               double * normal_ref,
                               double * boundaryJac_ref,
                               int nElements_global,
                               int * u_l2g,
                               int * r_l2g,
                               double * elementDiameter,
                               double * u_dof,
                               double * u_dof_old,
                               double * velocity,
                               double * q_u,
                               double * q_grad_u,
                               int offset_u, int stride_u,
                               double * globalResidual,
                               int nExteriorElementBoundaries_global,
                               int * exteriorElementBoundariesArray,
                               int * elementBoundaryElementsArray,
                               int * elementBoundaryLocalElementBoundariesArray,
                               double * ebqe_velocity_ext,
                               int * isDOFBoundary_u,
                               double * ebqe_bc_u_ext,
                               int * isFluxBoundary_u,
                               double * ebqe_bc_flux_u_ext,
                               double * ebqe_phi, double epsFact,
                               double * ebqe_u,
                               double * ebqe_flux,
                               int numDOFs,
                               int NNZ,
                               int * csrRowIndeces_DofLoops,
                               int * csrColumnOffsets_DofLoops,
                               int * csrRowIndeces_CellLoops,
                               int * csrColumnOffsets_CellLoops,
                               int * csrColumnOffsets_eb_CellLoops,
			       double* force,
			       double* alpha_dof,
			       double* aux_test_ref,
			       double* aux_grad_test_ref,
                               double* aux_test_trace_ref,
			       double* dLow,
                               int PROBLEM_TYPE,
                                          int ONE_DIM_PROBLEM,
                                          int METHOD,
                                          double * quantDOFs,
                                          double * quantDOFs4,
                                          double * quantDOFs5,
                                          double* ebqe_uInlet,
                               int GET_POINT_VALUES,
                               double* flux_qij,
                               double* element_flux_qij,
			       double* MC,
                               double* vVector,
                               double* flux_el_i,
                               double* intBernMat,
                               double* edge_based_cfl,
                               double* u_vel_dofs,
                               double* v_vel_dofs,
                               double* QH_ML,
                               double* inv_element_ML_minus_MC,
                                          double umaxG,
				          double uminG,
                                          double* uHDot,
			                  double* EntVisc,
                                          double* gamma_dof,
				          int* first_adjacent_dof_to_middle_dof,
				          int* second_adjacent_dof_to_middle_dof,
                                          double* is_dof_external,
			                  double* is_dof_internal,
			                  double* den_hi,
                                          double* Cx,
			                  double* Cy,
			                  double* CTx,
			                  double* CTy,
                                          double* PrCx,
				          double* PrCy,
				          double* PrCTx,
				          double* PrCTy,
                                          double* CxElem,
			                  double* CyElem,
                                          double* CTxElem,
                                          double* CTyElem,
                                          double* PrCxElem,
				          double* PrCyElem,
				          double* PrCTxElem,
				          double* PrCTyElem,
                                          double* dLowElem,
                                          double* QL_sparsity,
                                          double* qNorm,
                                          double* xGradRHS,
                                          double* yGradRHS)
        void calculateMassMatrix(double dt,
                               double * mesh_trial_ref,
                               double * mesh_grad_trial_ref,
                               double * mesh_dof,
                               int * mesh_l2g,
                               double * dV_ref,
                               double * u_trial_ref,
                               double * u_grad_trial_ref,
                               double * u_test_ref,
                               double * u_grad_test_ref,
                               double * mesh_trial_trace_ref,
                               double * mesh_grad_trial_trace_ref,
                               double * dS_ref,
                               double * u_trial_trace_ref,
                               double * u_grad_trial_trace_ref,
                               double * u_test_trace_ref,
                               double * u_grad_test_trace_ref,
                               double * normal_ref,
                               double * boundaryJac_ref,
                               int nElements_global,
                               int * u_l2g,
                               int * r_l2g,
                               double * elementDiameter,
                               double * u_dof,
                               double * velocity,
                               int * csrRowIndeces_u_u, int * csrColumnOffsets_u_u,
                               double * globalJacobian,
                               int nExteriorElementBoundaries_global,
                               int * exteriorElementBoundariesArray,
                               int * elementBoundaryElementsArray,
                               int * elementBoundaryLocalElementBoundariesArray,
                               double * ebqe_velocity_ext,
                               int * isDOFBoundary_u,
                               double * ebqe_bc_u_ext,
                               int * isFluxBoundary_u,
                               double * ebqe_bc_flux_u_ext,
                               int * csrColumnOffsets_eb_u_u,
                               int numDOFs,
                               int* rowptr,
                               int* colind,
			       double* alpha_dof,
			       double* aux_test_ref,
			       double* aux_grad_test_ref,
			       double* dLow)
        void calculateMetricsAtEOS(double* mesh_trial_ref,
                                   double* mesh_grad_trial_ref,
                                   double* mesh_dof,
                                   int* mesh_l2g,
                                   double* dV_ref,
                                   double* u_trial_ref,
                                   double* u_grad_trial_ref,
                                   double* u_test_ref,
                                   int nElements_global,
                                   int nElements_owned,
                                   int* u_l2g,
                                   double* u_dof,
                                   double* u_exact,
                                   double* gradx_u_exact,
                                   double* grady_u_exact,
                                   int offset_u, int stride_u,
                                   double* global_L1,
                                   double* global_L2,
                                   double* global_LInf,
                                   double* global_H1)
    BlendedSpaces_base * newBlendedSpaces(int nSpaceIn,
                                          int nQuadraturePoints_elementIn,
                                          int nDOF_mesh_trial_elementIn,
                                          int nDOF_trial_elementIn,
                                          int nDOF_test_elementIn,
                                          int nQuadraturePoints_elementBoundaryIn,
                                          int CompKernelFlag)

cdef class cBlendedSpaces_base:
    cdef BlendedSpaces_base * thisptr

    def __cinit__(self,
                  int nSpaceIn,
                  int nQuadraturePoints_elementIn,
                  int nDOF_mesh_trial_elementIn,
                  int nDOF_trial_elementIn,
                  int nDOF_test_elementIn,
                  int nQuadraturePoints_elementBoundaryIn,
                  int CompKernelFlag):
        self.thisptr = newBlendedSpaces(nSpaceIn,
                                        nQuadraturePoints_elementIn,
                                        nDOF_mesh_trial_elementIn,
                                        nDOF_trial_elementIn,
                                        nDOF_test_elementIn,
                                        nQuadraturePoints_elementBoundaryIn,
                                        CompKernelFlag)

    def __dealloc__(self):
        del self.thisptr

    def calculateResidual(self,
                          double dt,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray u_trial_ref,
                          numpy.ndarray u_grad_trial_ref,
                          numpy.ndarray u_test_ref,
                          numpy.ndarray u_grad_test_ref,
                          numpy.ndarray u_hess_trial_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray u_trial_trace_ref,
                          numpy.ndarray u_grad_trial_trace_ref,
                          numpy.ndarray u_test_trace_ref,
                          numpy.ndarray u_grad_test_trace_ref,
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          int nElements_global,
                          numpy.ndarray u_l2g,
                          numpy.ndarray r_l2g,
                          numpy.ndarray elementDiameter,
                          numpy.ndarray u_dof,
                          numpy.ndarray u_dof_old,
                          numpy.ndarray velocity,
                          numpy.ndarray q_u,
                          numpy.ndarray q_grad_u,
                          int offset_u, int stride_u,
                          numpy.ndarray globalResidual,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray ebqe_velocity_ext,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray ebqe_bc_u_ext,
                          numpy.ndarray isFluxBoundary_u,
                          numpy.ndarray ebqe_bc_flux_u_ext,
                          numpy.ndarray ebqe_phi, double epsFact,
                          numpy.ndarray ebqe_u,
                          numpy.ndarray ebqe_flux,
                          int numDOFs,
                          int NNZ,
                          numpy.ndarray csrRowIndeces_DofLoops,
                          numpy.ndarray csrColumnOffsets_DofLoops,
                          numpy.ndarray csrRowIndeces_CellLoops,
                          numpy.ndarray csrColumnOffsets_CellLoops,
                          numpy.ndarray csrColumnOffsets_eb_CellLoops,
			  numpy.ndarray force,
			  numpy.ndarray alpha_dof,
			  numpy.ndarray aux_test_ref,
			  numpy.ndarray aux_grad_test_ref,
                          numpy.ndarray aux_test_trace_ref,
                          numpy.ndarray dLow,
                          int PROBLEM_TYPE,
                          int ONE_DIM_PROBLEM,
                          int METHOD,
                          numpy.ndarray quantDOFs,
                          numpy.ndarray quantDOFs4,
                          numpy.ndarray quantDOFs5,
                          numpy.ndarray ebqe_uInlet,
                          int GET_POINT_VALUES,
                          numpy.ndarray flux_qij,
                          numpy.ndarray element_flux_qij,
			  numpy.ndarray MC,
                          numpy.ndarray vVector,
                          numpy.ndarray flux_el_i,
                          numpy.ndarray intBernMat,
                          numpy.ndarray edge_based_cfl,
                          numpy.ndarray u_vel_dofs,
                          numpy.ndarray v_vel_dofs,
                          numpy.ndarray QH_ML,
                          numpy.ndarray inv_element_ML_minus_MC,
                          double umaxG,
			  double uminG,
                          numpy.ndarray uHDot,
			  numpy.ndarray EntVisc,
                          numpy.ndarray gamma_dof,
			  numpy.ndarray first_adjacent_dof_to_middle_dof,
			  numpy.ndarray second_adjacent_dof_to_middle_dof,
                          numpy.ndarray is_dof_external,
			  numpy.ndarray is_dof_internal,
			  numpy.ndarray den_hi,
                          numpy.ndarray Cx,
			  numpy.ndarray Cy,
			  numpy.ndarray CTx,
			  numpy.ndarray CTy,
                          numpy.ndarray PrCx,
			  numpy.ndarray PrCy,
			  numpy.ndarray PrCTx,
			  numpy.ndarray PrCTy,
                          numpy.ndarray CxElem,
                          numpy.ndarray CyElem,
                          numpy.ndarray CTxElem,
                          numpy.ndarray CTyElem,
                          numpy.ndarray PrCxElem,
                          numpy.ndarray PrCyElem,
                          numpy.ndarray PrCTxElem,
                          numpy.ndarray PrCTyElem,
                          numpy.ndarray dLowElem,
                          numpy.ndarray QL_sparsity,
                          numpy.ndarray qNorm,
                          numpy.ndarray xGradRHS,
                          numpy.ndarray yGradRHS):
        self.thisptr.calculateResidual(dt,
                                       < double * > mesh_trial_ref.data,
                                       < double * > mesh_grad_trial_ref.data,
                                       < double * > mesh_dof.data,
                                       < int * > mesh_l2g.data,
                                       < double * > dV_ref.data,
                                       < double * > u_trial_ref.data,
                                       < double * > u_grad_trial_ref.data,
                                       < double * > u_test_ref.data,
                                       < double * > u_grad_test_ref.data,
                                       < double * > u_hess_trial_ref.data,
                                       < double * > mesh_trial_trace_ref.data,
                                       < double * > mesh_grad_trial_trace_ref.data,
                                       < double * > dS_ref.data,
                                       < double * > u_trial_trace_ref.data,
                                       < double * > u_grad_trial_trace_ref.data,
                                       < double * > u_test_trace_ref.data,
                                       < double * > u_grad_test_trace_ref.data,
                                       < double * > normal_ref.data,
                                       < double * > boundaryJac_ref.data,
                                       nElements_global,
                                       < int * > u_l2g.data,
                                       < int * > r_l2g.data,
                                       < double * > elementDiameter.data,
                                       < double * > u_dof.data,
                                       < double * > u_dof_old.data,
                                       < double * > velocity.data,
                                       < double * > q_u.data,
                                       < double * > q_grad_u.data,
                                       offset_u, stride_u,
                                       < double * > globalResidual.data,
                                       nExteriorElementBoundaries_global,
                                       < int * > exteriorElementBoundariesArray.data,
                                       < int * > elementBoundaryElementsArray.data,
                                       < int * > elementBoundaryLocalElementBoundariesArray.data,
                                       < double * > ebqe_velocity_ext.data,
                                       < int * > isDOFBoundary_u.data,
                                       < double * > ebqe_bc_u_ext.data,
                                       < int * > isFluxBoundary_u.data,
                                       < double * > ebqe_bc_flux_u_ext.data,
                                       < double * > ebqe_phi.data,
                                       epsFact,
                                       < double * > ebqe_u.data,
                                       < double * > ebqe_flux.data,
                                       numDOFs,
                                       NNZ,
                                       < int * > csrRowIndeces_DofLoops.data,
                                       < int * > csrColumnOffsets_DofLoops.data,
                                       < int * > csrRowIndeces_CellLoops.data,
                                       < int * > csrColumnOffsets_CellLoops.data,
                                       < int * > csrColumnOffsets_eb_CellLoops.data,
				       <double*> force.data,
				       <double*> alpha_dof.data,
				       <double*> aux_test_ref.data,
				       <double*> aux_grad_test_ref.data,
                                       <double*> aux_test_trace_ref.data,
				       <double*> dLow.data,
                                       PROBLEM_TYPE,
                                       ONE_DIM_PROBLEM,
                                       METHOD,
                                       < double * > quantDOFs.data,
                                       < double * > quantDOFs4.data,
                                       < double * > quantDOFs5.data,
                                       <double*> ebqe_uInlet.data,
                                       GET_POINT_VALUES,
                                       < double*> flux_qij.data,
                                       < double*> element_flux_qij.data,
			               < double*> MC.data,
                                       < double*> vVector.data,
                                       < double*> flux_el_i.data,
                                       < double*> intBernMat.data,
                                       < double*> edge_based_cfl.data,
                                       < double*> u_vel_dofs.data,
                                       < double*> v_vel_dofs.data,
                                       < double*> QH_ML.data,
                                       < double*> inv_element_ML_minus_MC.data,
                                       umaxG,
				       uminG,
                                       <double*> uHDot.data,
			               <double*> EntVisc.data,
                                       <double*> gamma_dof.data,
				       <int*> first_adjacent_dof_to_middle_dof.data,
				       <int*> second_adjacent_dof_to_middle_dof.data,
                                       <double*> is_dof_external.data,
			               <double*> is_dof_internal.data,
			               <double*> den_hi.data,
                                       < double*> Cx.data,
				       < double*> Cy.data,
				       < double*> CTx.data,
				       < double*> CTy.data,
                                       < double*> PrCx.data,
				       < double*> PrCy.data,
				       < double*> PrCTx.data,
				       < double*> PrCTy.data,
                                       < double*> CxElem.data,
				       < double*> CyElem.data,
				       < double*> CTxElem.data,
				       < double*> CTyElem.data,
                                       < double*> PrCxElem.data,
				       < double*> PrCyElem.data,
				       < double*> PrCTxElem.data,
				       < double*> PrCTyElem.data,
                                       <double* > dLowElem.data,
                                       <double*> QL_sparsity.data,
                                       <double*> qNorm.data,
                                       <double* > xGradRHS.data,
                                       <double* > yGradRHS.data)
    def calculateResidualEntropyVisc(self,
                          double dt,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray u_trial_ref,
                          numpy.ndarray u_grad_trial_ref,
                          numpy.ndarray u_test_ref,
                          numpy.ndarray u_grad_test_ref,
                                     numpy.ndarray u_hess_trial_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray u_trial_trace_ref,
                          numpy.ndarray u_grad_trial_trace_ref,
                          numpy.ndarray u_test_trace_ref,
                          numpy.ndarray u_grad_test_trace_ref,
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          int nElements_global,
                          numpy.ndarray u_l2g,
                          numpy.ndarray r_l2g,
                          numpy.ndarray elementDiameter,
                          numpy.ndarray u_dof,
                          numpy.ndarray u_dof_old,
                          numpy.ndarray velocity,
                          numpy.ndarray q_u,
                          numpy.ndarray q_grad_u,
                          int offset_u, int stride_u,
                          numpy.ndarray globalResidual,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray ebqe_velocity_ext,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray ebqe_bc_u_ext,
                          numpy.ndarray isFluxBoundary_u,
                          numpy.ndarray ebqe_bc_flux_u_ext,
                          numpy.ndarray ebqe_phi, double epsFact,
                          numpy.ndarray ebqe_u,
                          numpy.ndarray ebqe_flux,
                          int numDOFs,
                          int NNZ,
                          numpy.ndarray csrRowIndeces_DofLoops,
                          numpy.ndarray csrColumnOffsets_DofLoops,
                          numpy.ndarray csrRowIndeces_CellLoops,
                          numpy.ndarray csrColumnOffsets_CellLoops,
                          numpy.ndarray csrColumnOffsets_eb_CellLoops,
			  numpy.ndarray force,
			  numpy.ndarray alpha_dof,
			  numpy.ndarray aux_test_ref,
			  numpy.ndarray aux_grad_test_ref,
                          numpy.ndarray aux_test_trace_ref,
                          numpy.ndarray dLow,
                          int PROBLEM_TYPE,
                                     int ONE_DIM_PROBLEM,
                                     int METHOD,
                                     numpy.ndarray quantDOFs,
                                     numpy.ndarray quantDOFs4,
                                     numpy.ndarray quantDOFs5,
                                     numpy.ndarray ebqe_uInlet,
                          int GET_POINT_VALUES,
                          numpy.ndarray flux_qij,
                          numpy.ndarray element_flux_qij,
			  numpy.ndarray MC,
                          numpy.ndarray vVector,
                          numpy.ndarray flux_el_i,
                          numpy.ndarray intBernMat,
                          numpy.ndarray edge_based_cfl,
                          numpy.ndarray u_vel_dofs,
                          numpy.ndarray v_vel_dofs,
                          numpy.ndarray QH_ML,
                          numpy.ndarray inv_element_ML_minus_MC,
                                     double umaxG,
				     double uminG,
                                     numpy.ndarray uHDot,
			             numpy.ndarray EntVisc,
                                     numpy.ndarray gamma_dof,
			             numpy.ndarray first_adjacent_dof_to_middle_dof,
			             numpy.ndarray second_adjacent_dof_to_middle_dof,
                                     numpy.ndarray is_dof_external,
			             numpy.ndarray is_dof_internal,
			             numpy.ndarray den_hi,
                                     numpy.ndarray Cx,
			             numpy.ndarray Cy,
			             numpy.ndarray CTx,
			             numpy.ndarray CTy,
                                     numpy.ndarray PrCx,
			             numpy.ndarray PrCy,
			             numpy.ndarray PrCTx,
			             numpy.ndarray PrCTy,
                                     numpy.ndarray CxElem,
                                     numpy.ndarray CyElem,
                                     numpy.ndarray CTxElem,
                                     numpy.ndarray CTyElem,
                                     numpy.ndarray PrCxElem,
                                     numpy.ndarray PrCyElem,
                                     numpy.ndarray PrCTxElem,
                                     numpy.ndarray PrCTyElem,
                                     numpy.ndarray dLowElem,
                                     numpy.ndarray QL_sparsity,
                                     numpy.ndarray qNorm,
                                     numpy.ndarray xGradRHS,
                                     numpy.ndarray yGradRHS):
        self.thisptr.calculateResidualEntropyVisc(dt,
                                       < double * > mesh_trial_ref.data,
                                       < double * > mesh_grad_trial_ref.data,
                                       < double * > mesh_dof.data,
                                       < int * > mesh_l2g.data,
                                       < double * > dV_ref.data,
                                       < double * > u_trial_ref.data,
                                       < double * > u_grad_trial_ref.data,
                                       < double * > u_test_ref.data,
                                       < double * > u_grad_test_ref.data,
                                                  < double * > u_hess_trial_ref.data,
                                       < double * > mesh_trial_trace_ref.data,
                                       < double * > mesh_grad_trial_trace_ref.data,
                                       < double * > dS_ref.data,
                                       < double * > u_trial_trace_ref.data,
                                       < double * > u_grad_trial_trace_ref.data,
                                       < double * > u_test_trace_ref.data,
                                       < double * > u_grad_test_trace_ref.data,
                                       < double * > normal_ref.data,
                                       < double * > boundaryJac_ref.data,
                                       nElements_global,
                                       < int * > u_l2g.data,
                                       < int * > r_l2g.data,
                                       < double * > elementDiameter.data,
                                       < double * > u_dof.data,
                                       < double * > u_dof_old.data,
                                       < double * > velocity.data,
                                       < double * > q_u.data,
                                       < double * > q_grad_u.data,
                                       offset_u, stride_u,
                                       < double * > globalResidual.data,
                                       nExteriorElementBoundaries_global,
                                       < int * > exteriorElementBoundariesArray.data,
                                       < int * > elementBoundaryElementsArray.data,
                                       < int * > elementBoundaryLocalElementBoundariesArray.data,
                                       < double * > ebqe_velocity_ext.data,
                                       < int * > isDOFBoundary_u.data,
                                       < double * > ebqe_bc_u_ext.data,
                                       < int * > isFluxBoundary_u.data,
                                       < double * > ebqe_bc_flux_u_ext.data,
                                       < double * > ebqe_phi.data,
                                       epsFact,
                                       < double * > ebqe_u.data,
                                       < double * > ebqe_flux.data,
                                       numDOFs,
                                       NNZ,
                                       < int * > csrRowIndeces_DofLoops.data,
                                       < int * > csrColumnOffsets_DofLoops.data,
                                       < int * > csrRowIndeces_CellLoops.data,
                                       < int * > csrColumnOffsets_CellLoops.data,
                                       < int * > csrColumnOffsets_eb_CellLoops.data,
				       <double*> force.data,
				       <double*> alpha_dof.data,
				       <double*> aux_test_ref.data,
				       <double*> aux_grad_test_ref.data,
                                       <double*> aux_test_trace_ref.data,
				       <double*> dLow.data,
                                       PROBLEM_TYPE,
                                                  ONE_DIM_PROBLEM,
                                                  METHOD,
                                                  < double * > quantDOFs.data,
                                                  < double * > quantDOFs4.data,
                                                  < double * > quantDOFs5.data,
                                                  <double*> ebqe_uInlet.data,
                                       GET_POINT_VALUES,
                                       < double*> flux_qij.data,
                                       < double*> element_flux_qij.data,
			               < double*> MC.data,
                                       < double*> vVector.data,
                                       < double*> flux_el_i.data,
                                       < double*> intBernMat.data,
                                       < double*> edge_based_cfl.data,
                                       < double*> u_vel_dofs.data,
                                       < double*> v_vel_dofs.data,
                                       < double*> QH_ML.data,
                                       < double*> inv_element_ML_minus_MC.data,
                                                  umaxG,
				                  uminG,
                                                  <double*> uHDot.data,
			                          <double*> EntVisc.data,
                                                  <double*> gamma_dof.data,
				                  <int*> first_adjacent_dof_to_middle_dof.data,
				                  <int*> second_adjacent_dof_to_middle_dof.data,
                                                  <double*> is_dof_external.data,
			                          <double*> is_dof_internal.data,
			                          <double*> den_hi.data,
                                                  < double*> Cx.data,
				                  < double*> Cy.data,
				                  < double*> CTx.data,
				                  < double*> CTy.data,
                                                  < double*> PrCx.data,
				                  < double*> PrCy.data,
				                  < double*> PrCTx.data,
				                  < double*> PrCTy.data,
                                                  < double*> CxElem.data,
				                  < double*> CyElem.data,
				                  < double*> CTxElem.data,
				                  < double*> CTyElem.data,
                                                  < double*> PrCxElem.data,
				                  < double*> PrCyElem.data,
				                  < double*> PrCTxElem.data,
				                  < double*> PrCTyElem.data,
                                                  <double*> dLowElem.data,
                                                  <double*> QL_sparsity.data,
                                                  <double*> qNorm.data,
                                                  <double*> xGradRHS.data,
                                                  <double*> yGradRHS.data)
    def calculateMassMatrix(self,
                          double dt,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray u_trial_ref,
                          numpy.ndarray u_grad_trial_ref,
                          numpy.ndarray u_test_ref,
                          numpy.ndarray u_grad_test_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray u_trial_trace_ref,
                          numpy.ndarray u_grad_trial_trace_ref,
                          numpy.ndarray u_test_trace_ref,
                          numpy.ndarray u_grad_test_trace_ref,
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          int nElements_global,
                          numpy.ndarray u_l2g,
                          numpy.ndarray r_l2g,
                          numpy.ndarray elementDiameter,
                          numpy.ndarray u_dof,
                          numpy.ndarray velocity,
                          numpy.ndarray csrRowIndeces_u_u, numpy.ndarray csrColumnOffsets_u_u,
                          globalJacobian,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray ebqe_velocity_ext,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray ebqe_bc_u_ext,
                          numpy.ndarray isFluxBoundary_u,
                          numpy.ndarray ebqe_bc_flux_u_ext,
                          numpy.ndarray csrColumnOffsets_eb_u_u,
                          int numDOFs,
			  numpy.ndarray alpha_dof,
			  numpy.ndarray aux_test_ref,
			  numpy.ndarray aux_grad_test_ref,
			  numpy.ndarray dLow):
        cdef numpy.ndarray rowptr, colind, globalJacobian_a
        (rowptr, colind, globalJacobian_a) = globalJacobian.getCSRrepresentation()
        self.thisptr.calculateMassMatrix(dt,
                                       < double * > mesh_trial_ref.data,
                                       < double * > mesh_grad_trial_ref.data,
                                       < double * > mesh_dof.data,
                                       < int * > mesh_l2g.data,
                                       < double * > dV_ref.data,
                                       < double * > u_trial_ref.data,
                                       < double * > u_grad_trial_ref.data,
                                       < double * > u_test_ref.data,
                                       < double * > u_grad_test_ref.data,
                                       < double * > mesh_trial_trace_ref.data,
                                       < double * > mesh_grad_trial_trace_ref.data,
                                       < double * > dS_ref.data,
                                       < double * > u_trial_trace_ref.data,
                                       < double * > u_grad_trial_trace_ref.data,
                                       < double * > u_test_trace_ref.data,
                                       < double * > u_grad_test_trace_ref.data,
                                       < double * > normal_ref.data,
                                       < double * > boundaryJac_ref.data,
                                       nElements_global,
                                       < int * > u_l2g.data,
                                       < int * > r_l2g.data,
                                       < double * > elementDiameter.data,
                                       < double * > u_dof.data,
                                       < double * > velocity.data,
                                       < int * > csrRowIndeces_u_u.data, < int * > csrColumnOffsets_u_u.data,
                                       < double * > globalJacobian_a.data,
                                       nExteriorElementBoundaries_global,
                                       < int * > exteriorElementBoundariesArray.data,
                                       < int * > elementBoundaryElementsArray.data,
                                       < int * > elementBoundaryLocalElementBoundariesArray.data,
                                       < double * > ebqe_velocity_ext.data,
                                       < int * > isDOFBoundary_u.data,
                                       < double * > ebqe_bc_u_ext.data,
                                       < int * > isFluxBoundary_u.data,
                                       < double * > ebqe_bc_flux_u_ext.data,
                                       < int * > csrColumnOffsets_eb_u_u.data,
                                       numDOFs,
                                       <int*> rowptr.data,
                                       <int*> colind.data,
				       <double*> alpha_dof.data,
			 	       <double*> aux_test_ref.data,
			 	       <double*> aux_grad_test_ref.data,
				       <double*> dLow.data)
    def calculateMetricsAtEOS(self,
                              numpy.ndarray mesh_trial_ref,
                              numpy.ndarray mesh_grad_trial_ref,
                              numpy.ndarray mesh_dof,
                              numpy.ndarray mesh_l2g,
                              numpy.ndarray dV_ref,
                              numpy.ndarray u_trial_ref,
                              numpy.ndarray u_grad_trial_ref,
                              numpy.ndarray u_test_ref,
                              int nElements_global,
                              int nElements_owned,
                              numpy.ndarray u_l2g,
                  	      numpy.ndarray u_dof,
                              numpy.ndarray u_exact,
                              numpy.ndarray gradx_u_exact,
                              numpy.ndarray grady_u_exact,
                              int offset_u, int stride_u):
        cdef double global_L1
        cdef double global_L2
        cdef double global_LInf
        cdef double global_H1
        self.thisptr.calculateMetricsAtEOS(<double*>mesh_trial_ref.data,
                                           <double*>mesh_grad_trial_ref.data,
                                           <double*>mesh_dof.data,
                                           <int*>mesh_l2g.data,
                                           <double*>dV_ref.data,
                                           <double*>u_trial_ref.data,
                                           <double*>u_grad_trial_ref.data,
                                           <double*>u_test_ref.data,
                                           nElements_global,
                                           nElements_owned,
                                           <int*>u_l2g.data,
                                           <double*>u_dof.data,
                                           <double*>u_exact.data,
                                           <double*>gradx_u_exact.data,
                                           <double*>grady_u_exact.data,
                                           offset_u,
                                           stride_u,
                                           &global_L1,
                                           &global_L2,
                                           &global_LInf,
                                           &global_H1)
        return(global_L1,
               global_L2,
               global_LInf,
               global_H1)

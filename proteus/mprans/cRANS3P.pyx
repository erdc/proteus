import numpy
cimport numpy
from proteus import *
from proteus.Transport import *
from proteus.Transport import OneLevelTransport

cdef extern from "RANS3P.h" namespace "proteus":
    cdef cppclass RANS3P_base:
        void calculateResidual(double* mesh_trial_ref,
                               double* mesh_grad_trial_ref,
                               double* mesh_dof,
                               double* mesh_velocity_dof,
                               double MOVING_DOMAIN,
                               int* mesh_l2g,
                               double* dV_ref,
                               double* p_trial_ref,
                               double* p_grad_trial_ref,
                               double* p_test_ref,
                               double* p_grad_test_ref,
                               double* vel_trial_ref,
                               double* vel_grad_trial_ref,
                               double* vel_test_ref,
                               double* vel_grad_test_ref,
                               double* mesh_trial_trace_ref,
                               double* mesh_grad_trial_trace_ref,
                               double* dS_ref,
                               double* p_trial_trace_ref,
                               double* p_grad_trial_trace_ref,
                               double* p_test_trace_ref,
                               double* p_grad_test_trace_ref,
                               double* vel_trial_trace_ref,
                               double* vel_grad_trial_trace_ref,
                               double* vel_test_trace_ref,
                               double* vel_grad_test_trace_ref,					 
                               double* normal_ref,
                               double* boundaryJac_ref,
                               double* elementDiameter,
                               double hFactor,
                               int nElements_global,
                               double useRBLES,
                               double useMetrics, 
                               double alphaBDF,
                               double epsFact_rho,
                               double epsFact_mu, 
                               double sigma,
                               double rho_0,
                               double nu_0,
                               double rho_1,
                               double nu_1,
                               double Ct_sge,
                               double Cd_sge,
                               double C_dc,
                               int* p_l2g, 
                               int* vel_l2g, 
                               double* C_dof,
                               double* p_dof, 
                               double* u_dof, 
                               double* v_dof, 
                               double* w_dof,
                               double* g,
                               double* q_sedimentForce,
                               double* phi,
                               double* normal_phi,
                               double* kappa_phi,
                               double* q_mass_acc,
                               double* q_mom_u_acc,
                               double* q_mom_v_acc,
                               double* q_mom_w_acc,
                               double* q_mass_adv,
                               double* q_mass_acc_beta_bdf,double* q_mom_u_acc_beta_bdf, double* q_mom_v_acc_beta_bdf, double* q_mom_w_acc_beta_bdf,
                               double* q_velocity_sge,
                               double* q_cfl,
                               double* q_numDiff_u, double* q_numDiff_v, double* q_numDiff_w,
                               double* q_numDiff_u_last, double* q_numDiff_v_last, double* q_numDiff_w_last,
                               int* sdInfo_u_u_rowptr,int* sdInfo_u_u_colind,			      
                               int* sdInfo_u_v_rowptr,int* sdInfo_u_v_colind,
                               int* sdInfo_u_w_rowptr,int* sdInfo_u_w_colind,
                               int* sdInfo_v_v_rowptr,int* sdInfo_v_v_colind,
                               int* sdInfo_v_u_rowptr,int* sdInfo_v_u_colind,
                               int* sdInfo_v_w_rowptr,int* sdInfo_v_w_colind,
                               int* sdInfo_w_w_rowptr,int* sdInfo_w_w_colind,
                               int* sdInfo_w_u_rowptr,int* sdInfo_w_u_colind,
                               int* sdInfo_w_v_rowptr,int* sdInfo_w_v_colind,
                               int offset_p, int offset_u, int offset_v, int offset_w, 
                               int stride_p, int stride_u, int stride_v, int stride_w, 
                               double* globalResidual,
                               int nExteriorElementBoundaries_global,
                               int* exteriorElementBoundariesArray,
                               int* elementBoundaryElementsArray,
                               int* elementBoundaryLocalElementBoundariesArray,
                               double* ebqe_phi_ext,
                               double* ebqe_normal_phi_ext,
                               double* ebqe_kappa_phi_ext,
                               int* isDOFBoundary_p,
                               int* isDOFBoundary_u,
                               int* isDOFBoundary_v,
                               int* isDOFBoundary_w,
                               int* isAdvectiveFluxBoundary_p,
                               int* isAdvectiveFluxBoundary_u,
                               int* isAdvectiveFluxBoundary_v,
                               int* isAdvectiveFluxBoundary_w,
                               int* isDiffusiveFluxBoundary_u,
                               int* isDiffusiveFluxBoundary_v,
                               int* isDiffusiveFluxBoundary_w,
                               double* ebqe_bc_p_ext,
                               double* ebqe_bc_flux_mass_ext,
                               double* ebqe_bc_flux_mom_u_adv_ext,
                               double* ebqe_bc_flux_mom_v_adv_ext,
                               double* ebqe_bc_flux_mom_w_adv_ext,
                               double* ebqe_bc_u_ext,
                               double* ebqe_bc_flux_u_diff_ext,
                               double* ebqe_penalty_ext,
                               double* ebqe_bc_v_ext,
                               double* ebqe_bc_flux_v_diff_ext,
                               double* ebqe_bc_w_ext,
                               double* ebqe_bc_flux_w_diff_ext,
                               double* q_velocity,
                               double* ebqe_velocity,
                               double* flux,
                               double* elementResidual_p)        
        void calculateJacobian(double* mesh_trial_ref,
                               double* mesh_grad_trial_ref,
                               double* mesh_dof,
                               double* mesh_velocity_dof,
                               double MOVING_DOMAIN,
                               int* mesh_l2g,
                               double* dV_ref,
                               double* p_trial_ref,
                               double* p_grad_trial_ref,
                               double* p_test_ref,
                               double* p_grad_test_ref,
                               double* vel_trial_ref,
                               double* vel_grad_trial_ref,
                               double* vel_test_ref,
                               double* vel_grad_test_ref,
                               double* mesh_trial_trace_ref,
                               double* mesh_grad_trial_trace_ref,
                               double* dS_ref,
                               double* p_trial_trace_ref,
                               double* p_grad_trial_trace_ref,
                               double* p_test_trace_ref,
                               double* p_grad_test_trace_ref,
                               double* vel_trial_trace_ref,
                               double* vel_grad_trial_trace_ref,
                               double* vel_test_trace_ref,
                               double* vel_grad_test_trace_ref,					 
                               double* normal_ref,
                               double* boundaryJac_ref,
                               double* elementDiameter,
                               double hFactor,
                               int nElements_global,
                               double useRBLES,
                               double useMetrics, 
                               double alphaBDF,
                               double epsFact_rho,
                               double epsFact_mu,
                               double sigma,
                               double rho_0,
                               double nu_0,
                               double rho_1,
                               double nu_1,
                               double Ct_sge,
                               double Cd_sge,
                               double C_dg,
                               int* p_l2g, 
                               int* vel_l2g,
                               double* C_dof,double* p_dof, double* u_dof, double* v_dof, double* w_dof,
                               double* g,
                               double* q_sedimentForce,
                               double* phi,
                               double* normal_phi,
                               double* kappa_phi,
                               double* q_mass_acc_beta_bdf, double* q_mom_u_acc_beta_bdf, double* q_mom_v_acc_beta_bdf, double* q_mom_w_acc_beta_bdf,
                               double* q_velocity_sge,
                               double* q_cfl,
                               double* q_numDiff_u_last, double* q_numDiff_v_last, double* q_numDiff_w_last,
                               int* sdInfo_u_u_rowptr,int* sdInfo_u_u_colind,			      
                               int* sdInfo_u_v_rowptr,int* sdInfo_u_v_colind,
                               int* sdInfo_u_w_rowptr,int* sdInfo_u_w_colind,
                               int* sdInfo_v_v_rowptr,int* sdInfo_v_v_colind,
                               int* sdInfo_v_u_rowptr,int* sdInfo_v_u_colind,
                               int* sdInfo_v_w_rowptr,int* sdInfo_v_w_colind,
                               int* sdInfo_w_w_rowptr,int* sdInfo_w_w_colind,
                               int* sdInfo_w_u_rowptr,int* sdInfo_w_u_colind,
                               int* sdInfo_w_v_rowptr,int* sdInfo_w_v_colind,
                               int* csrRowIndeces_p_p,int* csrColumnOffsets_p_p,
                               int* csrRowIndeces_p_u,int* csrColumnOffsets_p_u,
                               int* csrRowIndeces_p_v,int* csrColumnOffsets_p_v,
                               int* csrRowIndeces_p_w,int* csrColumnOffsets_p_w,
                               int* csrRowIndeces_u_p,int* csrColumnOffsets_u_p,
                               int* csrRowIndeces_u_u,int* csrColumnOffsets_u_u,
                               int* csrRowIndeces_u_v,int* csrColumnOffsets_u_v,
                               int* csrRowIndeces_u_w,int* csrColumnOffsets_u_w,
                               int* csrRowIndeces_v_p,int* csrColumnOffsets_v_p,
                               int* csrRowIndeces_v_u,int* csrColumnOffsets_v_u,
                               int* csrRowIndeces_v_v,int* csrColumnOffsets_v_v,
                               int* csrRowIndeces_v_w,int* csrColumnOffsets_v_w,
                               int* csrRowIndeces_w_p,int* csrColumnOffsets_w_p,
                               int* csrRowIndeces_w_u,int* csrColumnOffsets_w_u,
                               int* csrRowIndeces_w_v,int* csrColumnOffsets_w_v,
                               int* csrRowIndeces_w_w,int* csrColumnOffsets_w_w,
                               double* globalJacobian,
                               int nExteriorElementBoundaries_global,
                               int* exteriorElementBoundariesArray,
                               int* elementBoundaryElementsArray,
                               int* elementBoundaryLocalElementBoundariesArray,
                               double* ebqe_phi_ext,
                               double* ebqe_normal_phi_ext,
                               double* ebqe_kappa_phi_ext,
                               int* isDOFBoundary_p,
                               int* isDOFBoundary_u,
                               int* isDOFBoundary_v,
                               int* isDOFBoundary_w,
                               int* isAdvectiveFluxBoundary_p,
                               int* isAdvectiveFluxBoundary_u,
                               int* isAdvectiveFluxBoundary_v,
                               int* isAdvectiveFluxBoundary_w,
                               int* isDiffusiveFluxBoundary_u,
                               int* isDiffusiveFluxBoundary_v,
                               int* isDiffusiveFluxBoundary_w,
                               double* ebqe_bc_p_ext,
                               double* ebqe_bc_flux_mass_ext,
                               double* ebqe_bc_flux_mom_u_adv_ext,
                               double* ebqe_bc_flux_mom_v_adv_ext,
                               double* ebqe_bc_flux_mom_w_adv_ext,
                               double* ebqe_bc_u_ext,
                               double* ebqe_bc_flux_u_diff_ext,
                               double* ebqe_penalty_ext,
                               double* ebqe_bc_v_ext,
                               double* ebqe_bc_flux_v_diff_ext,
                               double* ebqe_bc_w_ext,
                               double* ebqe_bc_flux_w_diff_ext,
                               int* csrColumnOffsets_eb_p_p,
                               int* csrColumnOffsets_eb_p_u,
                               int* csrColumnOffsets_eb_p_v,
                               int* csrColumnOffsets_eb_p_w,
                               int* csrColumnOffsets_eb_u_p,
                               int* csrColumnOffsets_eb_u_u,
                               int* csrColumnOffsets_eb_u_v,
                               int* csrColumnOffsets_eb_u_w,
                               int* csrColumnOffsets_eb_v_p,
                               int* csrColumnOffsets_eb_v_u,
                               int* csrColumnOffsets_eb_v_v,
                               int* csrColumnOffsets_eb_v_w,
                               int* csrColumnOffsets_eb_w_p,
                               int* csrColumnOffsets_eb_w_u,
                               int* csrColumnOffsets_eb_w_v,
                               int* csrColumnOffsets_eb_w_w)
        void calculateVelocityAverage(int nExteriorElementBoundaries_global,
                                      int* exteriorElementBoundariesArray,
                                      int nInteriorElementBoundaries_global,
                                      int* interiorElementBoundariesArray,
                                      int* elementBoundaryElementsArray,
                                      int* elementBoundaryLocalElementBoundariesArray,
                                      double* mesh_dof,
                                      int* mesh_l2g,
                                      double* mesh_trial_trace_ref,
                                      double* mesh_grad_trial_trace_ref,
                                      double* normal_ref,
                                      double* boundaryJac_ref,
                                      int* vel_l2g,
                                      double* u_dof, 
                                      double* v_dof, 
                                      double* w_dof,
                                      double* vel_trial_trace_ref,
                                      double* ebqe_velocity,
                                      double* velocityAverage)
    RANS3P_base* newRANS3P(int nSpaceIn,
                           int nQuadraturePoints_elementIn,
                           int nDOF_mesh_trial_elementIn,
                           int nDOF_trial_elementIn,
                           int nDOF_test_elementIn,
                           int nQuadraturePoints_elementBoundaryIn,
                           int CompKernelFlag)

cdef class cRANS3P_base:
   cdef RANS3P_base* thisptr
   def __cinit__(self,
                 int nSpaceIn,
                 int nQuadraturePoints_elementIn,
                 int nDOF_mesh_trial_elementIn,
                 int nDOF_trial_elementIn,
                 int nDOF_test_elementIn,
                 int nQuadraturePoints_elementBoundaryIn,
                 int CompKernelFlag):
       self.thisptr = newRANS3P(nSpaceIn,
                              nQuadraturePoints_elementIn,
                              nDOF_mesh_trial_elementIn,
                              nDOF_trial_elementIn,
                              nDOF_test_elementIn,
                              nQuadraturePoints_elementBoundaryIn,
                              CompKernelFlag)
   def __dealloc__(self):
       del self.thisptr
   def calculateResidual(self,
                         numpy.ndarray mesh_trial_ref,
                         numpy.ndarray mesh_grad_trial_ref,
                         numpy.ndarray mesh_dof,
                         numpy.ndarray mesh_velocity_dof,
                         double MOVING_DOMAIN,
                         numpy.ndarray mesh_l2g,
                         numpy.ndarray dV_ref,
                         numpy.ndarray p_trial_ref,
                         numpy.ndarray p_grad_trial_ref,
                         numpy.ndarray p_test_ref,
                         numpy.ndarray p_grad_test_ref,
                         numpy.ndarray vel_trial_ref,
                         numpy.ndarray vel_grad_trial_ref,
                         numpy.ndarray vel_test_ref,
                         numpy.ndarray vel_grad_test_ref,
                         numpy.ndarray mesh_trial_trace_ref,
                         numpy.ndarray mesh_grad_trial_trace_ref,
                         numpy.ndarray dS_ref,
                         numpy.ndarray p_trial_trace_ref,
                         numpy.ndarray p_grad_trial_trace_ref,
                         numpy.ndarray p_test_trace_ref,
                         numpy.ndarray p_grad_test_trace_ref,
                         numpy.ndarray vel_trial_trace_ref,
                         numpy.ndarray vel_grad_trial_trace_ref,
                         numpy.ndarray vel_test_trace_ref,
                         numpy.ndarray vel_grad_test_trace_ref,					 
                         numpy.ndarray normal_ref,
                         numpy.ndarray boundaryJac_ref,
                         numpy.ndarray elementDiameter,
                         double hFactor,
                         int nElements_global,
			 double useRBLES,
			 double useMetrics, 
                         double alphaBDF,
                         double epsFact_rho,
                         double epsFact_mu, 
                         double sigma,
                         double rho_0,
                         double nu_0,
                         double rho_1,
                         double nu_1,
                         double Ct_sge,
                         double Cd_sge,
                         double C_dc,
                         numpy.ndarray p_l2g, 
                         numpy.ndarray vel_l2g,
                         numpy.ndarray C_dof,
                         numpy.ndarray p_dof, 
                         numpy.ndarray u_dof, 
                         numpy.ndarray v_dof, 
                         numpy.ndarray w_dof,
                         numpy.ndarray g,
                         numpy.ndarray q_sedimentForce,
                         numpy.ndarray phi,
                         numpy.ndarray normal_phi,
                         numpy.ndarray kappa_phi,
                         numpy.ndarray q_mass_acc,
                         numpy.ndarray q_mom_u_acc,
                         numpy.ndarray q_mom_v_acc,
                         numpy.ndarray q_mom_w_acc,
                         numpy.ndarray q_mass_adv,
                         numpy.ndarray q_mass_acc_beta_bdf, numpy.ndarray q_mom_u_acc_beta_bdf, numpy.ndarray q_mom_v_acc_beta_bdf, numpy.ndarray q_mom_w_acc_beta_bdf,
                         numpy.ndarray q_velocity_sge,
                         numpy.ndarray q_cfl,
                         numpy.ndarray q_numDiff_u, numpy.ndarray q_numDiff_v, numpy.ndarray q_numDiff_w,
                         numpy.ndarray q_numDiff_u_last, numpy.ndarray q_numDiff_v_last, numpy.ndarray q_numDiff_w_last,
                         numpy.ndarray sdInfo_u_u_rowptr,numpy.ndarray sdInfo_u_u_colind,			      
                         numpy.ndarray sdInfo_u_v_rowptr,numpy.ndarray sdInfo_u_v_colind,
                         numpy.ndarray sdInfo_u_w_rowptr,numpy.ndarray sdInfo_u_w_colind,
                         numpy.ndarray sdInfo_v_v_rowptr,numpy.ndarray sdInfo_v_v_colind,
                         numpy.ndarray sdInfo_v_u_rowptr,numpy.ndarray sdInfo_v_u_colind,
                         numpy.ndarray sdInfo_v_w_rowptr,numpy.ndarray sdInfo_v_w_colind,
                         numpy.ndarray sdInfo_w_w_rowptr,numpy.ndarray sdInfo_w_w_colind,
                         numpy.ndarray sdInfo_w_u_rowptr,numpy.ndarray sdInfo_w_u_colind,
                         numpy.ndarray sdInfo_w_v_rowptr,numpy.ndarray sdInfo_w_v_colind,
                         int offset_p, int offset_u, int offset_v, int offset_w, 
                         int stride_p, int stride_u, int stride_v, int stride_w, 
                         numpy.ndarray globalResidual,
                         int nExteriorElementBoundaries_global,
                         numpy.ndarray exteriorElementBoundariesArray,
                         numpy.ndarray elementBoundaryElementsArray,
                         numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                         numpy.ndarray ebqe_phi_ext,
                         numpy.ndarray ebqe_normal_phi_ext,
                         numpy.ndarray ebqe_kappa_phi_ext,
                         numpy.ndarray isDOFBoundary_p,
                         numpy.ndarray isDOFBoundary_u,
                         numpy.ndarray isDOFBoundary_v,
                         numpy.ndarray isDOFBoundary_w,
                         numpy.ndarray isAdvectiveFluxBoundary_p,
                         numpy.ndarray isAdvectiveFluxBoundary_u,
                         numpy.ndarray isAdvectiveFluxBoundary_v,
                         numpy.ndarray isAdvectiveFluxBoundary_w,
                         numpy.ndarray isDiffusiveFluxBoundary_u,
                         numpy.ndarray isDiffusiveFluxBoundary_v,
                         numpy.ndarray isDiffusiveFluxBoundary_w,
                         numpy.ndarray ebqe_bc_p_ext,
                         numpy.ndarray ebqe_bc_flux_mass_ext,
                         numpy.ndarray ebqe_bc_flux_mom_u_adv_ext,
                         numpy.ndarray ebqe_bc_flux_mom_v_adv_ext,
                         numpy.ndarray ebqe_bc_flux_mom_w_adv_ext,
                         numpy.ndarray ebqe_bc_u_ext,
                         numpy.ndarray ebqe_bc_flux_u_diff_ext,
                         numpy.ndarray ebqe_penalty_ext,
                         numpy.ndarray ebqe_bc_v_ext,
                         numpy.ndarray ebqe_bc_flux_v_diff_ext,
                         numpy.ndarray ebqe_bc_w_ext,
                         numpy.ndarray ebqe_bc_flux_w_diff_ext,
                         numpy.ndarray q_velocity,
                         numpy.ndarray ebqe_velocity,
                         numpy.ndarray flux,
                         numpy.ndarray elementResidual_p):			 
       self.thisptr.calculateResidual(<double*> mesh_trial_ref.data,
                                       <double*> mesh_grad_trial_ref.data,
                                       <double*> mesh_dof.data,
                                       <double*> mesh_velocity_dof.data,
                                       MOVING_DOMAIN,
                                       <int*> mesh_l2g.data,
                                       <double*> dV_ref.data,
                                       <double*> p_trial_ref.data,
                                       <double*> p_grad_trial_ref.data,
                                       <double*> p_test_ref.data,
                                       <double*> p_grad_test_ref.data,
                                       <double*> vel_trial_ref.data,
                                       <double*> vel_grad_trial_ref.data,
                                       <double*> vel_test_ref.data,
                                       <double*> vel_grad_test_ref.data,
                                       <double*> mesh_trial_trace_ref.data,
                                       <double*> mesh_grad_trial_trace_ref.data,
                                       <double*> dS_ref.data,
                                       <double*> p_trial_trace_ref.data,
                                       <double*> p_grad_trial_trace_ref.data,
                                       <double*> p_test_trace_ref.data,
                                       <double*> p_grad_test_trace_ref.data,
                                       <double*> vel_trial_trace_ref.data,
                                       <double*> vel_grad_trial_trace_ref.data,
                                       <double*> vel_test_trace_ref.data,
                                       <double*> vel_grad_test_trace_ref.data,					 
                                       <double*> normal_ref.data,
                                       <double*> boundaryJac_ref.data,
                                       <double*> elementDiameter.data,
                                       hFactor,
                                       nElements_global,
				       useRBLES,
				       useMetrics, 
                                       alphaBDF,
                                       epsFact_rho,
                                       epsFact_mu, 
                                       sigma,
                                       rho_0,
                                       nu_0,
                                       rho_1,
                                       nu_1,
                                       Ct_sge,
                                       Cd_sge,
                                       C_dc,
                                       <int*> p_l2g.data, 
                                       <int*> vel_l2g.data, 
                                       <double*> C_dof.data,
                                       <double*> p_dof.data, 
                                       <double*> u_dof.data, 
                                       <double*> v_dof.data, 
                                       <double*> w_dof.data,
                                       <double*> g.data,
                                       <double*> q_sedimentForce.data,
                                       <double*> phi.data,
                                       <double*> normal_phi.data,
                                       <double*> kappa_phi.data,
                                       <double*> q_mass_acc.data,
                                       <double*> q_mom_u_acc.data,
                                       <double*> q_mom_v_acc.data,
                                       <double*> q_mom_w_acc.data,
                                       <double*> q_mass_adv.data,
                                       <double*> q_mass_acc_beta_bdf.data, <double*> q_mom_u_acc_beta_bdf.data, <double*> q_mom_v_acc_beta_bdf.data, <double*> q_mom_w_acc_beta_bdf.data,
                                       <double*> q_velocity_sge.data,
                                       <double*> q_cfl.data,
                                       <double*> q_numDiff_u.data, <double*> q_numDiff_v.data, <double*> q_numDiff_w.data,
                                       <double*> q_numDiff_u_last.data, <double*> q_numDiff_v_last.data, <double*> q_numDiff_w_last.data,
                                       <int*> sdInfo_u_u_rowptr.data,<int*> sdInfo_u_u_colind.data,			      
                                       <int*> sdInfo_u_v_rowptr.data,<int*> sdInfo_u_v_colind.data,
                                       <int*> sdInfo_u_w_rowptr.data,<int*> sdInfo_u_w_colind.data,
                                       <int*> sdInfo_v_v_rowptr.data,<int*> sdInfo_v_v_colind.data,
                                       <int*> sdInfo_v_u_rowptr.data,<int*> sdInfo_v_u_colind.data,
                                       <int*> sdInfo_v_w_rowptr.data,<int*> sdInfo_v_w_colind.data,
                                       <int*> sdInfo_w_w_rowptr.data,<int*> sdInfo_w_w_colind.data,
                                       <int*> sdInfo_w_u_rowptr.data,<int*> sdInfo_w_u_colind.data,
                                       <int*> sdInfo_w_v_rowptr.data,<int*> sdInfo_w_v_colind.data,
                                       offset_p, offset_u, offset_v, offset_w, 
                                       stride_p, stride_u, stride_v, stride_w, 
                                       <double*> globalResidual.data,
                                       nExteriorElementBoundaries_global,
                                       <int*> exteriorElementBoundariesArray.data,
                                       <int*> elementBoundaryElementsArray.data,
                                       <int*> elementBoundaryLocalElementBoundariesArray.data,
                                       <double*> ebqe_phi_ext.data,
                                       <double*> ebqe_normal_phi_ext.data,
                                       <double*> ebqe_kappa_phi_ext.data,
                                       <int*> isDOFBoundary_p.data,
                                       <int*> isDOFBoundary_u.data,
                                       <int*> isDOFBoundary_v.data,
                                       <int*> isDOFBoundary_w.data,
                                       <int*> isAdvectiveFluxBoundary_p.data,
                                       <int*> isAdvectiveFluxBoundary_u.data,
                                       <int*> isAdvectiveFluxBoundary_v.data,
                                       <int*> isAdvectiveFluxBoundary_w.data,
                                       <int*> isDiffusiveFluxBoundary_u.data,
                                       <int*> isDiffusiveFluxBoundary_v.data,
                                       <int*> isDiffusiveFluxBoundary_w.data,
                                       <double*> ebqe_bc_p_ext.data,
                                       <double*> ebqe_bc_flux_mass_ext.data,
                                       <double*> ebqe_bc_flux_mom_u_adv_ext.data,
                                       <double*> ebqe_bc_flux_mom_v_adv_ext.data,
                                       <double*> ebqe_bc_flux_mom_w_adv_ext.data,
                                       <double*> ebqe_bc_u_ext.data,
                                       <double*> ebqe_bc_flux_u_diff_ext.data,
                                       <double*> ebqe_penalty_ext.data,
                                       <double*> ebqe_bc_v_ext.data,
                                       <double*> ebqe_bc_flux_v_diff_ext.data,
                                       <double*> ebqe_bc_w_ext.data,
                                       <double*> ebqe_bc_flux_w_diff_ext.data,
                                       <double*> q_velocity.data,
                                       <double*> ebqe_velocity.data,
                                       <double*> flux.data,
                                       <double*> elementResidual_p.data)			       
   def calculateJacobian(self,
                         numpy.ndarray mesh_trial_ref,
                         numpy.ndarray mesh_grad_trial_ref,
                         numpy.ndarray mesh_dof,
                         numpy.ndarray mesh_velocity_dof,
                         double MOVING_DOMAIN,
                         numpy.ndarray mesh_l2g,
                         numpy.ndarray dV_ref,
                         numpy.ndarray p_trial_ref,
                         numpy.ndarray p_grad_trial_ref,
                         numpy.ndarray p_test_ref,
                         numpy.ndarray p_grad_test_ref,
                         numpy.ndarray vel_trial_ref,
                         numpy.ndarray vel_grad_trial_ref,
                         numpy.ndarray vel_test_ref,
                         numpy.ndarray vel_grad_test_ref,
                         numpy.ndarray mesh_trial_trace_ref,
                         numpy.ndarray mesh_grad_trial_trace_ref,
                         numpy.ndarray dS_ref,
                         numpy.ndarray p_trial_trace_ref,
                         numpy.ndarray p_grad_trial_trace_ref,
                         numpy.ndarray p_test_trace_ref,
                         numpy.ndarray p_grad_test_trace_ref,
                         numpy.ndarray vel_trial_trace_ref,
                         numpy.ndarray vel_grad_trial_trace_ref,
                         numpy.ndarray vel_test_trace_ref,
                         numpy.ndarray vel_grad_test_trace_ref,					 
                         numpy.ndarray normal_ref,
                         numpy.ndarray boundaryJac_ref,
                         numpy.ndarray elementDiameter,
                         double hFactor,
                         int nElements_global,
			 double useRBLES,
			 double useMetrics, 
                         double alphaBDF,
                         double epsFact_rho,
                         double epsFact_mu,
                         double sigma,
                         double rho_0,
                         double nu_0,
                         double rho_1,
                         double nu_1,
                         double Ct_sge,
                         double Cd_sge,
                         double C_dg,
                         numpy.ndarray p_l2g, 
                         numpy.ndarray vel_l2g,
                         numpy.ndarray C_dof, numpy.ndarray p_dof, numpy.ndarray u_dof, numpy.ndarray v_dof, numpy.ndarray w_dof,
                         numpy.ndarray g,
                         numpy.ndarray q_sedimentForce,
                         numpy.ndarray phi,
                         numpy.ndarray normal_phi,
                         numpy.ndarray kappa_phi,
                         numpy.ndarray q_mass_acc_beta_bdf, numpy.ndarray q_mom_u_acc_beta_bdf, numpy.ndarray q_mom_v_acc_beta_bdf, numpy.ndarray q_mom_w_acc_beta_bdf,
                         numpy.ndarray q_velocity_sge,
                         numpy.ndarray q_cfl,
                         numpy.ndarray q_numDiff_u_last, numpy.ndarray q_numDiff_v_last, numpy.ndarray q_numDiff_w_last,
                         numpy.ndarray sdInfo_u_u_rowptr,numpy.ndarray sdInfo_u_u_colind,			      
                         numpy.ndarray sdInfo_u_v_rowptr,numpy.ndarray sdInfo_u_v_colind,
                         numpy.ndarray sdInfo_u_w_rowptr,numpy.ndarray sdInfo_u_w_colind,
                         numpy.ndarray sdInfo_v_v_rowptr,numpy.ndarray sdInfo_v_v_colind,
                         numpy.ndarray sdInfo_v_u_rowptr,numpy.ndarray sdInfo_v_u_colind,
                         numpy.ndarray sdInfo_v_w_rowptr,numpy.ndarray sdInfo_v_w_colind,
                         numpy.ndarray sdInfo_w_w_rowptr,numpy.ndarray sdInfo_w_w_colind,
                         numpy.ndarray sdInfo_w_u_rowptr,numpy.ndarray sdInfo_w_u_colind,
                         numpy.ndarray sdInfo_w_v_rowptr,numpy.ndarray sdInfo_w_v_colind,
                         numpy.ndarray csrRowIndeces_p_p,numpy.ndarray csrColumnOffsets_p_p,
                         numpy.ndarray csrRowIndeces_p_u,numpy.ndarray csrColumnOffsets_p_u,
                         numpy.ndarray csrRowIndeces_p_v,numpy.ndarray csrColumnOffsets_p_v,
                         numpy.ndarray csrRowIndeces_p_w,numpy.ndarray csrColumnOffsets_p_w,
                         numpy.ndarray csrRowIndeces_u_p,numpy.ndarray csrColumnOffsets_u_p,
                         numpy.ndarray csrRowIndeces_u_u,numpy.ndarray csrColumnOffsets_u_u,
                         numpy.ndarray csrRowIndeces_u_v,numpy.ndarray csrColumnOffsets_u_v,
                         numpy.ndarray csrRowIndeces_u_w,numpy.ndarray csrColumnOffsets_u_w,
                         numpy.ndarray csrRowIndeces_v_p,numpy.ndarray csrColumnOffsets_v_p,
                         numpy.ndarray csrRowIndeces_v_u,numpy.ndarray csrColumnOffsets_v_u,
                         numpy.ndarray csrRowIndeces_v_v,numpy.ndarray csrColumnOffsets_v_v,
                         numpy.ndarray csrRowIndeces_v_w,numpy.ndarray csrColumnOffsets_v_w,
                         numpy.ndarray csrRowIndeces_w_p,numpy.ndarray csrColumnOffsets_w_p,
                         numpy.ndarray csrRowIndeces_w_u,numpy.ndarray csrColumnOffsets_w_u,
                         numpy.ndarray csrRowIndeces_w_v,numpy.ndarray csrColumnOffsets_w_v,
                         numpy.ndarray csrRowIndeces_w_w,numpy.ndarray csrColumnOffsets_w_w,
                         globalJacobian,
                         int nExteriorElementBoundaries_global,
                         numpy.ndarray exteriorElementBoundariesArray,
                         numpy.ndarray elementBoundaryElementsArray,
                         numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                         numpy.ndarray ebqe_phi_ext,
                         numpy.ndarray ebqe_normal_phi_ext,
                         numpy.ndarray ebqe_kappa_phi_ext,
                         numpy.ndarray isDOFBoundary_p,
                         numpy.ndarray isDOFBoundary_u,
                         numpy.ndarray isDOFBoundary_v,
                         numpy.ndarray isDOFBoundary_w,
                         numpy.ndarray isAdvectiveFluxBoundary_p,
                         numpy.ndarray isAdvectiveFluxBoundary_u,
                         numpy.ndarray isAdvectiveFluxBoundary_v,
                         numpy.ndarray isAdvectiveFluxBoundary_w,
                         numpy.ndarray isDiffusiveFluxBoundary_u,
                         numpy.ndarray isDiffusiveFluxBoundary_v,
                         numpy.ndarray isDiffusiveFluxBoundary_w,
                         numpy.ndarray ebqe_bc_p_ext,
                         numpy.ndarray ebqe_bc_flux_mass_ext,
                         numpy.ndarray ebqe_bc_flux_mom_u_adv_ext,
                         numpy.ndarray ebqe_bc_flux_mom_v_adv_ext,
                         numpy.ndarray ebqe_bc_flux_mom_w_adv_ext,
                         numpy.ndarray ebqe_bc_u_ext,
                         numpy.ndarray ebqe_bc_flux_u_diff_ext,
                         numpy.ndarray ebqe_penalty_ext,
                         numpy.ndarray ebqe_bc_v_ext,
                         numpy.ndarray ebqe_bc_flux_v_diff_ext,
                         numpy.ndarray ebqe_bc_w_ext,
                         numpy.ndarray ebqe_bc_flux_w_diff_ext,
                         numpy.ndarray csrColumnOffsets_eb_p_p,
                         numpy.ndarray csrColumnOffsets_eb_p_u,
                         numpy.ndarray csrColumnOffsets_eb_p_v,
                         numpy.ndarray csrColumnOffsets_eb_p_w,
                         numpy.ndarray csrColumnOffsets_eb_u_p,
                         numpy.ndarray csrColumnOffsets_eb_u_u,
                         numpy.ndarray csrColumnOffsets_eb_u_v,
                         numpy.ndarray csrColumnOffsets_eb_u_w,
                         numpy.ndarray csrColumnOffsets_eb_v_p,
                         numpy.ndarray csrColumnOffsets_eb_v_u,
                         numpy.ndarray csrColumnOffsets_eb_v_v,
                         numpy.ndarray csrColumnOffsets_eb_v_w,
                         numpy.ndarray csrColumnOffsets_eb_w_p,
                         numpy.ndarray csrColumnOffsets_eb_w_u,
                         numpy.ndarray csrColumnOffsets_eb_w_v,
                         numpy.ndarray csrColumnOffsets_eb_w_w):
       cdef numpy.ndarray rowptr,colind,globalJacobian_a
       (rowptr,colind,globalJacobian_a) = globalJacobian.getCSRrepresentation()
       self.thisptr.calculateJacobian(<double*> mesh_trial_ref.data,
                                       <double*> mesh_grad_trial_ref.data,
                                       <double*> mesh_dof.data,
                                       <double*> mesh_velocity_dof.data,
                                       MOVING_DOMAIN,
                                       <int*> mesh_l2g.data,
                                       <double*> dV_ref.data,
                                       <double*> p_trial_ref.data,
                                       <double*> p_grad_trial_ref.data,
                                       <double*> p_test_ref.data,
                                       <double*> p_grad_test_ref.data,
                                       <double*> vel_trial_ref.data,
                                       <double*> vel_grad_trial_ref.data,
                                       <double*> vel_test_ref.data,
                                       <double*> vel_grad_test_ref.data,
                                       <double*> mesh_trial_trace_ref.data,
                                       <double*> mesh_grad_trial_trace_ref.data,
                                       <double*> dS_ref.data,
                                       <double*> p_trial_trace_ref.data,
                                       <double*> p_grad_trial_trace_ref.data,
                                       <double*> p_test_trace_ref.data,
                                       <double*> p_grad_test_trace_ref.data,
                                       <double*> vel_trial_trace_ref.data,
                                       <double*> vel_grad_trial_trace_ref.data,
                                       <double*> vel_test_trace_ref.data,
                                       <double*> vel_grad_test_trace_ref.data,					 
                                       <double*> normal_ref.data,
                                       <double*> boundaryJac_ref.data,
                                       <double*> elementDiameter.data,
                                       hFactor,
                                       nElements_global,
                                       useRBLES,
                                       useMetrics, 
                                       alphaBDF,
                                       epsFact_rho,
                                       epsFact_mu,
                                       sigma,
                                       rho_0,
                                       nu_0,
                                       rho_1,
                                       nu_1,
                                       Ct_sge,
                                       Cd_sge,
                                       C_dg,
                                       <int*> p_l2g.data, 
                                       <int*> vel_l2g.data,
                                       <double*> C_dof.data,<double*> p_dof.data, <double*> u_dof.data, <double*> v_dof.data, <double*> w_dof.data,
                                       <double*> g.data,
                                       <double*> q_sedimentForce.data,
                                       <double*> phi.data,
                                       <double*> normal_phi.data,
                                       <double*> kappa_phi.data,
                                       <double*> q_mass_acc_beta_bdf.data, <double*> q_mom_u_acc_beta_bdf.data, <double*> q_mom_v_acc_beta_bdf.data, <double*> q_mom_w_acc_beta_bdf.data,
                                       <double*> q_velocity_sge.data,
                                       <double*> q_cfl.data,
                                       <double*> q_numDiff_u_last.data, <double*> q_numDiff_v_last.data, <double*> q_numDiff_w_last.data,
                                       <int*> sdInfo_u_u_rowptr.data,<int*> sdInfo_u_u_colind.data,			      
                                       <int*> sdInfo_u_v_rowptr.data,<int*> sdInfo_u_v_colind.data,
                                       <int*> sdInfo_u_w_rowptr.data,<int*> sdInfo_u_w_colind.data,
                                       <int*> sdInfo_v_v_rowptr.data,<int*> sdInfo_v_v_colind.data,
                                       <int*> sdInfo_v_u_rowptr.data,<int*> sdInfo_v_u_colind.data,
                                       <int*> sdInfo_v_w_rowptr.data,<int*> sdInfo_v_w_colind.data,
                                       <int*> sdInfo_w_w_rowptr.data,<int*> sdInfo_w_w_colind.data,
                                       <int*> sdInfo_w_u_rowptr.data,<int*> sdInfo_w_u_colind.data,
                                       <int*> sdInfo_w_v_rowptr.data,<int*> sdInfo_w_v_colind.data,
                                       <int*> csrRowIndeces_p_p.data,<int*> csrColumnOffsets_p_p.data,
                                       <int*> csrRowIndeces_p_u.data,<int*> csrColumnOffsets_p_u.data,
                                       <int*> csrRowIndeces_p_v.data,<int*> csrColumnOffsets_p_v.data,
                                       <int*> csrRowIndeces_p_w.data,<int*> csrColumnOffsets_p_w.data,
                                       <int*> csrRowIndeces_u_p.data,<int*> csrColumnOffsets_u_p.data,
                                       <int*> csrRowIndeces_u_u.data,<int*> csrColumnOffsets_u_u.data,
                                       <int*> csrRowIndeces_u_v.data,<int*> csrColumnOffsets_u_v.data,
                                       <int*> csrRowIndeces_u_w.data,<int*> csrColumnOffsets_u_w.data,
                                       <int*> csrRowIndeces_v_p.data,<int*> csrColumnOffsets_v_p.data,
                                       <int*> csrRowIndeces_v_u.data,<int*> csrColumnOffsets_v_u.data,
                                       <int*> csrRowIndeces_v_v.data,<int*> csrColumnOffsets_v_v.data,
                                       <int*> csrRowIndeces_v_w.data,<int*> csrColumnOffsets_v_w.data,
                                       <int*> csrRowIndeces_w_p.data,<int*> csrColumnOffsets_w_p.data,
                                       <int*> csrRowIndeces_w_u.data,<int*> csrColumnOffsets_w_u.data,
                                       <int*> csrRowIndeces_w_v.data,<int*> csrColumnOffsets_w_v.data,
                                       <int*> csrRowIndeces_w_w.data,<int*> csrColumnOffsets_w_w.data,
                                       <double*> globalJacobian_a.data,
                                       nExteriorElementBoundaries_global,
                                       <int*> exteriorElementBoundariesArray.data,
                                       <int*> elementBoundaryElementsArray.data,
                                       <int*> elementBoundaryLocalElementBoundariesArray.data,
                                       <double*> ebqe_phi_ext.data,
                                       <double*> ebqe_normal_phi_ext.data,
                                       <double*> ebqe_kappa_phi_ext.data,
                                       <int*> isDOFBoundary_p.data,
                                       <int*> isDOFBoundary_u.data,
                                       <int*> isDOFBoundary_v.data,
                                       <int*> isDOFBoundary_w.data,
                                       <int*> isAdvectiveFluxBoundary_p.data,
                                       <int*> isAdvectiveFluxBoundary_u.data,
                                       <int*> isAdvectiveFluxBoundary_v.data,
                                       <int*> isAdvectiveFluxBoundary_w.data,
                                       <int*> isDiffusiveFluxBoundary_u.data,
                                       <int*> isDiffusiveFluxBoundary_v.data,
                                       <int*> isDiffusiveFluxBoundary_w.data,
                                       <double*> ebqe_bc_p_ext.data,
                                       <double*> ebqe_bc_flux_mass_ext.data,
                                       <double*> ebqe_bc_flux_mom_u_adv_ext.data,
                                       <double*> ebqe_bc_flux_mom_v_adv_ext.data,
                                       <double*> ebqe_bc_flux_mom_w_adv_ext.data,
                                       <double*> ebqe_bc_u_ext.data,
                                       <double*> ebqe_bc_flux_u_diff_ext.data,
                                       <double*> ebqe_penalty_ext.data,
                                       <double*> ebqe_bc_v_ext.data,
                                       <double*> ebqe_bc_flux_v_diff_ext.data,
                                       <double*> ebqe_bc_w_ext.data,
                                       <double*> ebqe_bc_flux_w_diff_ext.data,
                                       <int*> csrColumnOffsets_eb_p_p.data,
                                       <int*> csrColumnOffsets_eb_p_u.data,
                                       <int*> csrColumnOffsets_eb_p_v.data,
                                       <int*> csrColumnOffsets_eb_p_w.data,
                                       <int*> csrColumnOffsets_eb_u_p.data,
                                       <int*> csrColumnOffsets_eb_u_u.data,
                                       <int*> csrColumnOffsets_eb_u_v.data,
                                       <int*> csrColumnOffsets_eb_u_w.data,
                                       <int*> csrColumnOffsets_eb_v_p.data,
                                       <int*> csrColumnOffsets_eb_v_u.data,
                                       <int*> csrColumnOffsets_eb_v_v.data,
                                       <int*> csrColumnOffsets_eb_v_w.data,
                                       <int*> csrColumnOffsets_eb_w_p.data,
                                       <int*> csrColumnOffsets_eb_w_u.data,
                                       <int*> csrColumnOffsets_eb_w_v.data,
                                       <int*> csrColumnOffsets_eb_w_w.data)
   def calculateVelocityAverage(self,
                                int nExteriorElementBoundaries_global,
                                numpy.ndarray exteriorElementBoundariesArray,
                                int nInteriorElementBoundaries_global,
                                numpy.ndarray interiorElementBoundariesArray,
                                numpy.ndarray elementBoundaryElementsArray,
                                numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                                numpy.ndarray mesh_dof,
                                numpy.ndarray mesh_l2g,
                                numpy.ndarray mesh_trial_trace_ref,
                                numpy.ndarray mesh_grad_trial_trace_ref,
                                numpy.ndarray normal_ref,
                                numpy.ndarray boundaryJac_ref,
                                numpy.ndarray vel_l2g,
                                numpy.ndarray u_dof, 
                                numpy.ndarray v_dof, 
                                numpy.ndarray w_dof,
                                numpy.ndarray vel_trial_trace_ref,
                                numpy.ndarray ebqe_velocity,
                                numpy.ndarray velocityAverage):
       self.thisptr.calculateVelocityAverage(nExteriorElementBoundaries_global,
                                             <int*> exteriorElementBoundariesArray.data,
                                             nInteriorElementBoundaries_global,
                                             <int*> interiorElementBoundariesArray.data,
                                             <int*> elementBoundaryElementsArray.data,
                                             <int*> elementBoundaryLocalElementBoundariesArray.data,
                                             <double*> mesh_dof.data,
                                             <int*> mesh_l2g.data,
                                             <double*> mesh_trial_trace_ref.data,
                                             <double*> mesh_grad_trial_trace_ref.data,
                                             <double*> normal_ref.data,
                                             <double*> boundaryJac_ref.data,
                                             <int*> vel_l2g.data,
                                             <double*> u_dof.data, 
                                             <double*> v_dof.data, 
                                             <double*> w_dof.data,
                                             <double*> vel_trial_trace_ref.data,
                                             <double*> ebqe_velocity.data,
                                             <double*> velocityAverage.data)


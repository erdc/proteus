# A type of -*- python -*- file
import numpy
cimport numpy
from proteus import *
from proteus.Transport import *
from proteus.Transport import OneLevelTransport

cdef extern from "SW2DCV.h" namespace "proteus":
    cdef cppclass SW2DCV_base:
        void FCTStep(double dt,
                     int NNZ,
                     int numDOFs,
                     double * lumped_mass_matrix,
                     double * h_old,
                     double * hu_old,
                     double * hv_old,
                     double * b_dof,
                     double * high_order_hnp1,
                     double * high_order_hunp1,
                     double * high_order_hvnp1,
                     double * extendedSourceTerm_hu,
                     double * extendedSourceTerm_hv,
                     double * limited_hnp1,
                     double * limited_hunp1,
                     double * limited_hvnp1,
                     int * csrRowIndeces_DofLoops,
                     int * csrColumnOffsets_DofLoops,
                     double * MassMatrix,
                     double * dH_minus_dL,
                     double * muH_minus_muL,
                     double hEps,
                     double * hReg,
                     int LUMPED_MASS_MATRIX,
                     double * dLow,
                     double * hBT,
                     double * huBT,
                     double * hvBT)
        void convexLimiting(double dt,
                            int NNZ,
                            int numDOFs,
                            double * lumped_mass_matrix,
                            double * h_old,
                            double * hu_old,
                            double * hv_old,
                            double * b_dof,
                            double * high_order_hnp1,
                            double * high_order_hunp1,
                            double * high_order_hvnp1,
                            double * extendedSourceTerm_hu,
                            double * extendedSourceTerm_hv,
                            double * limited_hnp1,
                            double * limited_hunp1,
                            double * limited_hvnp1,
                            int * csrRowIndeces_DofLoops,
                            int * csrColumnOffsets_DofLoops,
                            double * MassMatrix,
                            double * dH_minus_dL,
                            double * muH_minus_muL,
                            double hEps,
                            double * hReg,
                            int LUMPED_MASS_MATRIX,
                            double * dLow,
                            double * hBT,
                            double * huBT,
                            double * hvBT)
        double calculateEdgeBasedCFL(
            double g,
            int numDOFsPerEqn,
            double * lumped_mass_matrix,
            double * h_old,
            double * hu_old,
            double * hv_old,
            double * b_dof,
            int * csrRowIndeces_DofLoops,
            int * csrColumnOffsets_DofLoops,
            double hEps,
            double * hReg,
            double * Cx,
            double * Cy,
            double * CTx,
            double * CTy,
            double * dLow,
            double run_cfl,
            double * edge_based_cfl,
            int debug)
        void calculateResidual(double * mesh_trial_ref,
                               double * mesh_grad_trial_ref,
                               double * mesh_dof,
                               double * mesh_velocity_dof,
                               double MOVING_DOMAIN,
                               int * mesh_l2g,
                               double * dV_ref,
                               double * h_trial_ref,
                               double * h_grad_trial_ref,
                               double * h_test_ref,
                               double * h_grad_test_ref,
                               double * vel_trial_ref,
                               double * vel_grad_trial_ref,
                               double * vel_test_ref,
                               double * vel_grad_test_ref,
                               double * mesh_trial_trace_ref,
                               double * mesh_grad_trial_trace_ref,
                               double * dS_ref,
                               double * h_trial_trace_ref,
                               double * h_grad_trial_trace_ref,
                               double * h_test_trace_ref,
                               double * h_grad_test_trace_ref,
                               double * vel_trial_trace_ref,
                               double * vel_grad_trial_trace_ref,
                               double * vel_test_trace_ref,
                               double * vel_grad_test_trace_ref,
                               double * normal_ref,
                               double * boundaryJac_ref,
                               double * elementDiameter,
                               int nElements_global,
                               double useRBLES,
                               double useMetrics,
                               double alphaBDF,
                               double nu,
                               double g,
                               int * h_l2g,
                               int * vel_l2g,
                               double * h_dof_old,
                               double * hu_dof_old,
                               double * hv_dof_old,
                               double * b_dof,
                               double * h_dof,
                               double * hu_dof,
                               double * hv_dof,
                               double * h_dof_sge,
                               double * hu_dof_sge,
                               double * hv_dof_sge,
                               double * q_mass_acc,
                               double * q_mom_u_acc,
                               double * q_mom_v_acc,
                               double * q_mass_adv,
                               double * q_mass_acc_beta_bdf,
                               double * q_mom_u_acc_beta_bdf,
                               double * q_mom_v_acc_beta_bdf,
                               double * q_cfl,
                               int * sdInfo_u_u_rowptr,
                               int * sdInfo_u_u_colind,
                               int * sdInfo_u_v_rowptr,
                               int * sdInfo_u_v_colind,
                               int * sdInfo_v_v_rowptr,
                               int * sdInfo_v_v_colind,
                               int * sdInfo_v_u_rowptr,
                               int * sdInfo_v_u_colind,
                               int offset_h,
                               int offset_u,
                               int offset_v,
                               int stride_h,
                               int stride_u,
                               int stride_v,
                               double * globalResidual,
                               int nExteriorElementBoundaries_global,
                               int * exteriorElementBoundariesArray,
                               int * elementBoundaryElementsArray,
                               int * elementBoundaryLocalElementBoundariesArray,
                               int * isDOFBoundary_h,
                               int * isDOFBoundary_u,
                               int * isDOFBoundary_v,
                               int * isAdvectiveFluxBoundary_h,
                               int * isAdvectiveFluxBoundary_u,
                               int * isAdvectiveFluxBoundary_v,
                               int * isDiffusiveFluxBoundary_u,
                               int * isDiffusiveFluxBoundary_v,
                               double * ebqe_bc_h_ext,
                               double * ebqe_bc_flux_mass_ext,
                               double * ebqe_bc_flux_mom_u_adv_ext,
                               double * ebqe_bc_flux_mom_v_adv_ext,
                               double * ebqe_bc_u_ext,
                               double * ebqe_bc_flux_u_diff_ext,
                               double * ebqe_henalty_ext,
                               double * ebqe_bc_v_ext,
                               double * ebqe_bc_flux_v_diff_ext,
                               double * q_velocity,
                               double * ebqe_velocity,
                               double * flux,
                               double * elementResidual_h,
                               double * Cx,
                               double * Cy,
                               double * CTx,
                               double * CTy,
                               int numDOFsPerEqn,
                               int NNZ,
                               int * csrRowIndeces_DofLoops,
                               int * csrColumnOffsets_DofLoops,
                               double * lumped_mass_matrix,
                               double cfl_run,
                               double hEps,
                               double * hReg,
                               double * hnp1_at_quad_point,
                               double * hunp1_at_quad_point,
                               double * hvnp1_at_quad_point,
                               double * extendedSourceTerm_hu,
                               double * extendedSourceTerm_hv,
                               double * dH_minus_dL,
                               double * muH_minus_muL,
                               double cE,
                               int LUMPED_MASS_MATRIX,
                               double dt,
                               int LINEAR_FRICTION,
                               double mannings,
                               double * quantDOFs,
                               int SECOND_CALL_CALCULATE_RESIDUAL,
                               int COMPUTE_NORMALS,
                               double * normalx,
                               double * normaly,
                               double * dLow,
                               double * hBT,
                               double * huBT,
                               double * hvBT,
                               int lstage)
        void calculateMassMatrix(double * mesh_trial_ref,
                                 double * mesh_grad_trial_ref,
                                 double * mesh_dof,
                                 double * mesh_velocity_dof,
                                 double MOVING_DOMAIN,
                                 int * mesh_l2g,
                                 double * dV_ref,
                                 double * h_trial_ref,
                                 double * h_grad_trial_ref,
                                 double * h_test_ref,
                                 double * h_grad_test_ref,
                                 double * vel_trial_ref,
                                 double * vel_grad_trial_ref,
                                 double * vel_test_ref,
                                 double * vel_grad_test_ref,
                                 double * mesh_trial_trace_ref,
                                 double * mesh_grad_trial_trace_ref,
                                 double * dS_ref,
                                 double * h_trial_trace_ref,
                                 double * h_grad_trial_trace_ref,
                                 double * h_test_trace_ref,
                                 double * h_grad_test_trace_ref,
                                 double * vel_trial_trace_ref,
                                 double * vel_grad_trial_trace_ref,
                                 double * vel_test_trace_ref,
                                 double * vel_grad_test_trace_ref,
                                 double * normal_ref,
                                 double * boundaryJac_ref,
                                 double * elementDiameter,
                                 int nElements_global,
                                 double useRBLES,
                                 double useMetrics,
                                 double alphaBDF,
                                 double nu,
                                 double g,
                                 int * h_l2g,
                                 int * vel_l2g,
                                 double * b_dof,
                                 double * h_dof,
                                 double * hu_dof,
                                 double * hv_dof,
                                 double * h_dof_sge,
                                 double * hu_dof_sge,
                                 double * hv_dof_sge,
                                 double * q_mass_acc_bdf,
                                 double * q_mom_u_acc_beta_bdf,
                                 double * q_mom_v_acc_beta_bdf,
                                 double * q_cfl,
                                 int * sdInfo_u_u_rowptr,
                                 int * sdInfo_u_u_colind,
                                 int * sdInfo_u_v_rowptr,
                                 int * sdInfo_u_v_colind,
                                 int * sdInfo_v_v_rowptr,
                                 int * sdInfo_v_v_colind,
                                 int * sdInfo_v_u_rowptr,
                                 int * sdInfo_v_u_colind,
                                 int * csrRowIndeces_h_h,
                                 int * csrColumnOffsets_h_h,
                                 int * csrRowIndeces_h_u,
                                 int * csrColumnOffsets_h_u,
                                 int * csrRowIndeces_h_v,
                                 int * csrColumnOffsets_h_v,
                                 int * csrRowIndeces_u_h,
                                 int * csrColumnOffsets_u_h,
                                 int * csrRowIndeces_u_u,
                                 int * csrColumnOffsets_u_u,
                                 int * csrRowIndeces_u_v,
                                 int * csrColumnOffsets_u_v,
                                 int * csrRowIndeces_v_h,
                                 int * csrColumnOffsets_v_h,
                                 int * csrRowIndeces_v_u,
                                 int * csrColumnOffsets_v_u,
                                 int * csrRowIndeces_v_v,
                                 int * csrColumnOffsets_v_v,
                                 double * globalJacobian,
                                 int nExteriorElementBoundaries_global,
                                 int * exteriorElementBoundariesArray,
                                 int * elementBoundaryElementsArray,
                                 int * elementBoundaryLocalElementBoundariesArray,
                                 int * isDOFBoundary_h,
                                 int * isDOFBoundary_u,
                                 int * isDOFBoundary_v,
                                 int * isAdvectiveFluxBoundary_h,
                                 int * isAdvectiveFluxBoundary_u,
                                 int * isAdvectiveFluxBoundary_v,
                                 int * isDiffusiveFluxBoundary_u,
                                 int * isDiffusiveFluxBoundary_v,
                                 double * ebqe_bc_h_ext,
                                 double * ebqe_bc_flux_mass_ext,
                                 double * ebqe_bc_flux_mom_u_adv_ext,
                                 double * ebqe_bc_flux_mom_v_adv_ext,
                                 double * ebqe_bc_u_ext,
                                 double * ebqe_bc_flux_u_diff_ext,
                                 double * ebqe_henalty_ext,
                                 double * ebqe_bc_v_ext,
                                 double * ebqe_bc_flux_v_diff_ext,
                                 int * csrColumnOffsets_eb_h_h,
                                 int * csrColumnOffsets_eb_h_u,
                                 int * csrColumnOffsets_eb_h_v,
                                 int * csrColumnOffsets_eb_u_h,
                                 int * csrColumnOffsets_eb_u_u,
                                 int * csrColumnOffsets_eb_u_v,
                                 int * csrColumnOffsets_eb_v_h,
                                 int * csrColumnOffsets_eb_v_u,
                                 int * csrColumnOffsets_eb_v_v,
                                 double dt)
        void calculateLumpedMassMatrix(double * mesh_trial_ref,
                                       double * mesh_grad_trial_ref,
                                       double * mesh_dof,
                                       double * mesh_velocity_dof,
                                       double MOVING_DOMAIN,
                                       int * mesh_l2g,
                                       double * dV_ref,
                                       double * h_trial_ref,
                                       double * h_grad_trial_ref,
                                       double * h_test_ref,
                                       double * h_grad_test_ref,
                                       double * vel_trial_ref,
                                       double * vel_grad_trial_ref,
                                       double * vel_test_ref,
                                       double * vel_grad_test_ref,
                                       double * mesh_trial_trace_ref,
                                       double * mesh_grad_trial_trace_ref,
                                       double * dS_ref,
                                       double * h_trial_trace_ref,
                                       double * h_grad_trial_trace_ref,
                                       double * h_test_trace_ref,
                                       double * h_grad_test_trace_ref,
                                       double * vel_trial_trace_ref,
                                       double * vel_grad_trial_trace_ref,
                                       double * vel_test_trace_ref,
                                       double * vel_grad_test_trace_ref,
                                       double * normal_ref,
                                       double * boundaryJac_ref,
                                       double * elementDiameter,
                                       int nElements_global,
                                       double useRBLES,
                                       double useMetrics,
                                       double alphaBDF,
                                       double nu,
                                       double g,
                                       int * h_l2g,
                                       int * vel_l2g,
                                       double * b_dof,
                                       double * h_dof,
                                       double * hu_dof,
                                       double * hv_dof,
                                       double * h_dof_sge,
                                       double * hu_dof_sge,
                                       double * hv_dof_sge,
                                       double * q_mass_acc_bdf,
                                       double * q_mom_u_acc_beta_bdf,
                                       double * q_mom_v_acc_beta_bdf,
                                       double * q_cfl,
                                       int * sdInfo_u_u_rowptr,
                                       int * sdInfo_u_u_colind,
                                       int * sdInfo_u_v_rowptr,
                                       int * sdInfo_u_v_colind,
                                       int * sdInfo_v_v_rowptr,
                                       int * sdInfo_v_v_colind,
                                       int * sdInfo_v_u_rowptr,
                                       int * sdInfo_v_u_colind,
                                       int * csrRowIndeces_h_h,
                                       int * csrColumnOffsets_h_h,
                                       int * csrRowIndeces_h_u,
                                       int * csrColumnOffsets_h_u,
                                       int * csrRowIndeces_h_v,
                                       int * csrColumnOffsets_h_v,
                                       int * csrRowIndeces_u_h,
                                       int * csrColumnOffsets_u_h,
                                       int * csrRowIndeces_u_u,
                                       int * csrColumnOffsets_u_u,
                                       int * csrRowIndeces_u_v,
                                       int * csrColumnOffsets_u_v,
                                       int * csrRowIndeces_v_h,
                                       int * csrColumnOffsets_v_h,
                                       int * csrRowIndeces_v_u,
                                       int * csrColumnOffsets_v_u,
                                       int * csrRowIndeces_v_v,
                                       int * csrColumnOffsets_v_v,
                                       double * globalJacobian,
                                       int nExteriorElementBoundaries_global,
                                       int * exteriorElementBoundariesArray,
                                       int * elementBoundaryElementsArray,
                                       int * elementBoundaryLocalElementBoundariesArray,
                                       int * isDOFBoundary_h,
                                       int * isDOFBoundary_u,
                                       int * isDOFBoundary_v,
                                       int * isAdvectiveFluxBoundary_h,
                                       int * isAdvectiveFluxBoundary_u,
                                       int * isAdvectiveFluxBoundary_v,
                                       int * isDiffusiveFluxBoundary_u,
                                       int * isDiffusiveFluxBoundary_v,
                                       double * ebqe_bc_h_ext,
                                       double * ebqe_bc_flux_mass_ext,
                                       double * ebqe_bc_flux_mom_u_adv_ext,
                                       double * ebqe_bc_flux_mom_v_adv_ext,
                                       double * ebqe_bc_u_ext,
                                       double * ebqe_bc_flux_u_diff_ext,
                                       double * ebqe_henalty_ext,
                                       double * ebqe_bc_v_ext,
                                       double * ebqe_bc_flux_v_diff_ext,
                                       int * csrColumnOffsets_eb_h_h,
                                       int * csrColumnOffsets_eb_h_u,
                                       int * csrColumnOffsets_eb_h_v,
                                       int * csrColumnOffsets_eb_u_h,
                                       int * csrColumnOffsets_eb_u_u,
                                       int * csrColumnOffsets_eb_u_v,
                                       int * csrColumnOffsets_eb_v_h,
                                       int * csrColumnOffsets_eb_v_u,
                                       int * csrColumnOffsets_eb_v_v,
                                       double dt)
    SW2DCV_base * newSW2DCV(int nSpaceIn,
                            int nQuadraturePoints_elementIn,
                            int nDOF_mesh_trial_elementIn,
                            int nDOF_trial_elementIn,
                            int nDOF_test_elementIn,
                            int nQuadraturePoints_elementBoundaryIn,
                            int CompKernelFlag)

cdef class cSW2DCV_base:
    cdef SW2DCV_base * thisptr

    def __cinit__(self,
                  int nSpaceIn,
                  int nQuadraturePoints_elementIn,
                  int nDOF_mesh_trial_elementIn,
                  int nDOF_trial_elementIn,
                  int nDOF_test_elementIn,
                  int nQuadraturePoints_elementBoundaryIn,
                  int CompKernelFlag):
        self.thisptr = newSW2DCV(nSpaceIn,
                                 nQuadraturePoints_elementIn,
                                 nDOF_mesh_trial_elementIn,
                                 nDOF_trial_elementIn,
                                 nDOF_test_elementIn,
                                 nQuadraturePoints_elementBoundaryIn,
                                 CompKernelFlag)

    def __dealloc__(self):
        del self.thisptr

    def FCTStep(self,
                double dt,
                int NNZ,
                int numDOFs,
                numpy.ndarray lumped_mass_matrix,
                numpy.ndarray h_old,
                numpy.ndarray hu_old,
                numpy.ndarray hv_old,
                numpy.ndarray b_dof,
                numpy.ndarray high_order_hnp1,
                numpy.ndarray high_order_hunp1,
                numpy.ndarray high_order_hvnp1,
                numpy.ndarray extendedSourceTerm_hu,
                numpy.ndarray extendedSourceTerm_hv,
                numpy.ndarray limited_hnp1,
                numpy.ndarray limited_hunp1,
                numpy.ndarray limited_hvnp1,
                numpy.ndarray csrRowIndeces_DofLoops,
                numpy.ndarray csrColumnOffsets_DofLoops,
                numpy.ndarray MassMatrix,
                numpy.ndarray dH_minus_dL,
                numpy.ndarray muH_minus_muL,
                double hEps,
                numpy.ndarray hReg,
                int LUMPED_MASS_MATRIX,
                numpy.ndarray dLow,
                numpy.ndarray hBT,
                numpy.ndarray huBT,
                numpy.ndarray hvBT):
        self.thisptr.FCTStep(dt,
                             NNZ,
                             numDOFs,
                             < double * > lumped_mass_matrix.data,
                             < double * > h_old.data,
                             < double * > hu_old.data,
                             < double * > hv_old.data,
                             < double * > b_dof.data,
                             < double * > high_order_hnp1.data,
                             < double * > high_order_hunp1.data,
                             < double * > high_order_hvnp1.data,
                             < double * > extendedSourceTerm_hu.data,
                             < double * > extendedSourceTerm_hv.data,
                             < double * > limited_hnp1.data,
                             < double * > limited_hunp1.data,
                             < double * > limited_hvnp1.data,
                             < int * > csrRowIndeces_DofLoops.data,
                             < int * > csrColumnOffsets_DofLoops.data,
                             < double * > MassMatrix.data,
                             < double * > dH_minus_dL.data,
                             < double * > muH_minus_muL.data,
                             hEps,
                             < double * > hReg.data,
                             LUMPED_MASS_MATRIX,
                             < double * > dLow.data,
                             < double * > hBT.data,
                             < double * > huBT.data,
                             < double * > hvBT.data)
    def convexLimiting(self,
                       double dt,
                       int NNZ,
                       int numDOFs,
                       numpy.ndarray lumped_mass_matrix,
                       numpy.ndarray h_old,
                       numpy.ndarray hu_old,
                       numpy.ndarray hv_old,
                       numpy.ndarray b_dof,
                       numpy.ndarray high_order_hnp1,
                       numpy.ndarray high_order_hunp1,
                       numpy.ndarray high_order_hvnp1,
                       numpy.ndarray extendedSourceTerm_hu,
                       numpy.ndarray extendedSourceTerm_hv,
                       numpy.ndarray limited_hnp1,
                       numpy.ndarray limited_hunp1,
                       numpy.ndarray limited_hvnp1,
                       numpy.ndarray csrRowIndeces_DofLoops,
                       numpy.ndarray csrColumnOffsets_DofLoops,
                       numpy.ndarray MassMatrix,
                       numpy.ndarray dH_minus_dL,
                       numpy.ndarray muH_minus_muL,
                       double hEps,
                       numpy.ndarray hReg,
                       int LUMPED_MASS_MATRIX,
                       numpy.ndarray dLow,
                       numpy.ndarray hBT,
                       numpy.ndarray huBT,
                       numpy.ndarray hvBT):
        self.thisptr.convexLimiting(dt,
                                    NNZ,
                                    numDOFs,
                                    < double * > lumped_mass_matrix.data,
                                    < double * > h_old.data,
                                    < double * > hu_old.data,
                                    < double * > hv_old.data,
                                    < double * > b_dof.data,
                                    < double * > high_order_hnp1.data,
                                    < double * > high_order_hunp1.data,
                                    < double * > high_order_hvnp1.data,
                                    < double * > extendedSourceTerm_hu.data,
                                    < double * > extendedSourceTerm_hv.data,
                                    < double * > limited_hnp1.data,
                                    < double * > limited_hunp1.data,
                                    < double * > limited_hvnp1.data,
                                    < int * > csrRowIndeces_DofLoops.data,
                                    < int * > csrColumnOffsets_DofLoops.data,
                                    < double * > MassMatrix.data,
                                    < double * > dH_minus_dL.data,
                                    < double * > muH_minus_muL.data,
                                    hEps,
                                    < double * > hReg.data,
                                    LUMPED_MASS_MATRIX,
                                    < double * > dLow.data,
                                    < double * > hBT.data,
                                    < double * > huBT.data,
                                    < double * > hvBT.data)
    def calculateEdgeBasedCFL(self,
                              double g,
                              int numDOFsPerEqn,
                              numpy.ndarray lumped_mass_matrix,
                              numpy.ndarray h_old,
                              numpy.ndarray hu_old,
                              numpy.ndarray hv_old,
                              numpy.ndarray b_dof,
                              numpy.ndarray csrRowIndeces_DofLoops,
                              numpy.ndarray csrColumnOffsets_DofLoops,
                              double hEps,
                              numpy.ndarray hReg,
                              numpy.ndarray Cx,
                              numpy.ndarray Cy,
                              numpy.ndarray CTx,
                              numpy.ndarray CTy,
                              numpy.ndarray dLow,
                              double run_cfl,
                              numpy.ndarray edge_based_cfl,
                              int debug):
        return self.thisptr.calculateEdgeBasedCFL(
            g,
            numDOFsPerEqn,
            < double * > lumped_mass_matrix.data,
            < double * > h_old.data,
            < double * > hu_old.data,
            < double * > hv_old.data,
            < double * > b_dof.data,
            < int * > csrRowIndeces_DofLoops.data,
            < int * > csrColumnOffsets_DofLoops.data,
            hEps,
            < double * > hReg.data,
            < double * > Cx.data,
            < double * > Cy.data,
            < double * > CTx.data,
            < double * > CTy.data,
            < double * > dLow.data,
            run_cfl,
            < double * > edge_based_cfl.data,
            debug)
    def calculateResidual(self,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_velocity_dof,
                          double MOVING_DOMAIN,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray h_trial_ref,
                          numpy.ndarray h_grad_trial_ref,
                          numpy.ndarray h_test_ref,
                          numpy.ndarray h_grad_test_ref,
                          numpy.ndarray vel_trial_ref,
                          numpy.ndarray vel_grad_trial_ref,
                          numpy.ndarray vel_test_ref,
                          numpy.ndarray vel_grad_test_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray h_trial_trace_ref,
                          numpy.ndarray h_grad_trial_trace_ref,
                          numpy.ndarray h_test_trace_ref,
                          numpy.ndarray h_grad_test_trace_ref,
                          numpy.ndarray vel_trial_trace_ref,
                          numpy.ndarray vel_grad_trial_trace_ref,
                          numpy.ndarray vel_test_trace_ref,
                          numpy.ndarray vel_grad_test_trace_ref,
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          numpy.ndarray elementDiameter,
                          int nElements_global,
                          double useRBLES,
                          double useMetrics,
                          double alphaBDF,
                          double nu,
                          double g,
                          numpy.ndarray h_l2g,
                          numpy.ndarray vel_l2g,
                          numpy.ndarray h_dof_old,
                          numpy.ndarray hu_dof_old,
                          numpy.ndarray hv_dof_old,
                          numpy.ndarray b_dof,
                          numpy.ndarray h_dof,
                          numpy.ndarray hu_dof,
                          numpy.ndarray hv_dof,
                          numpy.ndarray h_dof_sge,
                          numpy.ndarray hu_dof_sge,
                          numpy.ndarray hv_dof_sge,
                          numpy.ndarray q_mass_acc,
                          numpy.ndarray q_mom_u_acc,
                          numpy.ndarray q_mom_v_acc,
                          numpy.ndarray q_mass_adv,
                          numpy.ndarray q_mass_acc_beta_bdf,
                          numpy.ndarray q_mom_u_acc_beta_bdf,
                          numpy.ndarray q_mom_v_acc_beta_bdf,
                          numpy.ndarray q_cfl,
                          numpy.ndarray sdInfo_u_u_rowptr,
                          numpy.ndarray sdInfo_u_u_colind,
                          numpy.ndarray sdInfo_u_v_rowptr,
                          numpy.ndarray sdInfo_u_v_colind,
                          numpy.ndarray sdInfo_v_v_rowptr,
                          numpy.ndarray sdInfo_v_v_colind,
                          numpy.ndarray sdInfo_v_u_rowptr,
                          numpy.ndarray sdInfo_v_u_colind,
                          int offset_h,
                          int offset_u,
                          int offset_v,
                          int stride_h,
                          int stride_u,
                          int stride_v,
                          numpy.ndarray globalResidual,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray isDOFBoundary_h,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray isDOFBoundary_v,
                          numpy.ndarray isAdvectiveFluxBoundary_h,
                          numpy.ndarray isAdvectiveFluxBoundary_u,
                          numpy.ndarray isAdvectiveFluxBoundary_v,
                          numpy.ndarray isDiffusiveFluxBoundary_u,
                          numpy.ndarray isDiffusiveFluxBoundary_v,
                          numpy.ndarray ebqe_bc_h_ext,
                          numpy.ndarray ebqe_bc_flux_mass_ext,
                          numpy.ndarray ebqe_bc_flux_mom_u_adv_ext,
                          numpy.ndarray ebqe_bc_flux_mom_v_adv_ext,
                          numpy.ndarray ebqe_bc_u_ext,
                          numpy.ndarray ebqe_bc_flux_u_diff_ext,
                          numpy.ndarray ebqe_henalty_ext,
                          numpy.ndarray ebqe_bc_v_ext,
                          numpy.ndarray ebqe_bc_flux_v_diff_ext,
                          numpy.ndarray q_velocity,
                          numpy.ndarray ebqe_velocity,
                          numpy.ndarray flux,
                          numpy.ndarray elementResidual_h,
                          numpy.ndarray Cx,
                          numpy.ndarray Cy,
                          numpy.ndarray CTx,
                          numpy.ndarray CTy,
                          int numDOFsPerEqn,
                          int NNZ,
                          numpy.ndarray csrRowIndeces_DofLoops,
                          numpy.ndarray csrColumnOffsets_DofLoops,
                          numpy.ndarray lumped_mass_matrix,
                          double cfl_run,
                          double hEps,
                          numpy.ndarray hReg,
                          numpy.ndarray hnp1_at_quad_point,
                          numpy.ndarray hunp1_at_quad_point,
                          numpy.ndarray hvnp1_at_quad_point,
                          numpy.ndarray extendedSourceTerm_hu,
                          numpy.ndarray extendedSourceTerm_hv,
                          numpy.ndarray dH_minus_dL,
                          numpy.ndarray muH_minus_muL,
                          double cE,
                          int LUMPED_MASS_MATRIX,
                          double dt,
                          int LINEAR_FRICTION,
                          double mannings,
                          numpy.ndarray quantDOFs,
                          int SECOND_CALL_CALCULATE_RESIDUAL,
                          int COMPUTE_NORMALS,
                          numpy.ndarray normalx,
                          numpy.ndarray normaly,
                          numpy.ndarray dLow,
                          numpy.ndarray hBT,
                          numpy.ndarray huBT,
                          numpy.ndarray hvBT,
                          int lstage):
        self.thisptr.calculateResidual(< double * > mesh_trial_ref.data,
                                       < double * > mesh_grad_trial_ref.data,
                                       < double * > mesh_dof.data,
                                       < double * > mesh_velocity_dof.data,
                                       MOVING_DOMAIN,
                                       < int * > mesh_l2g.data,
                                       < double * > dV_ref.data,
                                       < double * > h_trial_ref.data,
                                       < double * > h_grad_trial_ref.data,
                                       < double * > h_test_ref.data,
                                       < double * > h_grad_test_ref.data,
                                       < double * > vel_trial_ref.data,
                                       < double * > vel_grad_trial_ref.data,
                                       < double * > vel_test_ref.data,
                                       < double * > vel_grad_test_ref.data,
                                       < double * > mesh_trial_trace_ref.data,
                                       < double * > mesh_grad_trial_trace_ref.data,
                                       < double * > dS_ref.data,
                                       < double * > h_trial_trace_ref.data,
                                       < double * > h_grad_trial_trace_ref.data,
                                       < double * > h_test_trace_ref.data,
                                       < double * > h_grad_test_trace_ref.data,
                                       < double * > vel_trial_trace_ref.data,
                                       < double * > vel_grad_trial_trace_ref.data,
                                       < double * > vel_test_trace_ref.data,
                                       < double * > vel_grad_test_trace_ref.data,
                                       < double * > normal_ref.data,
                                       < double * > boundaryJac_ref.data,
                                       < double * > elementDiameter.data,
                                       nElements_global,
                                       useRBLES,
                                       useMetrics,
                                       alphaBDF,
                                       nu,
                                       g,
                                       < int * > h_l2g.data,
                                       < int * > vel_l2g.data,
                                       < double * > h_dof_old.data,
                                       < double * > hu_dof_old.data,
                                       < double * > hv_dof_old.data,
                                       < double * > b_dof.data,
                                       < double * > h_dof.data,
                                       < double * > hu_dof.data,
                                       < double * > hv_dof.data,
                                       < double * > h_dof_sge.data,
                                       < double * > hu_dof_sge.data,
                                       < double * > hv_dof_sge.data,
                                       < double * > q_mass_acc.data,
                                       < double * > q_mom_u_acc.data,
                                       < double * > q_mom_v_acc.data,
                                       < double * > q_mass_adv.data,
                                       < double * > q_mass_acc_beta_bdf.data,
                                       < double * > q_mom_u_acc_beta_bdf.data,
                                       < double * > q_mom_v_acc_beta_bdf.data,
                                       < double * > q_cfl.data,
                                       < int * > sdInfo_u_u_rowptr.data,
                                       < int * > sdInfo_u_u_colind.data,
                                       < int * > sdInfo_u_v_rowptr.data,
                                       < int * > sdInfo_u_v_colind.data,
                                       < int * > sdInfo_v_v_rowptr.data,
                                       < int * > sdInfo_v_v_colind.data,
                                       < int * > sdInfo_v_u_rowptr.data,
                                       < int * > sdInfo_v_u_colind.data,
                                       offset_h,
                                       offset_u,
                                       offset_v,
                                       stride_h,
                                       stride_u,
                                       stride_v,
                                       < double * > globalResidual.data,
                                       nExteriorElementBoundaries_global,
                                       < int * > exteriorElementBoundariesArray.data,
                                       < int * > elementBoundaryElementsArray.data,
                                       < int * > elementBoundaryLocalElementBoundariesArray.data,
                                       < int * > isDOFBoundary_h.data,
                                       < int * > isDOFBoundary_u.data,
                                       < int * > isDOFBoundary_v.data,
                                       < int * > isAdvectiveFluxBoundary_h.data,
                                       < int * > isAdvectiveFluxBoundary_u.data,
                                       < int * > isAdvectiveFluxBoundary_v.data,
                                       < int * > isDiffusiveFluxBoundary_u.data,
                                       < int * > isDiffusiveFluxBoundary_v.data,
                                       < double * > ebqe_bc_h_ext.data,
                                       < double * > ebqe_bc_flux_mass_ext.data,
                                       < double * > ebqe_bc_flux_mom_u_adv_ext.data,
                                       < double * > ebqe_bc_flux_mom_v_adv_ext.data,
                                       < double * > ebqe_bc_u_ext.data,
                                       < double * > ebqe_bc_flux_u_diff_ext.data,
                                       < double * > ebqe_henalty_ext.data,
                                       < double * > ebqe_bc_v_ext.data,
                                       < double * > ebqe_bc_flux_v_diff_ext.data,
                                       < double * > q_velocity.data,
                                       < double * > ebqe_velocity.data,
                                       < double * > flux.data,
                                       < double * > elementResidual_h.data,
                                       < double * > Cx.data,
                                       < double * > Cy.data,
                                       < double * > CTx.data,
                                       < double * > CTy.data,
                                       numDOFsPerEqn,
                                       NNZ,
                                       < int * > csrRowIndeces_DofLoops.data,
                                       < int * > csrColumnOffsets_DofLoops.data,
                                       < double * > lumped_mass_matrix.data,
                                       cfl_run,
                                       hEps,
                                       < double * > hReg.data,
                                       < double * > hnp1_at_quad_point.data,
                                       < double * > hunp1_at_quad_point.data,
                                       < double * > hvnp1_at_quad_point.data,
                                       < double * > extendedSourceTerm_hu.data,
                                       < double * > extendedSourceTerm_hv.data,
                                       < double * > dH_minus_dL.data,
                                       < double * > muH_minus_muL.data,
                                       cE,
                                       LUMPED_MASS_MATRIX,
                                       dt,
                                       LINEAR_FRICTION,
                                       mannings,
                                       < double * > quantDOFs.data,
                                       SECOND_CALL_CALCULATE_RESIDUAL,
                                       COMPUTE_NORMALS,
                                       < double * > normalx.data,
                                       < double * > normaly.data,
                                       < double * > dLow.data,
                                       < double * > hBT.data,
                                       < double * > huBT.data,
                                       < double * > hvBT.data,
                                       lstage)
    def calculateMassMatrix(self,
                            numpy.ndarray mesh_trial_ref,
                            numpy.ndarray mesh_grad_trial_ref,
                            numpy.ndarray mesh_dof,
                            numpy.ndarray mesh_velocity_dof,
                            double MOVING_DOMAIN,
                            numpy.ndarray mesh_l2g,
                            numpy.ndarray dV_ref,
                            numpy.ndarray h_trial_ref,
                            numpy.ndarray h_grad_trial_ref,
                            numpy.ndarray h_test_ref,
                            numpy.ndarray h_grad_test_ref,
                            numpy.ndarray vel_trial_ref,
                            numpy.ndarray vel_grad_trial_ref,
                            numpy.ndarray vel_test_ref,
                            numpy.ndarray vel_grad_test_ref,
                            numpy.ndarray mesh_trial_trace_ref,
                            numpy.ndarray mesh_grad_trial_trace_ref,
                            numpy.ndarray dS_ref,
                            numpy.ndarray h_trial_trace_ref,
                            numpy.ndarray h_grad_trial_trace_ref,
                            numpy.ndarray h_test_trace_ref,
                            numpy.ndarray h_grad_test_trace_ref,
                            numpy.ndarray vel_trial_trace_ref,
                            numpy.ndarray vel_grad_trial_trace_ref,
                            numpy.ndarray vel_test_trace_ref,
                            numpy.ndarray vel_grad_test_trace_ref,
                            numpy.ndarray normal_ref,
                            numpy.ndarray boundaryJac_ref,
                            numpy.ndarray elementDiameter,
                            int nElements_global,
                            double useRBLES,
                            double useMetrics,
                            double alphaBDF,
                            double nu,
                            double g,
                            numpy.ndarray h_l2g,
                            numpy.ndarray vel_l2g,
                            numpy.ndarray b_dof,
                            numpy.ndarray h_dof,
                            numpy.ndarray hu_dof,
                            numpy.ndarray hv_dof,
                            numpy.ndarray h_dof_sge,
                            numpy.ndarray hu_dof_sge,
                            numpy.ndarray hv_dof_sge,
                            numpy.ndarray q_mass_acc_beta_bdf,
                            numpy.ndarray q_mom_u_acc_beta_bdf,
                            numpy.ndarray q_mom_v_acc_beta_bdf,
                            numpy.ndarray q_cfl,
                            numpy.ndarray sdInfo_u_u_rowptr,
                            numpy.ndarray sdInfo_u_u_colind,
                            numpy.ndarray sdInfo_u_v_rowptr,
                            numpy.ndarray sdInfo_u_v_colind,
                            numpy.ndarray sdInfo_v_v_rowptr,
                            numpy.ndarray sdInfo_v_v_colind,
                            numpy.ndarray sdInfo_v_u_rowptr,
                            numpy.ndarray sdInfo_v_u_colind,
                            numpy.ndarray csrRowIndeces_h_h,
                            numpy.ndarray csrColumnOffsets_h_h,
                            numpy.ndarray csrRowIndeces_h_u,
                            numpy.ndarray csrColumnOffsets_h_u,
                            numpy.ndarray csrRowIndeces_h_v,
                            numpy.ndarray csrColumnOffsets_h_v,
                            numpy.ndarray csrRowIndeces_u_h,
                            numpy.ndarray csrColumnOffsets_u_h,
                            numpy.ndarray csrRowIndeces_u_u,
                            numpy.ndarray csrColumnOffsets_u_u,
                            numpy.ndarray csrRowIndeces_u_v,
                            numpy.ndarray csrColumnOffsets_u_v,
                            numpy.ndarray csrRowIndeces_v_h,
                            numpy.ndarray csrColumnOffsets_v_h,
                            numpy.ndarray csrRowIndeces_v_u,
                            numpy.ndarray csrColumnOffsets_v_u,
                            numpy.ndarray csrRowIndeces_v_v,
                            numpy.ndarray csrColumnOffsets_v_v,
                            globalJacobian,
                            int nExteriorElementBoundaries_global,
                            numpy.ndarray exteriorElementBoundariesArray,
                            numpy.ndarray elementBoundaryElementsArray,
                            numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                            numpy.ndarray isDOFBoundary_h,
                            numpy.ndarray isDOFBoundary_u,
                            numpy.ndarray isDOFBoundary_v,
                            numpy.ndarray isAdvectiveFluxBoundary_h,
                            numpy.ndarray isAdvectiveFluxBoundary_u,
                            numpy.ndarray isAdvectiveFluxBoundary_v,
                            numpy.ndarray isDiffusiveFluxBoundary_u,
                            numpy.ndarray isDiffusiveFluxBoundary_v,
                            numpy.ndarray ebqe_bc_h_ext,
                            numpy.ndarray ebqe_bc_flux_mass_ext,
                            numpy.ndarray ebqe_bc_flux_mom_u_adv_ext,
                            numpy.ndarray ebqe_bc_flux_mom_v_adv_ext,
                            numpy.ndarray ebqe_bc_u_ext,
                            numpy.ndarray ebqe_bc_flux_u_diff_ext,
                            numpy.ndarray ebqe_henalty_ext,
                            numpy.ndarray ebqe_bc_v_ext,
                            numpy.ndarray ebqe_bc_flux_v_diff_ext,
                            numpy.ndarray csrColumnOffsets_eb_h_h,
                            numpy.ndarray csrColumnOffsets_eb_h_u,
                            numpy.ndarray csrColumnOffsets_eb_h_v,
                            numpy.ndarray csrColumnOffsets_eb_u_h,
                            numpy.ndarray csrColumnOffsets_eb_u_u,
                            numpy.ndarray csrColumnOffsets_eb_u_v,
                            numpy.ndarray csrColumnOffsets_eb_v_h,
                            numpy.ndarray csrColumnOffsets_eb_v_u,
                            numpy.ndarray csrColumnOffsets_eb_v_v,
                            double dt):
        cdef numpy.ndarray rowptr, colind, globalJacobian_a
        (rowptr, colind, globalJacobian_a) = globalJacobian.getCSRrepresentation()
        self.thisptr.calculateMassMatrix(< double*> mesh_trial_ref.data,
                                          < double * > mesh_grad_trial_ref.data,
                                          < double * > mesh_dof.data,
                                          < double * > mesh_velocity_dof.data,
                                          MOVING_DOMAIN,
                                          < int * > mesh_l2g.data,
                                          < double * > dV_ref.data,
                                          < double * > h_trial_ref.data,
                                          < double * > h_grad_trial_ref.data,
                                          < double * > h_test_ref.data,
                                          < double * > h_grad_test_ref.data,
                                          < double * > vel_trial_ref.data,
                                          < double * > vel_grad_trial_ref.data,
                                          < double * > vel_test_ref.data,
                                          < double * > vel_grad_test_ref.data,
                                          < double * > mesh_trial_trace_ref.data,
                                          < double * > mesh_grad_trial_trace_ref.data,
                                          < double * > dS_ref.data,
                                          < double * > h_trial_trace_ref.data,
                                          < double * > h_grad_trial_trace_ref.data,
                                          < double * > h_test_trace_ref.data,
                                          < double * > h_grad_test_trace_ref.data,
                                          < double * > vel_trial_trace_ref.data,
                                          < double * > vel_grad_trial_trace_ref.data,
                                          < double * > vel_test_trace_ref.data,
                                          < double * > vel_grad_test_trace_ref.data,
                                          < double * > normal_ref.data,
                                          < double * > boundaryJac_ref.data,
                                          < double * > elementDiameter.data,
                                          nElements_global,
                                          useRBLES,
                                          useMetrics,
                                          alphaBDF,
                                          nu,
                                          g,
                                          < int * > h_l2g.data,
                                          < int * > vel_l2g.data,
                                          < double * > b_dof.data,
                                          < double * > h_dof.data,
                                          < double * > hu_dof.data,
                                          < double * > hv_dof.data,
                                          < double * > h_dof_sge.data,
                                          < double * > hu_dof_sge.data,
                                          < double * > hv_dof_sge.data,
                                          < double * > q_mass_acc_beta_bdf.data,
                                          < double * > q_mom_u_acc_beta_bdf.data,
                                          < double * > q_mom_v_acc_beta_bdf.data,
                                          < double * > q_cfl.data,
                                          < int * > sdInfo_u_u_rowptr.data,
                                          < int * > sdInfo_u_u_colind.data,
                                          < int * > sdInfo_u_v_rowptr.data,
                                          < int * > sdInfo_u_v_colind.data,
                                          < int * > sdInfo_v_v_rowptr.data,
                                          < int * > sdInfo_v_v_colind.data,
                                          < int * > sdInfo_v_u_rowptr.data,
                                          < int * > sdInfo_v_u_colind.data,
                                          < int * > csrRowIndeces_h_h.data,
                                          < int * > csrColumnOffsets_h_h.data,
                                          < int * > csrRowIndeces_h_u.data,
                                          < int * > csrColumnOffsets_h_u.data,
                                          < int * > csrRowIndeces_h_v.data,
                                          < int * > csrColumnOffsets_h_v.data,
                                          < int * > csrRowIndeces_u_h.data,
                                          < int * > csrColumnOffsets_u_h.data,
                                          < int * > csrRowIndeces_u_u.data,
                                          < int * > csrColumnOffsets_u_u.data,
                                          < int * > csrRowIndeces_u_v.data,
                                          < int * > csrColumnOffsets_u_v.data,
                                          < int * > csrRowIndeces_v_h.data,
                                          < int * > csrColumnOffsets_v_h.data,
                                          < int * > csrRowIndeces_v_u.data,
                                          < int * > csrColumnOffsets_v_u.data,
                                          < int * > csrRowIndeces_v_v.data,
                                          < int * > csrColumnOffsets_v_v.data,
                                          < double * > globalJacobian_a.data,
                                          nExteriorElementBoundaries_global,
                                          < int * > exteriorElementBoundariesArray.data,
                                          < int * > elementBoundaryElementsArray.data,
                                          < int * > elementBoundaryLocalElementBoundariesArray.data,
                                          < int * > isDOFBoundary_h.data,
                                          < int * > isDOFBoundary_u.data,
                                          < int * > isDOFBoundary_v.data,
                                          < int * > isAdvectiveFluxBoundary_h.data,
                                          < int * > isAdvectiveFluxBoundary_u.data,
                                          < int * > isAdvectiveFluxBoundary_v.data,
                                          < int * > isDiffusiveFluxBoundary_u.data,
                                          < int * > isDiffusiveFluxBoundary_v.data,
                                          < double * > ebqe_bc_h_ext.data,
                                          < double * > ebqe_bc_flux_mass_ext.data,
                                          < double * > ebqe_bc_flux_mom_u_adv_ext.data,
                                          < double * > ebqe_bc_flux_mom_v_adv_ext.data,
                                          < double * > ebqe_bc_u_ext.data,
                                          < double * > ebqe_bc_flux_u_diff_ext.data,
                                          < double * > ebqe_henalty_ext.data,
                                          < double * > ebqe_bc_v_ext.data,
                                          < double * > ebqe_bc_flux_v_diff_ext.data,
                                          < int * > csrColumnOffsets_eb_h_h.data,
                                          < int * > csrColumnOffsets_eb_h_u.data,
                                          < int * > csrColumnOffsets_eb_h_v.data,
                                          < int * > csrColumnOffsets_eb_u_h.data,
                                          < int * > csrColumnOffsets_eb_u_u.data,
                                          < int * > csrColumnOffsets_eb_u_v.data,
                                          < int * > csrColumnOffsets_eb_v_h.data,
                                          < int * > csrColumnOffsets_eb_v_u.data,
                                          < int * > csrColumnOffsets_eb_v_v.data,
                                          dt)

    def calculateLumpedMassMatrix(self,
                                  numpy.ndarray mesh_trial_ref,
                                  numpy.ndarray mesh_grad_trial_ref,
                                  numpy.ndarray mesh_dof,
                                  numpy.ndarray mesh_velocity_dof,
                                  double MOVING_DOMAIN,
                                  numpy.ndarray mesh_l2g,
                                  numpy.ndarray dV_ref,
                                  numpy.ndarray h_trial_ref,
                                  numpy.ndarray h_grad_trial_ref,
                                  numpy.ndarray h_test_ref,
                                  numpy.ndarray h_grad_test_ref,
                                  numpy.ndarray vel_trial_ref,
                                  numpy.ndarray vel_grad_trial_ref,
                                  numpy.ndarray vel_test_ref,
                                  numpy.ndarray vel_grad_test_ref,
                                  numpy.ndarray mesh_trial_trace_ref,
                                  numpy.ndarray mesh_grad_trial_trace_ref,
                                  numpy.ndarray dS_ref,
                                  numpy.ndarray h_trial_trace_ref,
                                  numpy.ndarray h_grad_trial_trace_ref,
                                  numpy.ndarray h_test_trace_ref,
                                  numpy.ndarray h_grad_test_trace_ref,
                                  numpy.ndarray vel_trial_trace_ref,
                                  numpy.ndarray vel_grad_trial_trace_ref,
                                  numpy.ndarray vel_test_trace_ref,
                                  numpy.ndarray vel_grad_test_trace_ref,
                                  numpy.ndarray normal_ref,
                                  numpy.ndarray boundaryJac_ref,
                                  numpy.ndarray elementDiameter,
                                  int nElements_global,
                                  double useRBLES,
                                  double useMetrics,
                                  double alphaBDF,
                                  double nu,
                                  double g,
                                  numpy.ndarray h_l2g,
                                  numpy.ndarray vel_l2g,
                                  numpy.ndarray b_dof,
                                  numpy.ndarray h_dof,
                                  numpy.ndarray hu_dof,
                                  numpy.ndarray hv_dof,
                                  numpy.ndarray h_dof_sge,
                                  numpy.ndarray hu_dof_sge,
                                  numpy.ndarray hv_dof_sge,
                                  numpy.ndarray q_mass_acc_beta_bdf,
                                  numpy.ndarray q_mom_u_acc_beta_bdf,
                                  numpy.ndarray q_mom_v_acc_beta_bdf,
                                  numpy.ndarray q_cfl,
                                  numpy.ndarray sdInfo_u_u_rowptr,
                                  numpy.ndarray sdInfo_u_u_colind,
                                  numpy.ndarray sdInfo_u_v_rowptr,
                                  numpy.ndarray sdInfo_u_v_colind,
                                  numpy.ndarray sdInfo_v_v_rowptr,
                                  numpy.ndarray sdInfo_v_v_colind,
                                  numpy.ndarray sdInfo_v_u_rowptr,
                                  numpy.ndarray sdInfo_v_u_colind,
                                  numpy.ndarray csrRowIndeces_h_h,
                                  numpy.ndarray csrColumnOffsets_h_h,
                                  numpy.ndarray csrRowIndeces_h_u,
                                  numpy.ndarray csrColumnOffsets_h_u,
                                  numpy.ndarray csrRowIndeces_h_v,
                                  numpy.ndarray csrColumnOffsets_h_v,
                                  numpy.ndarray csrRowIndeces_u_h,
                                  numpy.ndarray csrColumnOffsets_u_h,
                                  numpy.ndarray csrRowIndeces_u_u,
                                  numpy.ndarray csrColumnOffsets_u_u,
                                  numpy.ndarray csrRowIndeces_u_v,
                                  numpy.ndarray csrColumnOffsets_u_v,
                                  numpy.ndarray csrRowIndeces_v_h,
                                  numpy.ndarray csrColumnOffsets_v_h,
                                  numpy.ndarray csrRowIndeces_v_u,
                                  numpy.ndarray csrColumnOffsets_v_u,
                                  numpy.ndarray csrRowIndeces_v_v,
                                  numpy.ndarray csrColumnOffsets_v_v,
                                  globalJacobian,
                                  int nExteriorElementBoundaries_global,
                                  numpy.ndarray exteriorElementBoundariesArray,
                                  numpy.ndarray elementBoundaryElementsArray,
                                  numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                                  numpy.ndarray isDOFBoundary_h,
                                  numpy.ndarray isDOFBoundary_u,
                                  numpy.ndarray isDOFBoundary_v,
                                  numpy.ndarray isAdvectiveFluxBoundary_h,
                                  numpy.ndarray isAdvectiveFluxBoundary_u,
                                  numpy.ndarray isAdvectiveFluxBoundary_v,
                                  numpy.ndarray isDiffusiveFluxBoundary_u,
                                  numpy.ndarray isDiffusiveFluxBoundary_v,
                                  numpy.ndarray ebqe_bc_h_ext,
                                  numpy.ndarray ebqe_bc_flux_mass_ext,
                                  numpy.ndarray ebqe_bc_flux_mom_u_adv_ext,
                                  numpy.ndarray ebqe_bc_flux_mom_v_adv_ext,
                                  numpy.ndarray ebqe_bc_u_ext,
                                  numpy.ndarray ebqe_bc_flux_u_diff_ext,
                                  numpy.ndarray ebqe_henalty_ext,
                                  numpy.ndarray ebqe_bc_v_ext,
                                  numpy.ndarray ebqe_bc_flux_v_diff_ext,
                                  numpy.ndarray csrColumnOffsets_eb_h_h,
                                  numpy.ndarray csrColumnOffsets_eb_h_u,
                                  numpy.ndarray csrColumnOffsets_eb_h_v,
                                  numpy.ndarray csrColumnOffsets_eb_u_h,
                                  numpy.ndarray csrColumnOffsets_eb_u_u,
                                  numpy.ndarray csrColumnOffsets_eb_u_v,
                                  numpy.ndarray csrColumnOffsets_eb_v_h,
                                  numpy.ndarray csrColumnOffsets_eb_v_u,
                                  numpy.ndarray csrColumnOffsets_eb_v_v,
                                  double dt):
        cdef numpy.ndarray rowptr, colind, globalJacobian_a
        (rowptr, colind, globalJacobian_a) = globalJacobian.getCSRrepresentation()
        self.thisptr.calculateLumpedMassMatrix(< double*> mesh_trial_ref.data,
                                                < double * > mesh_grad_trial_ref.data,
                                                < double * > mesh_dof.data,
                                                < double * > mesh_velocity_dof.data,
                                                MOVING_DOMAIN,
                                                < int * > mesh_l2g.data,
                                                < double * > dV_ref.data,
                                                < double * > h_trial_ref.data,
                                                < double * > h_grad_trial_ref.data,
                                                < double * > h_test_ref.data,
                                                < double * > h_grad_test_ref.data,
                                                < double * > vel_trial_ref.data,
                                                < double * > vel_grad_trial_ref.data,
                                                < double * > vel_test_ref.data,
                                                < double * > vel_grad_test_ref.data,
                                                < double * > mesh_trial_trace_ref.data,
                                                < double * > mesh_grad_trial_trace_ref.data,
                                                < double * > dS_ref.data,
                                                < double * > h_trial_trace_ref.data,
                                                < double * > h_grad_trial_trace_ref.data,
                                                < double * > h_test_trace_ref.data,
                                                < double * > h_grad_test_trace_ref.data,
                                                < double * > vel_trial_trace_ref.data,
                                                < double * > vel_grad_trial_trace_ref.data,
                                                < double * > vel_test_trace_ref.data,
                                                < double * > vel_grad_test_trace_ref.data,
                                                < double * > normal_ref.data,
                                                < double * > boundaryJac_ref.data,
                                                < double * > elementDiameter.data,
                                                nElements_global,
                                                useRBLES,
                                                useMetrics,
                                                alphaBDF,
                                                nu,
                                                g,
                                                < int * > h_l2g.data,
                                                < int * > vel_l2g.data,
                                                < double * > b_dof.data,
                                                < double * > h_dof.data,
                                                < double * > hu_dof.data,
                                                < double * > hv_dof.data,
                                                < double * > h_dof_sge.data,
                                                < double * > hu_dof_sge.data,
                                                < double * > hv_dof_sge.data,
                                                < double * > q_mass_acc_beta_bdf.data,
                                                < double * > q_mom_u_acc_beta_bdf.data,
                                                < double * > q_mom_v_acc_beta_bdf.data,
                                                < double * > q_cfl.data,
                                                < int * > sdInfo_u_u_rowptr.data,
                                                < int * > sdInfo_u_u_colind.data,
                                                < int * > sdInfo_u_v_rowptr.data,
                                                < int * > sdInfo_u_v_colind.data,
                                                < int * > sdInfo_v_v_rowptr.data,
                                                < int * > sdInfo_v_v_colind.data,
                                                < int * > sdInfo_v_u_rowptr.data,
                                                < int * > sdInfo_v_u_colind.data,
                                                < int * > csrRowIndeces_h_h.data,
                                                < int * > csrColumnOffsets_h_h.data,
                                                < int * > csrRowIndeces_h_u.data,
                                                < int * > csrColumnOffsets_h_u.data,
                                                < int * > csrRowIndeces_h_v.data,
                                                < int * > csrColumnOffsets_h_v.data,
                                                < int * > csrRowIndeces_u_h.data,
                                                < int * > csrColumnOffsets_u_h.data,
                                                < int * > csrRowIndeces_u_u.data,
                                                < int * > csrColumnOffsets_u_u.data,
                                                < int * > csrRowIndeces_u_v.data,
                                                < int * > csrColumnOffsets_u_v.data,
                                                < int * > csrRowIndeces_v_h.data,
                                                < int * > csrColumnOffsets_v_h.data,
                                                < int * > csrRowIndeces_v_u.data,
                                                < int * > csrColumnOffsets_v_u.data,
                                                < int * > csrRowIndeces_v_v.data,
                                                < int * > csrColumnOffsets_v_v.data,
                                                < double * > globalJacobian_a.data,
                                                nExteriorElementBoundaries_global,
                                                < int * > exteriorElementBoundariesArray.data,
                                                < int * > elementBoundaryElementsArray.data,
                                                < int * > elementBoundaryLocalElementBoundariesArray.data,
                                                < int * > isDOFBoundary_h.data,
                                                < int * > isDOFBoundary_u.data,
                                                < int * > isDOFBoundary_v.data,
                                                < int * > isAdvectiveFluxBoundary_h.data,
                                                < int * > isAdvectiveFluxBoundary_u.data,
                                                < int * > isAdvectiveFluxBoundary_v.data,
                                                < int * > isDiffusiveFluxBoundary_u.data,
                                                < int * > isDiffusiveFluxBoundary_v.data,
                                                < double * > ebqe_bc_h_ext.data,
                                                < double * > ebqe_bc_flux_mass_ext.data,
                                                < double * > ebqe_bc_flux_mom_u_adv_ext.data,
                                                < double * > ebqe_bc_flux_mom_v_adv_ext.data,
                                                < double * > ebqe_bc_u_ext.data,
                                                < double * > ebqe_bc_flux_u_diff_ext.data,
                                                < double * > ebqe_henalty_ext.data,
                                                < double * > ebqe_bc_v_ext.data,
                                                < double * > ebqe_bc_flux_v_diff_ext.data,
                                                < int * > csrColumnOffsets_eb_h_h.data,
                                                < int * > csrColumnOffsets_eb_h_u.data,
                                                < int * > csrColumnOffsets_eb_h_v.data,
                                                < int * > csrColumnOffsets_eb_u_h.data,
                                                < int * > csrColumnOffsets_eb_u_u.data,
                                                < int * > csrColumnOffsets_eb_u_v.data,
                                                < int * > csrColumnOffsets_eb_v_h.data,
                                                < int * > csrColumnOffsets_eb_v_u.data,
                                                < int * > csrColumnOffsets_eb_v_v.data,
                                                dt)

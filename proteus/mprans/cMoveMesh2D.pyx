# A type of -*- python -*- file
import numpy
cimport numpy
from proteus import *
from proteus.Transport import *
from proteus.Transport import OneLevelTransport

cdef extern from "MoveMesh2D.h" namespace "proteus":
    cdef cppclass MoveMesh2D_base:
        void calculateResidual(double * mesh_trial_ref,
                               double * mesh_grad_trial_ref,
                               double * mesh_dof,
                               int * mesh_l2g,
                               double * dV_ref,
                               double * disp_trial_ref,
                               double * disp_grad_trial_ref,
                               double * disp_test_ref,
                               double * disp_grad_test_ref,
                               double * mesh_trial_trace_ref,
                               double * mesh_grad_trial_trace_ref,
                               double * dS_ref,
                               double * disp_trial_trace_ref,
                               double * disp_grad_trial_trace_ref,
                               double * disp_test_trace_ref,
                               double * disp_grad_test_trace_ref,
                               double * normal_ref,
                               double * boundaryJac_ref,
                               int nElements_global,
                               int * materialTypes,
                               int nMaterialProperties,
                               double * materialProperties,
                               int * disp_l2g,
                               double * u_dof,
                               double * v_dof,
                               double * w_dof,
                               double * bodyForce,
                               int offset_u, int offset_v, int offset_w,
                               int stride_u, int stride_v, int stride_w,
                               double * globalResidual,
                               int nExteriorElementBoundaries_global,
                               int * exteriorElementBoundariesArray,
                               int * elementBoundaryElementsArray,
                               int * elementBoundaryLocalElementBoundariesArray,
                               int * isDOFBoundary_u,
                               int * isDOFBoundary_v,
                               int * isDOFBoundary_w,
                               int * isStressFluxBoundary_u,
                               int * isStressFluxBoundary_v,
                               int * isStressFluxBoundary_w,
                               double * ebqe_bc_u_ext,
                               double * ebqe_bc_v_ext,
                               double * ebqe_bc_w_ext,
                               double * ebqe_bc_stressFlux_u_ext,
                               double * ebqe_bc_stressFlux_v_ext,
                               double * ebqe_bc_stressFlux_w_ext)

        void calculateJacobian(double * mesh_trial_ref,
                               double * mesh_grad_trial_ref,
                               double * mesh_dof,
                               int * mesh_l2g,
                               double * dV_ref,
                               double * disp_trial_ref,
                               double * disp_grad_trial_ref,
                               double * disp_test_ref,
                               double * disp_grad_test_ref,
                               double * mesh_trial_trace_ref,
                               double * mesh_grad_trial_trace_ref,
                               double * dS_ref,
                               double * disp_trial_trace_ref,
                               double * disp_grad_trial_trace_ref,
                               double * disp_test_trace_ref,
                               double * disp_grad_test_trace_ref,
                               double * normal_ref,
                               double * boundaryJac_ref,
                               int nElements_global,
                               int * materialTypes,
                               int nMaterialProperties,
                               double * materialProperties,
                               int * disp_l2g,
                               double * u_dof, double * v_dof, double * w_dof,
                               double * bodyForce,
                               int * csrRowIndeces_u_u, int * csrColumnOffsets_u_u,
                               int * csrRowIndeces_u_v, int * csrColumnOffsets_u_v,
                               int * csrRowIndeces_u_w, int * csrColumnOffsets_u_w,
                               int * csrRowIndeces_v_u, int * csrColumnOffsets_v_u,
                               int * csrRowIndeces_v_v, int * csrColumnOffsets_v_v,
                               int * csrRowIndeces_v_w, int * csrColumnOffsets_v_w,
                               int * csrRowIndeces_w_u, int * csrColumnOffsets_w_u,
                               int * csrRowIndeces_w_v, int * csrColumnOffsets_w_v,
                               int * csrRowIndeces_w_w, int * csrColumnOffsets_w_w,
                               double * globalJacobian,
                               int nExteriorElementBoundaries_global,
                               int * exteriorElementBoundariesArray,
                               int * elementBoundaryElementsArray,
                               int * elementBoundaryLocalElementBoundariesArray,
                               int * isDOFBoundary_u,
                               int * isDOFBoundary_v,
                               int * isDOFBoundary_w,
                               int * isStressFluxBoundary_u,
                               int * isStressFluxBoundary_v,
                               int * isStressFluxBoundary_w,
                               int * csrColumnOffsets_eb_u_u,
                               int * csrColumnOffsets_eb_u_v,
                               int * csrColumnOffsets_eb_u_w,
                               int * csrColumnOffsets_eb_v_u,
                               int * csrColumnOffsets_eb_v_v,
                               int * csrColumnOffsets_eb_v_w,
                               int * csrColumnOffsets_eb_w_u,
                               int * csrColumnOffsets_eb_w_v,
                               int * csrColumnOffsets_eb_w_w)

    MoveMesh2D_base * newMoveMesh2D(int nSpaceIn,
                                    int nQuadraturePoints_elementIn,
                                    int nDOF_mesh_trial_elementIn,
                                    int nDOF_trial_elementIn,
                                    int nDOF_test_elementIn,
                                    int nQuadraturePoints_elementBoundaryIn,
                                    int CompKernelFlag)

cdef class cMoveMesh2D_base:
    cdef MoveMesh2D_base * thisptr

    def __cinit__(self,
                  int nSpaceIn,
                  int nQuadraturePoints_elementIn,
                  int nDOF_mesh_trial_elementIn,
                  int nDOF_trial_elementIn,
                  int nDOF_test_elementIn,
                  int nQuadraturePoints_elementBoundaryIn,
                  int CompKernelFlag):
        self.thisptr = newMoveMesh2D(nSpaceIn,
                                     nQuadraturePoints_elementIn,
                                     nDOF_mesh_trial_elementIn,
                                     nDOF_trial_elementIn,
                                     nDOF_test_elementIn,
                                     nQuadraturePoints_elementBoundaryIn,
                                     CompKernelFlag)

    def __dealloc__(self):
        del self.thisptr

    def calculateResidual(self,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray disp_trial_ref,
                          numpy.ndarray disp_grad_trial_ref,
                          numpy.ndarray disp_test_ref,
                          numpy.ndarray disp_grad_test_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray disp_trial_trace_ref,
                          numpy.ndarray disp_grad_trial_trace_ref,
                          numpy.ndarray disp_test_trace_ref,
                          numpy.ndarray disp_grad_test_trace_ref,
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          int nElements_global,
                          numpy.ndarray materialTypes,
                          int nMaterialProperties,
                          numpy.ndarray materialProperties,
                          numpy.ndarray disp_l2g,
                          numpy.ndarray u_dof,
                          numpy.ndarray v_dof,
                          numpy.ndarray w_dof,
                          numpy.ndarray bodyForce,
                          int offset_u, int offset_v, int offset_w,
                          int stride_u, int stride_v, int stride_w,
                          numpy.ndarray globalResidual,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray isDOFBoundary_v,
                          numpy.ndarray isDOFBoundary_w,
                          numpy.ndarray isStressFluxBoundary_u,
                          numpy.ndarray isStressFluxBoundary_v,
                          numpy.ndarray isStressFluxBoundary_w,
                          numpy.ndarray ebqe_bc_u_ext,
                          numpy.ndarray ebqe_bc_v_ext,
                          numpy.ndarray ebqe_bc_w_ext,
                          numpy.ndarray ebqe_bc_stressFlux_u_ext,
                          numpy.ndarray ebqe_bc_stressFlux_v_ext,
                          numpy.ndarray ebqe_bc_stressFlux_w_ext):
        self.thisptr.calculateResidual(< double*>mesh_trial_ref.data,
                                        < double * >mesh_grad_trial_ref.data,
                                        < double * >mesh_dof.data,
                                        < int * >mesh_l2g.data,
                                        < double * >dV_ref.data,
                                        < double * >disp_trial_ref.data,
                                        < double * >disp_grad_trial_ref.data,
                                        < double * >disp_test_ref.data,
                                        < double * >disp_grad_test_ref.data,
                                        < double * >mesh_trial_trace_ref.data,
                                        < double * >mesh_grad_trial_trace_ref.data,
                                        < double * >dS_ref.data,
                                        < double * >disp_trial_trace_ref.data,
                                        < double * >disp_grad_trial_trace_ref.data,
                                        < double * >disp_test_trace_ref.data,
                                        < double * >disp_grad_test_trace_ref.data,
                                        < double * >normal_ref.data,
                                        < double * >boundaryJac_ref.data,
                                        nElements_global,
                                        < int * >materialTypes.data,
                                        nMaterialProperties,
                                        < double * >materialProperties.data,
                                        < int * >disp_l2g.data,
                                        < double * >u_dof.data,
                                        < double * >v_dof.data,
                                        < double * >w_dof.data,
                                        < double * >bodyForce.data,
                                        offset_u, offset_v, offset_w,
                                        stride_u, stride_v, stride_w,
                                        < double * >globalResidual.data,
                                        nExteriorElementBoundaries_global,
                                        < int * >exteriorElementBoundariesArray.data,
                                        < int * >elementBoundaryElementsArray.data,
                                        < int * >elementBoundaryLocalElementBoundariesArray.data,
                                        < int * >isDOFBoundary_u.data,
                                        < int * >isDOFBoundary_v.data,
                                        < int * >isDOFBoundary_w.data,
                                        < int * >isStressFluxBoundary_u.data,
                                        < int * >isStressFluxBoundary_v.data,
                                        < int * >isStressFluxBoundary_w.data,
                                        < double * >ebqe_bc_u_ext.data,
                                        < double * >ebqe_bc_v_ext.data,
                                        < double * >ebqe_bc_w_ext.data,
                                        < double * >ebqe_bc_stressFlux_u_ext.data,
                                        < double * >ebqe_bc_stressFlux_v_ext.data,
                                        < double * >ebqe_bc_stressFlux_w_ext.data)

    def calculateJacobian(self,
                          numpy.ndarray mesh_trial_ref,
                          numpy.ndarray mesh_grad_trial_ref,
                          numpy.ndarray mesh_dof,
                          numpy.ndarray mesh_l2g,
                          numpy.ndarray dV_ref,
                          numpy.ndarray disp_trial_ref,
                          numpy.ndarray disp_grad_trial_ref,
                          numpy.ndarray disp_test_ref,
                          numpy.ndarray disp_grad_test_ref,
                          numpy.ndarray mesh_trial_trace_ref,
                          numpy.ndarray mesh_grad_trial_trace_ref,
                          numpy.ndarray dS_ref,
                          numpy.ndarray disp_trial_trace_ref,
                          numpy.ndarray disp_grad_trial_trace_ref,
                          numpy.ndarray disp_test_trace_ref,
                          numpy.ndarray disp_grad_test_trace_ref,
                          numpy.ndarray normal_ref,
                          numpy.ndarray boundaryJac_ref,
                          int nElements_global,
                          numpy.ndarray materialTypes,
                          int nMaterialProperties,
                          numpy.ndarray materialProperties,
                          numpy.ndarray disp_l2g,
                          numpy.ndarray u_dof, numpy.ndarray v_dof, numpy.ndarray w_dof,
                          numpy.ndarray bodyForce,
                          numpy.ndarray csrRowIndeces_u_u, numpy.ndarray csrColumnOffsets_u_u,
                          numpy.ndarray csrRowIndeces_u_v, numpy.ndarray csrColumnOffsets_u_v,
                          numpy.ndarray csrRowIndeces_u_w, numpy.ndarray csrColumnOffsets_u_w,
                          numpy.ndarray csrRowIndeces_v_u, numpy.ndarray csrColumnOffsets_v_u,
                          numpy.ndarray csrRowIndeces_v_v, numpy.ndarray csrColumnOffsets_v_v,
                          numpy.ndarray csrRowIndeces_v_w, numpy.ndarray csrColumnOffsets_v_w,
                          numpy.ndarray csrRowIndeces_w_u, numpy.ndarray csrColumnOffsets_w_u,
                          numpy.ndarray csrRowIndeces_w_v, numpy.ndarray csrColumnOffsets_w_v,
                          numpy.ndarray csrRowIndeces_w_w, numpy.ndarray csrColumnOffsets_w_w,
                          globalJacobian,
                          int nExteriorElementBoundaries_global,
                          numpy.ndarray exteriorElementBoundariesArray,
                          numpy.ndarray elementBoundaryElementsArray,
                          numpy.ndarray elementBoundaryLocalElementBoundariesArray,
                          numpy.ndarray isDOFBoundary_u,
                          numpy.ndarray isDOFBoundary_v,
                          numpy.ndarray isDOFBoundary_w,
                          numpy.ndarray isStressFluxBoundary_u,
                          numpy.ndarray isStressFluxBoundary_v,
                          numpy.ndarray isStressFluxBoundary_w,
                          numpy.ndarray csrColumnOffsets_eb_u_u,
                          numpy.ndarray csrColumnOffsets_eb_u_v,
                          numpy.ndarray csrColumnOffsets_eb_u_w,
                          numpy.ndarray csrColumnOffsets_eb_v_u,
                          numpy.ndarray csrColumnOffsets_eb_v_v,
                          numpy.ndarray csrColumnOffsets_eb_v_w,
                          numpy.ndarray csrColumnOffsets_eb_w_u,
                          numpy.ndarray csrColumnOffsets_eb_w_v,
                          numpy.ndarray csrColumnOffsets_eb_w_w):
        cdef numpy.ndarray rowptr, colind, globalJacobian_a
        (rowptr, colind, globalJacobian_a) = globalJacobian.getCSRrepresentation()
        self.thisptr.calculateJacobian(< double*>mesh_trial_ref.data,
                                        < double * >mesh_grad_trial_ref.data,
                                        < double * >mesh_dof.data,
                                        < int * >mesh_l2g.data,
                                        < double * >dV_ref.data,
                                        < double * >disp_trial_ref.data,
                                        < double * >disp_grad_trial_ref.data,
                                        < double * >disp_test_ref.data,
                                        < double * >disp_grad_test_ref.data,
                                        < double * >mesh_trial_trace_ref.data,
                                        < double * >mesh_grad_trial_trace_ref.data,
                                        < double * >dS_ref.data,
                                        < double * >disp_trial_trace_ref.data,
                                        < double * >disp_grad_trial_trace_ref.data,
                                        < double * >disp_test_trace_ref.data,
                                        < double * >disp_grad_test_trace_ref.data,
                                        < double * >normal_ref.data,
                                        < double * >boundaryJac_ref.data,
                                        nElements_global,
                                        < int * >materialTypes.data,
                                        nMaterialProperties,
                                        < double * >materialProperties.data,
                                        < int * >disp_l2g.data,
                                        < double*>u_dof.data, < double*>v_dof.data, < double*>w_dof.data,
                                        < double * >bodyForce.data,
                                        < int*>csrRowIndeces_u_u.data, < int*>csrColumnOffsets_u_u.data,
                                        < int*>csrRowIndeces_u_v.data, < int*>csrColumnOffsets_u_v.data,
                                        < int*>csrRowIndeces_u_w.data, < int*>csrColumnOffsets_u_w.data,
                                        < int*>csrRowIndeces_v_u.data, < int*>csrColumnOffsets_v_u.data,
                                        < int*>csrRowIndeces_v_v.data, < int*>csrColumnOffsets_v_v.data,
                                        < int*>csrRowIndeces_v_w.data, < int*>csrColumnOffsets_v_w.data,
                                        < int*>csrRowIndeces_w_u.data, < int*>csrColumnOffsets_w_u.data,
                                        < int*>csrRowIndeces_w_v.data, < int*>csrColumnOffsets_w_v.data,
                                        < int*>csrRowIndeces_w_w.data, < int*>csrColumnOffsets_w_w.data,
                                        < double * >globalJacobian_a.data,
                                        nExteriorElementBoundaries_global,
                                        < int * >exteriorElementBoundariesArray.data,
                                        < int * >elementBoundaryElementsArray.data,
                                        < int * >elementBoundaryLocalElementBoundariesArray.data,
                                        < int * >isDOFBoundary_u.data,
                                        < int * >isDOFBoundary_v.data,
                                        < int * >isDOFBoundary_w.data,
                                        < int * >isStressFluxBoundary_u.data,
                                        < int * >isStressFluxBoundary_v.data,
                                        < int * >isStressFluxBoundary_w.data,
                                        < int * >csrColumnOffsets_eb_u_u.data,
                                        < int * >csrColumnOffsets_eb_u_v.data,
                                        < int * >csrColumnOffsets_eb_u_w.data,
                                        < int * >csrColumnOffsets_eb_v_u.data,
                                        < int * >csrColumnOffsets_eb_v_v.data,
                                        < int * >csrColumnOffsets_eb_v_w.data,
                                        < int * >csrColumnOffsets_eb_w_u.data,
                                        < int * >csrColumnOffsets_eb_w_v.data,
                                        < int * >csrColumnOffsets_eb_w_w.data)

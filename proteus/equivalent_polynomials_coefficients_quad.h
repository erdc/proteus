#ifndef EQUIVALENT_POLYNOMIALS_COEFFICIENTS_QUAD_H
#define EQUIVALENT_POLYNOMIALS_COEFFICIENTS_QUAD_H

namespace equivalent_polynomials
{
  template<int nP>
  inline void _calculate_b(double theta01, double theta02, double theta31, double theta32, 
                           double phi0, double phi1, double phi2, double phi3, 
                           double* b_H, double* b_ImH, double* b_D);

  template<>
inline void _calculate_b<1>(double theta01, double theta02, double theta31, double theta32,
                                double phi0, double phi1, double phi2, double phi3,
                                double* b_H, double* b_ImH, double* b_D)
  {
    b_H[0] = (1.0/6.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[0] = 1.0/6.0 - 1.0/6.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[0] = -0.16666666666666666*theta02*(theta31 - 1)/(-phi0 + phi1) - 0.16666666666666666*theta31*(theta02 - 1)/(phi2 - phi3) - 1.0*((1.0/6.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(-8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) + 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) + 2*theta02*theta31 - 2*theta02 - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (theta02*theta32 + theta02*(theta01 - 1) - theta02 - theta32 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/6.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 16*std::pow(theta02, 3) + 6*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + std::pow(theta31, 2) - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02) + (theta01*theta31 - theta01 + theta31*(theta32 - 1) - theta31 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[1] = (1.0/24.0)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[1] = 1.0/24.0 - 1.0/24.0*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[1] = 0.041666666666666664*theta02*(std::pow(theta31, 2) - 2*theta31 + 1)/(-phi0 + phi1) + 0.041666666666666664*theta31*(theta02*theta31 + 2*theta02*theta32 - 3*theta02 - theta31 - 2*theta32 + 3)/(phi2 - phi3) - 0.041666666666666664*(8*std::pow(theta02, 4)*theta31 - 8*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*theta31 - 8*std::pow(theta02, 2) - 2*theta02*theta31 + 2*theta02 + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*theta31*theta32 + theta02*theta31 - theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta02*(2*theta01*theta31 - 2*theta01 - 2*theta31 + 2) - 2*theta02 + theta31*theta32 - theta31*(theta02*theta32 - theta02 - theta32 + 1) - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 32*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 6*std::pow(theta02, 2)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2)*std::pow(theta31, 2) + 12*std::pow(theta02, 2)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 8*theta02*std::pow(theta31, 2) - 16*theta02*theta31 + 8*theta02 - std::pow(theta31, 2) + 2*theta31 + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) - theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - theta31*(theta31*theta32 - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2*theta31 + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[2] = (1.0/24.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[2] = 1.0/24.0 - 1.0/24.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[2] = -0.041666666666666664*std::pow(theta02, 2)*(theta31 - 1)/(-phi0 + phi1) - 0.041666666666666664*theta31*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/24.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(theta01 - 1) - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3)*theta31 + 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3) - 6*theta02*std::pow(theta31, 2) + 12*theta02*theta31 - 6*theta02 + (2*theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[3] = (1.0/24.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/24.0*std::pow(theta01, 2)*theta02 + (1.0/24.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/24.0*theta01*theta02*theta31 + (1.0/24.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/24.0*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2)*theta32 + 1.0/24.0;
    b_ImH[3] = -1.0/24.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/24.0)*std::pow(theta01, 2)*theta02 - 1.0/24.0*theta01*theta02*std::pow(theta31, 2) + (1.0/24.0)*theta01*theta02*theta31 - 1.0/24.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/24.0)*theta02*std::pow(theta31, 2) + (1.0/24.0)*std::pow(theta31, 2)*theta32;
    b_D[3] = -1.0*((1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2))/(phi2 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta02 + (1.0/12.0)*theta01*theta02*theta31 - 1.0/24.0*theta01*theta02 + (1.0/12.0)*theta02*theta31*theta32 - 1.0/12.0*theta02*theta31 - 1.0/12.0*theta31*theta32)/(phi1 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta31 - 1.0/24.0*std::pow(theta01, 2) + (1.0/24.0)*theta01*std::pow(theta31, 2) - 1.0/24.0*theta01*theta31 + (1.0/24.0)*std::pow(theta31, 2)*theta32 - 1.0/24.0*std::pow(theta31, 2))/(-phi0 + phi2) - 1.0*((1.0/12.0)*theta01*theta02*theta31 - 1.0/12.0*theta01*theta02 + (1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*theta02*theta31)/(-phi0 + phi1);
  }

  template<>
inline void _calculate_b<2>(double theta01, double theta02, double theta31, double theta32,
                                double phi0, double phi1, double phi2, double phi3,
                                double* b_H, double* b_ImH, double* b_D)
  {
    b_H[0] = (1.0/6.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[0] = 1.0/6.0 - 1.0/6.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[0] = -0.16666666666666666*theta02*(theta31 - 1)/(-phi0 + phi1) - 0.16666666666666666*theta31*(theta02 - 1)/(phi2 - phi3) - 1.0*((1.0/6.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(-8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) + 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) + 2*theta02*theta31 - 2*theta02 - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (theta02*theta32 + theta02*(theta01 - 1) - theta02 - theta32 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/6.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 16*std::pow(theta02, 3) + 6*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + std::pow(theta31, 2) - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02) + (theta01*theta31 - theta01 + theta31*(theta32 - 1) - theta31 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[1] = (1.0/24.0)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[1] = 1.0/24.0 - 1.0/24.0*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[1] = 0.041666666666666664*theta02*(std::pow(theta31, 2) - 2*theta31 + 1)/(-phi0 + phi1) + 0.041666666666666664*theta31*(theta02*theta31 + 2*theta02*theta32 - 3*theta02 - theta31 - 2*theta32 + 3)/(phi2 - phi3) - 0.041666666666666664*(8*std::pow(theta02, 4)*theta31 - 8*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*theta31 - 8*std::pow(theta02, 2) - 2*theta02*theta31 + 2*theta02 + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*theta31*theta32 + theta02*theta31 - theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta02*(2*theta01*theta31 - 2*theta01 - 2*theta31 + 2) - 2*theta02 + theta31*theta32 - theta31*(theta02*theta32 - theta02 - theta32 + 1) - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 32*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 6*std::pow(theta02, 2)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2)*std::pow(theta31, 2) + 12*std::pow(theta02, 2)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 8*theta02*std::pow(theta31, 2) - 16*theta02*theta31 + 8*theta02 - std::pow(theta31, 2) + 2*theta31 + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) - theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - theta31*(theta31*theta32 - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2*theta31 + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[2] = (1.0/60.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[2] = 1.0/60.0 - 1.0/60.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[2] = -0.016666666666666666*theta02*(std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 - 1)/(-phi0 + phi1) - 0.016666666666666666*theta31*(theta02*std::pow(theta31, 2) + 2*theta02*theta31*theta32 - 4*theta02*theta31 + 3*theta02*std::pow(theta32, 2) - 8*theta02*theta32 + 6*theta02 - std::pow(theta31, 2) - 2*theta31*theta32 + 4*theta31 - 3*std::pow(theta32, 2) + 8*theta32 - 6)/(phi2 - phi3) - 0.016666666666666666*(-12*std::pow(theta02, 4)*std::pow(theta31, 2) + 24*std::pow(theta02, 4)*theta31 - 12*std::pow(theta02, 4) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(2 - 2*theta31)*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 24*std::pow(theta02, 2)*theta31 - 12*std::pow(theta02, 2) + 3*theta02*std::pow(theta31, 2) - 6*theta02*theta31 + 3*theta02 - 3*std::pow(theta31, 2) + 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 + theta02*(3*theta01*std::pow(theta31, 2) - 6*theta01*theta31 + 3*theta01 - 3*std::pow(theta31, 2) + 6*theta31 - 3) - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 + theta31*(2*theta02*theta31*theta32 - 2*theta02*theta31 + theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 3*theta02 - 2*theta31*theta32 + 2*theta31 - std::pow(theta32, 2) + 4*theta32 - 3) - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3) - 3)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/60.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)/std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 3) + 48*std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 48*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 18*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 18*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 6*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 3) + 24*theta02*std::pow(theta31, 2) - 24*theta02*theta31 + 8*theta02 + std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 + (16*std::pow(theta02, 3) + 8*theta02)*(theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) + theta31*(std::pow(theta31, 2)*theta32 - std::pow(theta31, 2) + theta31*std::pow(theta32, 2) - 4*theta31*theta32 + 3*theta31 + std::pow(theta32, 3) - 4*std::pow(theta32, 2) + 6*theta32 - 3) - 3*theta31 + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[3] = (1.0/24.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[3] = 1.0/24.0 - 1.0/24.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[3] = -0.041666666666666664*std::pow(theta02, 2)*(theta31 - 1)/(-phi0 + phi1) - 0.041666666666666664*theta31*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/24.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(theta01 - 1) - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3)*theta31 + 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3) - 6*theta02*std::pow(theta31, 2) + 12*theta02*theta31 - 6*theta02 + (2*theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[4] = (1.0/120.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[4] = 1.0/120.0 - 1.0/120.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[4] = -0.0083333333333333332*std::pow(theta02, 2)*(-std::pow(theta31, 2) + 2*theta31 - 1)/(-phi0 + phi1) + 0.0083333333333333332*theta31*(std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*theta31*theta32 - theta02*theta31 + 6*theta02*std::pow(theta32, 2) - 10*theta02*theta32 + 3*theta02 - 2*theta31*theta32 - 6*std::pow(theta32, 2) + 8*theta32)/(phi2 - phi3) - 0.0083333333333333332*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2) + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta02, 2)*theta31*theta32 + std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(-2*theta01*theta31 + 2*theta01 + 2*theta31 - 2) - 2*std::pow(theta02, 2) - theta02*theta31*std::pow(theta32, 2) + theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 5*theta02*std::pow(theta32, 2) - 3*theta02*theta32 + theta31*std::pow(theta32, 2) - theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - theta31 + 2*std::pow(theta32, 3) - 4*std::pow(theta32, 2) + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/120.0)*(-4*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*theta31 - 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3) + 6*theta02*std::pow(theta31, 2) - 12*theta02*theta31 + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2)) + (2*theta02*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(2*theta02*theta31*theta32 - 2*theta02*theta31 + 2*theta02*std::pow(theta32, 2) - 6*theta02*theta32 + 4*theta02 + theta31*std::pow(theta32, 2) - theta31*theta32 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[5] = (1.0/60.0)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[5] = 1.0/60.0 - 1.0/60.0*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[5] = -0.016666666666666666*std::pow(theta02, 3)*(theta31 - 1)/(-phi0 + phi1) - 0.016666666666666666*theta31*(std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + 3*theta02*std::pow(theta32, 2) - 2*theta02*theta32 - 3*std::pow(theta32, 2))/(phi2 - phi3) - 1.0*((1.0/60.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 5) - 8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 3)*theta32 + std::pow(theta02, 3)*(theta01 - 1) - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/60.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 4)*std::pow(theta31, 2) - 20*std::pow(theta02, 4)*theta31 + 10*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 4) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + (3*std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(3*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*std::pow(theta32, 2) - 2*theta02*theta32 + std::pow(theta32, 3) - std::pow(theta32, 2)))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[6] = (1.0/24.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/24.0*std::pow(theta01, 2)*theta02 + (1.0/24.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/24.0*theta01*theta02*theta31 + (1.0/24.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/24.0*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2)*theta32 + 1.0/24.0;
    b_ImH[6] = -1.0/24.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/24.0)*std::pow(theta01, 2)*theta02 - 1.0/24.0*theta01*theta02*std::pow(theta31, 2) + (1.0/24.0)*theta01*theta02*theta31 - 1.0/24.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/24.0)*theta02*std::pow(theta31, 2) + (1.0/24.0)*std::pow(theta31, 2)*theta32;
    b_D[6] = -1.0*((1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2))/(phi2 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta02 + (1.0/12.0)*theta01*theta02*theta31 - 1.0/24.0*theta01*theta02 + (1.0/12.0)*theta02*theta31*theta32 - 1.0/12.0*theta02*theta31 - 1.0/12.0*theta31*theta32)/(phi1 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta31 - 1.0/24.0*std::pow(theta01, 2) + (1.0/24.0)*theta01*std::pow(theta31, 2) - 1.0/24.0*theta01*theta31 + (1.0/24.0)*std::pow(theta31, 2)*theta32 - 1.0/24.0*std::pow(theta31, 2))/(-phi0 + phi2) - 1.0*((1.0/12.0)*theta01*theta02*theta31 - 1.0/12.0*theta01*theta02 + (1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*theta02*theta31)/(-phi0 + phi1);
    b_H[7] = (1.0/120.0)*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[7] = 1.0/120.0 - 1.0/120.0*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[7] = 0.0083333333333333332*theta02*(2*theta01*std::pow(theta31, 2) - 4*theta01*theta31 + 2*theta01 + 2*std::pow(theta31, 3) - 4*std::pow(theta31, 2) + 2*theta31)/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 2)*(-2*theta02*theta31 - 2*theta02*theta32 + 4*theta02 + 2*theta31 + 2*theta32 - 4)/(phi2 - phi3) - 0.0083333333333333332*(24*std::pow(theta02, 4)*std::pow(theta31, 2) - 24*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 3)*std::pow(theta31, 2) + 12*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 24*std::pow(theta02, 2)*std::pow(theta31, 2) - 24*std::pow(theta02, 2)*theta31 - 6*theta02*std::pow(theta31, 2) + 6*theta02*theta31 + 6*std::pow(theta31, 2) - 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*(2*std::pow(theta01, 2)*theta31 - 2*std::pow(theta01, 2) + 6*theta01*std::pow(theta31, 2) - 8*theta01*theta31 + 2*theta01 - 6*std::pow(theta31, 2) + 6*theta31) + std::pow(theta31, 2)*(-2*theta02*theta32 + 2*theta02 + 2*theta32 - 2) + 2*theta31*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/120.0)*(-8*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 32*std::pow(theta02, 3)*std::pow(theta31, 3) + 3*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 48*std::pow(theta02, 3)*std::pow(theta31, 2) - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 2)*std::pow(theta31, 3) + 18*std::pow(theta02, 2)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 18*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 16*theta02*std::pow(theta31, 3) - 24*theta02*std::pow(theta31, 2) + 8*theta02 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) + std::pow(theta31, 2)*(-2*theta31*theta32 + 2*theta31 - std::pow(theta32, 2) + 4*theta32 - 3) - 3*std::pow(theta31, 2) + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[8] = (1.0/120.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/120.0*std::pow(theta02, 2) + (1.0/120.0)*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/120.0*std::pow(theta31, 2) + 1.0/120.0;
    b_ImH[8] = -1.0/120.0*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) + (1.0/120.0)*std::pow(theta02, 2) - 1.0/120.0*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + (1.0/120.0)*std::pow(theta31, 2);
    b_D[8] = -0.0083333333333333332*std::pow(theta02, 2)*(2*theta01*theta31 - 2*theta01 + std::pow(theta31, 2) - theta31)/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 2)*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/60.0)*std::pow(theta02, 2)*theta31 + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2) + 2*theta01*theta31 - theta01 - 2*theta31) + (1.0/60.0)*theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/60.0*theta31)/(phi1 - phi3) - 1.0*((1.0/60.0)*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta02*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/60.0*theta02 + (1.0/120.0)*std::pow(theta31, 2)*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))/(-phi0 + phi2);
    b_H[9] = (1.0/60.0)*std::pow(theta01, 3)*theta02*theta31 - 1.0/60.0*std::pow(theta01, 3)*theta02 + (1.0/60.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/60.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/60.0*theta01*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/60.0*theta02*std::pow(theta31, 3) - 1.0/60.0*std::pow(theta31, 3)*theta32 + 1.0/60.0;
    b_ImH[9] = -1.0/60.0*std::pow(theta01, 3)*theta02*theta31 + (1.0/60.0)*std::pow(theta01, 3)*theta02 - 1.0/60.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/60.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/60.0*theta01*theta02*std::pow(theta31, 3) + (1.0/60.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/60.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/60.0)*theta02*std::pow(theta31, 3) + (1.0/60.0)*std::pow(theta31, 3)*theta32;
    b_D[9] = -1.0*((1.0/60.0)*theta02*std::pow(theta31, 3) - 1.0/60.0*std::pow(theta31, 3))/(phi2 - phi3) - 1.0*((1.0/60.0)*std::pow(theta01, 3)*theta02 + (1.0/30.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/60.0*std::pow(theta01, 2)*theta02 + (1.0/20.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/20.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/20.0*theta02*std::pow(theta31, 2) - 1.0/20.0*std::pow(theta31, 2)*theta32)/(phi1 - phi3) - 1.0*((1.0/60.0)*std::pow(theta01, 3)*theta31 - 1.0/60.0*std::pow(theta01, 3) + (1.0/60.0)*std::pow(theta01, 2)*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta31 + (1.0/60.0)*theta01*std::pow(theta31, 3) - 1.0/60.0*theta01*std::pow(theta31, 2) + (1.0/60.0)*std::pow(theta31, 3)*theta32 - 1.0/60.0*std::pow(theta31, 3))/(-phi0 + phi2) - 1.0*((1.0/20.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/20.0*std::pow(theta01, 2)*theta02 + (1.0/30.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/60.0)*theta02*std::pow(theta31, 3) - 1.0/60.0*theta02*std::pow(theta31, 2))/(-phi0 + phi1);
  }

  template<>
inline void _calculate_b<3>(double theta01, double theta02, double theta31, double theta32,
                                double phi0, double phi1, double phi2, double phi3,
                                double* b_H, double* b_ImH, double* b_D)
  {
    b_H[0] = (1.0/6.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[0] = 1.0/6.0 - 1.0/6.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[0] = -0.16666666666666666*theta02*(theta31 - 1)/(-phi0 + phi1) - 0.16666666666666666*theta31*(theta02 - 1)/(phi2 - phi3) - 1.0*((1.0/6.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(-8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) + 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) + 2*theta02*theta31 - 2*theta02 - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (theta02*theta32 + theta02*(theta01 - 1) - theta02 - theta32 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/6.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 16*std::pow(theta02, 3) + 6*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + std::pow(theta31, 2) - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02) + (theta01*theta31 - theta01 + theta31*(theta32 - 1) - theta31 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[1] = (1.0/24.0)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[1] = 1.0/24.0 - 1.0/24.0*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[1] = 0.041666666666666664*theta02*(std::pow(theta31, 2) - 2*theta31 + 1)/(-phi0 + phi1) + 0.041666666666666664*theta31*(theta02*theta31 + 2*theta02*theta32 - 3*theta02 - theta31 - 2*theta32 + 3)/(phi2 - phi3) - 0.041666666666666664*(8*std::pow(theta02, 4)*theta31 - 8*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*theta31 - 8*std::pow(theta02, 2) - 2*theta02*theta31 + 2*theta02 + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*theta31*theta32 + theta02*theta31 - theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta02*(2*theta01*theta31 - 2*theta01 - 2*theta31 + 2) - 2*theta02 + theta31*theta32 - theta31*(theta02*theta32 - theta02 - theta32 + 1) - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 32*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 6*std::pow(theta02, 2)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2)*std::pow(theta31, 2) + 12*std::pow(theta02, 2)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 8*theta02*std::pow(theta31, 2) - 16*theta02*theta31 + 8*theta02 - std::pow(theta31, 2) + 2*theta31 + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) - theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - theta31*(theta31*theta32 - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2*theta31 + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[2] = (1.0/60.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[2] = 1.0/60.0 - 1.0/60.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[2] = -0.016666666666666666*theta02*(std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 - 1)/(-phi0 + phi1) - 0.016666666666666666*theta31*(theta02*std::pow(theta31, 2) + 2*theta02*theta31*theta32 - 4*theta02*theta31 + 3*theta02*std::pow(theta32, 2) - 8*theta02*theta32 + 6*theta02 - std::pow(theta31, 2) - 2*theta31*theta32 + 4*theta31 - 3*std::pow(theta32, 2) + 8*theta32 - 6)/(phi2 - phi3) - 0.016666666666666666*(-12*std::pow(theta02, 4)*std::pow(theta31, 2) + 24*std::pow(theta02, 4)*theta31 - 12*std::pow(theta02, 4) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(2 - 2*theta31)*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 24*std::pow(theta02, 2)*theta31 - 12*std::pow(theta02, 2) + 3*theta02*std::pow(theta31, 2) - 6*theta02*theta31 + 3*theta02 - 3*std::pow(theta31, 2) + 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 + theta02*(3*theta01*std::pow(theta31, 2) - 6*theta01*theta31 + 3*theta01 - 3*std::pow(theta31, 2) + 6*theta31 - 3) - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 + theta31*(2*theta02*theta31*theta32 - 2*theta02*theta31 + theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 3*theta02 - 2*theta31*theta32 + 2*theta31 - std::pow(theta32, 2) + 4*theta32 - 3) - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3) - 3)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/60.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)/std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 3) + 48*std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 48*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 18*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 18*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 6*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 3) + 24*theta02*std::pow(theta31, 2) - 24*theta02*theta31 + 8*theta02 + std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 + (16*std::pow(theta02, 3) + 8*theta02)*(theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) + theta31*(std::pow(theta31, 2)*theta32 - std::pow(theta31, 2) + theta31*std::pow(theta32, 2) - 4*theta31*theta32 + 3*theta31 + std::pow(theta32, 3) - 4*std::pow(theta32, 2) + 6*theta32 - 3) - 3*theta31 + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[3] = -1.0/120.0*theta01*theta02*std::pow(theta31, 4) + (1.0/30.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/20.0*theta01*theta02*std::pow(theta31, 2) + (1.0/30.0)*theta01*theta02*theta31 - 1.0/120.0*theta01*theta02 - 1.0/120.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/120.0)*theta02*std::pow(theta31, 4) - 1.0/120.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/24.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/30.0*theta02*std::pow(theta31, 3) - 1.0/120.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/24.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/20.0)*theta02*std::pow(theta31, 2) - 1.0/120.0*theta02*theta31*std::pow(theta32, 4) + (1.0/24.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/12.0*theta02*theta31*std::pow(theta32, 2) + (1.0/12.0)*theta02*theta31*theta32 - 1.0/30.0*theta02*theta31 + (1.0/120.0)*std::pow(theta31, 4)*theta32 + (1.0/120.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/24.0*std::pow(theta31, 3)*theta32 + (1.0/120.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/24.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*std::pow(theta31, 2)*theta32 + (1.0/120.0)*theta31*std::pow(theta32, 4) - 1.0/24.0*theta31*std::pow(theta32, 3) + (1.0/12.0)*theta31*std::pow(theta32, 2) - 1.0/12.0*theta31*theta32 + 1.0/120.0;
    b_ImH[3] = (1.0/120.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/30.0*theta01*theta02*std::pow(theta31, 3) + (1.0/20.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/120.0)*theta01*theta02 + (1.0/120.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/120.0*theta02*std::pow(theta31, 4) + (1.0/120.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/24.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/30.0)*theta02*std::pow(theta31, 3) + (1.0/120.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/24.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/20.0*theta02*std::pow(theta31, 2) + (1.0/120.0)*theta02*theta31*std::pow(theta32, 4) - 1.0/24.0*theta02*theta31*std::pow(theta32, 3) + (1.0/12.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/12.0*theta02*theta31*theta32 + (1.0/30.0)*theta02*theta31 - 1.0/120.0*std::pow(theta31, 4)*theta32 - 1.0/120.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/24.0)*std::pow(theta31, 3)*theta32 - 1.0/120.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/24.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*std::pow(theta31, 2)*theta32 - 1.0/120.0*theta31*std::pow(theta32, 4) + (1.0/24.0)*theta31*std::pow(theta32, 3) - 1.0/12.0*theta31*std::pow(theta32, 2) + (1.0/12.0)*theta31*theta32;
    b_D[3] = -1.0*(-1.0/120.0*theta02*std::pow(theta31, 4) - 1.0/60.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/24.0)*theta02*std::pow(theta31, 3) - 1.0/40.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/12.0*theta02*std::pow(theta31, 2) - 1.0/30.0*theta02*theta31*std::pow(theta32, 3) + (1.0/8.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/6.0*theta02*theta31*theta32 + (1.0/12.0)*theta02*theta31 + (1.0/120.0)*std::pow(theta31, 4) + (1.0/60.0)*std::pow(theta31, 3)*theta32 - 1.0/24.0*std::pow(theta31, 3) + (1.0/40.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*std::pow(theta31, 2)*theta32 + (1.0/12.0)*std::pow(theta31, 2) + (1.0/30.0)*theta31*std::pow(theta32, 3) - 1.0/8.0*theta31*std::pow(theta32, 2) + (1.0/6.0)*theta31*theta32 - 1.0/12.0*theta31)/(phi2 - phi3) - 1.0*(-1.0/30.0*theta01*theta02*std::pow(theta31, 3) + (1.0/10.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/10.0*theta01*theta02*theta31 + (1.0/30.0)*theta01*theta02 - 1.0/30.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/30.0)*theta02*std::pow(theta31, 3) - 1.0/40.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/8.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/10.0*theta02*std::pow(theta31, 2) - 1.0/60.0*theta02*theta31*std::pow(theta32, 3) + (1.0/12.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/6.0*theta02*theta31*theta32 + (1.0/10.0)*theta02*theta31 - 1.0/120.0*theta02*std::pow(theta32, 4) + (1.0/24.0)*theta02*std::pow(theta32, 3) - 1.0/12.0*theta02*std::pow(theta32, 2) + (1.0/12.0)*theta02*theta32 - 1.0/30.0*theta02 + (1.0/30.0)*std::pow(theta31, 3)*theta32 + (1.0/40.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/8.0*std::pow(theta31, 2)*theta32 + (1.0/60.0)*theta31*std::pow(theta32, 3) - 1.0/12.0*theta31*std::pow(theta32, 2) + (1.0/6.0)*theta31*theta32 + (1.0/120.0)*std::pow(theta32, 4) - 1.0/24.0*std::pow(theta32, 3) + (1.0/12.0)*std::pow(theta32, 2) - 1.0/12.0*theta32)/(phi1 - phi3) - 1.0*(-1.0/120.0*theta01*std::pow(theta31, 4) + (1.0/30.0)*theta01*std::pow(theta31, 3) - 1.0/20.0*theta01*std::pow(theta31, 2) + (1.0/30.0)*theta01*theta31 - 1.0/120.0*theta01 - 1.0/120.0*std::pow(theta31, 4)*theta32 + (1.0/120.0)*std::pow(theta31, 4) - 1.0/120.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/24.0)*std::pow(theta31, 3)*theta32 - 1.0/30.0*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/24.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*std::pow(theta31, 2)*theta32 + (1.0/20.0)*std::pow(theta31, 2) - 1.0/120.0*theta31*std::pow(theta32, 4) + (1.0/24.0)*theta31*std::pow(theta32, 3) - 1.0/12.0*theta31*std::pow(theta32, 2) + (1.0/12.0)*theta31*theta32 - 1.0/30.0*theta31)/(-phi0 + phi2) - 1.0*(-1.0/120.0*theta02*std::pow(theta31, 4) + (1.0/30.0)*theta02*std::pow(theta31, 3) - 1.0/20.0*theta02*std::pow(theta31, 2) + (1.0/30.0)*theta02*theta31 - 1.0/120.0*theta02)/(-phi0 + phi1);
    b_H[4] = (1.0/24.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[4] = 1.0/24.0 - 1.0/24.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[4] = -0.041666666666666664*std::pow(theta02, 2)*(theta31 - 1)/(-phi0 + phi1) - 0.041666666666666664*theta31*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/24.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(theta01 - 1) - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3)*theta31 + 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3) - 6*theta02*std::pow(theta31, 2) + 12*theta02*theta31 - 6*theta02 + (2*theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[5] = (1.0/120.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[5] = 1.0/120.0 - 1.0/120.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[5] = -0.0083333333333333332*std::pow(theta02, 2)*(-std::pow(theta31, 2) + 2*theta31 - 1)/(-phi0 + phi1) + 0.0083333333333333332*theta31*(std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*theta31*theta32 - theta02*theta31 + 6*theta02*std::pow(theta32, 2) - 10*theta02*theta32 + 3*theta02 - 2*theta31*theta32 - 6*std::pow(theta32, 2) + 8*theta32)/(phi2 - phi3) - 0.0083333333333333332*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2) + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta02, 2)*theta31*theta32 + std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(-2*theta01*theta31 + 2*theta01 + 2*theta31 - 2) - 2*std::pow(theta02, 2) - theta02*theta31*std::pow(theta32, 2) + theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 5*theta02*std::pow(theta32, 2) - 3*theta02*theta32 + theta31*std::pow(theta32, 2) - theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - theta31 + 2*std::pow(theta32, 3) - 4*std::pow(theta32, 2) + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/120.0)*(-4*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*theta31 - 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3) + 6*theta02*std::pow(theta31, 2) - 12*theta02*theta31 + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2)) + (2*theta02*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(2*theta02*theta31*theta32 - 2*theta02*theta31 + 2*theta02*std::pow(theta32, 2) - 6*theta02*theta32 + 4*theta02 + theta31*std::pow(theta32, 2) - theta31*theta32 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[6] = (1.0/360.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 3) + 9*std::pow(theta02, 2)*std::pow(theta31, 2) - 9*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[6] = 1.0/360.0 - 1.0/360.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 3) + 9*std::pow(theta02, 2)*std::pow(theta31, 2) - 9*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[6] = -0.0027777777777777779*std::pow(theta02, 2)*(std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 - 1)/(-phi0 + phi1) - 0.0027777777777777779*theta31*(std::pow(theta02, 2)*std::pow(theta31, 2) + 2*std::pow(theta02, 2)*theta31*theta32 - 4*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 8*std::pow(theta02, 2)*theta32 + 6*std::pow(theta02, 2) + 2*theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + 6*theta02*theta31*std::pow(theta32, 2) - 12*theta02*theta31*theta32 + 4*theta02*theta31 + 12*theta02*std::pow(theta32, 3) - 33*theta02*std::pow(theta32, 2) + 28*theta02*theta32 - 6*theta02 - 2*std::pow(theta31, 2)*theta32 - 6*theta31*std::pow(theta32, 2) + 10*theta31*theta32 - 12*std::pow(theta32, 3) + 30*std::pow(theta32, 2) - 20*theta32)/(phi2 - phi3) - 0.0027777777777777779*(-6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 12*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(2 - 2*theta31)*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 18*std::pow(theta02, 2)*theta31 - 9*std::pow(theta02, 2) - 3*std::pow(theta31, 2) + 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(3*theta01*std::pow(theta31, 2) - 6*theta01*theta31 + 3*theta01 - 3*std::pow(theta31, 2) + 6*theta31 - 3) - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) + theta31*(2*std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta32 + 3*std::pow(theta02, 2) + 2*theta02*theta31*std::pow(theta32, 2) - 2*theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 6*theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 2*theta31*std::pow(theta32, 2) + 2*theta31 - 2*std::pow(theta32, 3) + 5*std::pow(theta32, 2) - 3) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3) - 3)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/360.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 3) + 9*std::pow(theta02, 2)*std::pow(theta31, 2) - 9*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/360.0)*(4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 3) + 24*std::pow(theta02, 3)*std::pow(theta31, 2) + 8*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 24*std::pow(theta02, 3)*theta31 + 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 8*std::pow(theta02, 3) - 6*theta02*std::pow(theta31, 3) + 18*theta02*std::pow(theta31, 2) - 18*theta02*theta31 + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3)) + (2*theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(2*theta02*std::pow(theta31, 2)*theta32 - 2*theta02*std::pow(theta31, 2) + 2*theta02*theta31*std::pow(theta32, 2) - 8*theta02*theta31*theta32 + 6*theta02*theta31 + 2*theta02*std::pow(theta32, 3) - 8*theta02*std::pow(theta32, 2) + 12*theta02*theta32 - 6*theta02 + std::pow(theta31, 2)*std::pow(theta32, 2) - std::pow(theta31, 2)*theta32 + 2*theta31*std::pow(theta32, 3) - 6*theta31*std::pow(theta32, 2) + 4*theta31*theta32 + 3*std::pow(theta32, 4) - 11*std::pow(theta32, 3) + 14*std::pow(theta32, 2) - 6*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[7] = (1.0/60.0)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[7] = 1.0/60.0 - 1.0/60.0*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[7] = -0.016666666666666666*std::pow(theta02, 3)*(theta31 - 1)/(-phi0 + phi1) - 0.016666666666666666*theta31*(std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + 3*theta02*std::pow(theta32, 2) - 2*theta02*theta32 - 3*std::pow(theta32, 2))/(phi2 - phi3) - 1.0*((1.0/60.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 5) - 8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 3)*theta32 + std::pow(theta02, 3)*(theta01 - 1) - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/60.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 4)*std::pow(theta31, 2) - 20*std::pow(theta02, 4)*theta31 + 10*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 4) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + (3*std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(3*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*std::pow(theta32, 2) - 2*theta02*theta32 + std::pow(theta32, 3) - std::pow(theta32, 2)))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[8] = (1.0/360.0)*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5)*std::pow(theta31, 2) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[8] = 1.0/360.0 - 1.0/360.0*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5)*std::pow(theta31, 2) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[8] = -0.0027777777777777779*std::pow(theta02, 3)*(-std::pow(theta31, 2) + 2*theta31 - 1)/(-phi0 + phi1) + 0.0027777777777777779*theta31*(std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::pow(theta32, 2) - 10*std::pow(theta02, 2)*theta32 + 3*std::pow(theta02, 2) + 3*theta02*theta31*std::pow(theta32, 2) - 2*theta02*theta31*theta32 + 12*theta02*std::pow(theta32, 3) - 21*theta02*std::pow(theta32, 2) + 8*theta02*theta32 - 3*theta31*std::pow(theta32, 2) - 12*std::pow(theta32, 3) + 15*std::pow(theta32, 2))/(phi2 - phi3) - 0.0027777777777777779*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5) + 8*std::pow(theta02, 4)*theta31 - 8*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*theta31 - 8*std::pow(theta02, 2) + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta02, 3)*theta31*theta32 + std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::pow(theta32, 2) + 3*std::pow(theta02, 3)*theta32 + std::pow(theta02, 3)*(-2*theta01*theta31 + 2*theta01 + 2*theta31 - 2) - 2*std::pow(theta02, 3) - std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*std::pow(theta32, 3) + 5*std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 - theta02*theta31*std::pow(theta32, 3) + theta02*theta31*std::pow(theta32, 2) - 3*theta02*std::pow(theta32, 4) + 7*theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + theta31*std::pow(theta32, 3) - theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - theta31 + 3*std::pow(theta32, 4) - 5*std::pow(theta32, 3) + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/360.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5)*std::pow(theta31, 2) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/360.0)*(-4*std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 10*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 10*std::pow(theta02, 4)*std::pow(theta31, 2) + 20*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 20*std::pow(theta02, 4)*theta31 - 10*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 10*std::pow(theta02, 4) + 16*std::pow(theta02, 3)*std::pow(theta31, 2) - 32*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) + 8*theta02*std::pow(theta31, 2) - 16*theta02*theta31 + 8*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2)) + (3*std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(3*std::pow(theta02, 2)*theta31*theta32 - 3*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 9*std::pow(theta02, 2)*theta32 + 6*std::pow(theta02, 2) + 2*theta02*theta31*std::pow(theta32, 2) - 2*theta02*theta31*theta32 + 4*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) + 6*theta02*theta32 + theta31*std::pow(theta32, 3) - theta31*std::pow(theta32, 2) + 3*std::pow(theta32, 4) - 7*std::pow(theta32, 3) + 4*std::pow(theta32, 2)))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[9] = (1.0/120.0)*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[9] = 1.0/120.0 - 1.0/120.0*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[9] = -0.0083333333333333332*std::pow(theta02, 4)*(theta31 - 1)/(-phi0 + phi1) - 0.0083333333333333332*theta31*(std::pow(theta02, 4) + 2*std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 2*std::pow(theta02, 2)*theta32 + 4*theta02*std::pow(theta32, 3) - 3*theta02*std::pow(theta32, 2) - 4*std::pow(theta32, 3))/(phi2 - phi3) - 1.0*((1.0/120.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/120.0)*(4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 6) - 6*std::pow(theta02, 4)*theta31 + 6*std::pow(theta02, 4) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 4)*theta32 + std::pow(theta02, 4)*(theta01 - 1) - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/120.0)*(4*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 12*std::pow(theta02, 5)*std::pow(theta31, 2) - 24*std::pow(theta02, 5)*theta31 + 12*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 12*std::pow(theta02, 5) - 12*std::pow(theta02, 3)*std::pow(theta31, 2) + 24*std::pow(theta02, 3)*theta31 - 12*std::pow(theta02, 3) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + (4*std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(4*std::pow(theta02, 3)*theta32 - 4*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*theta02*std::pow(theta32, 3) - 2*theta02*std::pow(theta32, 2) + std::pow(theta32, 4) - std::pow(theta32, 3)))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[10] = (1.0/24.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/24.0*std::pow(theta01, 2)*theta02 + (1.0/24.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/24.0*theta01*theta02*theta31 + (1.0/24.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/24.0*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2)*theta32 + 1.0/24.0;
    b_ImH[10] = -1.0/24.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/24.0)*std::pow(theta01, 2)*theta02 - 1.0/24.0*theta01*theta02*std::pow(theta31, 2) + (1.0/24.0)*theta01*theta02*theta31 - 1.0/24.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/24.0)*theta02*std::pow(theta31, 2) + (1.0/24.0)*std::pow(theta31, 2)*theta32;
    b_D[10] = -1.0*((1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2))/(phi2 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta02 + (1.0/12.0)*theta01*theta02*theta31 - 1.0/24.0*theta01*theta02 + (1.0/12.0)*theta02*theta31*theta32 - 1.0/12.0*theta02*theta31 - 1.0/12.0*theta31*theta32)/(phi1 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta31 - 1.0/24.0*std::pow(theta01, 2) + (1.0/24.0)*theta01*std::pow(theta31, 2) - 1.0/24.0*theta01*theta31 + (1.0/24.0)*std::pow(theta31, 2)*theta32 - 1.0/24.0*std::pow(theta31, 2))/(-phi0 + phi2) - 1.0*((1.0/12.0)*theta01*theta02*theta31 - 1.0/12.0*theta01*theta02 + (1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*theta02*theta31)/(-phi0 + phi1);
    b_H[11] = (1.0/120.0)*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[11] = 1.0/120.0 - 1.0/120.0*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[11] = 0.0083333333333333332*theta02*(2*theta01*std::pow(theta31, 2) - 4*theta01*theta31 + 2*theta01 + 2*std::pow(theta31, 3) - 4*std::pow(theta31, 2) + 2*theta31)/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 2)*(-2*theta02*theta31 - 2*theta02*theta32 + 4*theta02 + 2*theta31 + 2*theta32 - 4)/(phi2 - phi3) - 0.0083333333333333332*(24*std::pow(theta02, 4)*std::pow(theta31, 2) - 24*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 3)*std::pow(theta31, 2) + 12*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 24*std::pow(theta02, 2)*std::pow(theta31, 2) - 24*std::pow(theta02, 2)*theta31 - 6*theta02*std::pow(theta31, 2) + 6*theta02*theta31 + 6*std::pow(theta31, 2) - 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*(2*std::pow(theta01, 2)*theta31 - 2*std::pow(theta01, 2) + 6*theta01*std::pow(theta31, 2) - 8*theta01*theta31 + 2*theta01 - 6*std::pow(theta31, 2) + 6*theta31) + std::pow(theta31, 2)*(-2*theta02*theta32 + 2*theta02 + 2*theta32 - 2) + 2*theta31*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/120.0)*(-8*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 32*std::pow(theta02, 3)*std::pow(theta31, 3) + 3*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 48*std::pow(theta02, 3)*std::pow(theta31, 2) - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 2)*std::pow(theta31, 3) + 18*std::pow(theta02, 2)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 18*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 16*theta02*std::pow(theta31, 3) - 24*theta02*std::pow(theta31, 2) + 8*theta02 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) + std::pow(theta31, 2)*(-2*theta31*theta32 + 2*theta31 - std::pow(theta32, 2) + 4*theta32 - 3) - 3*std::pow(theta31, 2) + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[12] = (1.0/360.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/360.0*std::pow(theta01, 2)*theta02 + (1.0/120.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/40.0*theta01*theta02*std::pow(theta31, 3) + (1.0/40.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/120.0*theta01*theta02*theta31 + (1.0/120.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/120.0*theta02*std::pow(theta31, 4) + (1.0/180.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/36.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/45.0)*theta02*std::pow(theta31, 3) + (1.0/360.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/72.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/60.0*theta02*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta31, 4)*theta32 - 1.0/180.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 3)*theta32 - 1.0/360.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/72.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/36.0*std::pow(theta31, 2)*theta32 + 1.0/360.0;
    b_ImH[12] = -1.0/360.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) + (1.0/120.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/360.0)*std::pow(theta01, 2)*theta02 - 1.0/120.0*theta01*theta02*std::pow(theta31, 4) + (1.0/40.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/40.0*theta01*theta02*std::pow(theta31, 2) + (1.0/120.0)*theta01*theta02*theta31 - 1.0/120.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/120.0)*theta02*std::pow(theta31, 4) - 1.0/180.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/36.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/45.0*theta02*std::pow(theta31, 3) - 1.0/360.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/72.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/36.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/60.0)*theta02*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta31, 4)*theta32 + (1.0/180.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/36.0*std::pow(theta31, 3)*theta32 + (1.0/360.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/72.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 2)*theta32;
    b_D[12] = -1.0*((1.0/120.0)*theta02*std::pow(theta31, 4) + (1.0/90.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/36.0*theta02*std::pow(theta31, 3) + (1.0/120.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/36.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/36.0)*theta02*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta31, 4) - 1.0/90.0*std::pow(theta31, 3)*theta32 + (1.0/36.0)*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 2)*theta32 - 1.0/36.0*std::pow(theta31, 2))/(phi2 - phi3) - 1.0*((1.0/120.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/120.0)*std::pow(theta01, 2)*theta02 + (1.0/30.0)*theta01*theta02*std::pow(theta31, 3) - 3.0/40.0*theta01*theta02*std::pow(theta31, 2) + (1.0/20.0)*theta01*theta02*theta31 - 1.0/120.0*theta01*theta02 + (1.0/30.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/30.0*theta02*std::pow(theta31, 3) + (1.0/60.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/15.0)*theta02*std::pow(theta31, 2) + (1.0/180.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/36.0*theta02*theta31*std::pow(theta32, 2) + (1.0/18.0)*theta02*theta31*theta32 - 1.0/30.0*theta02*theta31 - 1.0/30.0*std::pow(theta31, 3)*theta32 - 1.0/60.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*std::pow(theta31, 2)*theta32 - 1.0/180.0*theta31*std::pow(theta32, 3) + (1.0/36.0)*theta31*std::pow(theta32, 2) - 1.0/18.0*theta31*theta32)/(phi1 - phi3) - 1.0*((1.0/360.0)*std::pow(theta01, 2)*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta01, 2)*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta01, 2)*theta31 - 1.0/360.0*std::pow(theta01, 2) + (1.0/120.0)*theta01*std::pow(theta31, 4) - 1.0/40.0*theta01*std::pow(theta31, 3) + (1.0/40.0)*theta01*std::pow(theta31, 2) - 1.0/120.0*theta01*theta31 + (1.0/120.0)*std::pow(theta31, 4)*theta32 - 1.0/120.0*std::pow(theta31, 4) + (1.0/180.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/36.0*std::pow(theta31, 3)*theta32 + (1.0/45.0)*std::pow(theta31, 3) + (1.0/360.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/72.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 2)*theta32 - 1.0/60.0*std::pow(theta31, 2))/(-phi0 + phi2) - 1.0*((1.0/180.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/60.0*theta01*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta01*theta02*theta31 - 1.0/180.0*theta01*theta02 + (1.0/120.0)*theta02*std::pow(theta31, 4) - 1.0/40.0*theta02*std::pow(theta31, 3) + (1.0/40.0)*theta02*std::pow(theta31, 2) - 1.0/120.0*theta02*theta31)/(-phi0 + phi1);
    b_H[13] = (1.0/120.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/120.0*std::pow(theta02, 2) + (1.0/120.0)*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/120.0*std::pow(theta31, 2) + 1.0/120.0;
    b_ImH[13] = -1.0/120.0*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) + (1.0/120.0)*std::pow(theta02, 2) - 1.0/120.0*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + (1.0/120.0)*std::pow(theta31, 2);
    b_D[13] = -0.0083333333333333332*std::pow(theta02, 2)*(2*theta01*theta31 - 2*theta01 + std::pow(theta31, 2) - theta31)/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 2)*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/60.0)*std::pow(theta02, 2)*theta31 + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2) + 2*theta01*theta31 - theta01 - 2*theta31) + (1.0/60.0)*theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/60.0*theta31)/(phi1 - phi3) - 1.0*((1.0/60.0)*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta02*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/60.0*theta02 + (1.0/120.0)*std::pow(theta31, 2)*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))/(-phi0 + phi2);
    b_H[14] = (1.0/720.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 4)*std::pow(theta31, 2) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 3*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[14] = 1.0/720.0 - 1.0/720.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 4)*std::pow(theta31, 2) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 3*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[14] = -0.0013888888888888889*std::pow(theta02, 2)*(-2*theta01*std::pow(theta31, 2) + 4*theta01*theta31 - 2*theta01 - 2*std::pow(theta31, 3) + 4*std::pow(theta31, 2) - 2*theta31)/(-phi0 + phi1) - 0.0013888888888888889*std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31 - 2*std::pow(theta02, 2)*theta32 + 4*std::pow(theta02, 2) - 4*theta02*theta31*theta32 + 2*theta02*theta31 - 6*theta02*std::pow(theta32, 2) + 12*theta02*theta32 - 4*theta02 + 4*theta31*theta32 + 6*std::pow(theta32, 2) - 10*theta32)/(phi2 - phi3) - 0.0013888888888888889*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 12*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 18*std::pow(theta02, 2)*std::pow(theta31, 2) - 18*std::pow(theta02, 2)*theta31 + 6*std::pow(theta31, 2) - 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(std::pow(theta02, 2)*(-2*std::pow(theta01, 2)*theta31 + 2*std::pow(theta01, 2) - 6*theta01*std::pow(theta31, 2) + 8*theta01*theta31 - 2*theta01 + 6*std::pow(theta31, 2) - 6*theta31) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) - 2*theta02*std::pow(theta32, 2) + 2*theta02*theta32 + 2*std::pow(theta32, 2) - 2) + 2*theta31*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/720.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 4)*std::pow(theta31, 2) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 3*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/720.0)*(-8*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 3*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 16*std::pow(theta02, 3)*std::pow(theta31, 3) + 24*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 24*std::pow(theta02, 3)*std::pow(theta31, 2) - 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3) + 12*theta02*std::pow(theta31, 3) - 18*theta02*std::pow(theta31, 2) + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3)) + (2*theta02*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-4*theta02*theta31*theta32 + 4*theta02*theta31 - 2*theta02*std::pow(theta32, 2) + 8*theta02*theta32 - 6*theta02 - 2*theta31*std::pow(theta32, 2) + 2*theta31*theta32 - 2*std::pow(theta32, 3) + 6*std::pow(theta32, 2) - 4*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[15] = (1.0/360.0)*std::pow(theta02, 3)*std::pow(theta31, 2) + (1.0/360.0)*std::pow(theta02, 3)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/360.0*std::pow(theta02, 3) + (1.0/360.0)*std::pow(theta31, 2)*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - 1.0/360.0*std::pow(theta31, 2) + 1.0/360.0;
    b_ImH[15] = -1.0/360.0*std::pow(theta02, 3)*std::pow(theta31, 2) - 1.0/360.0*std::pow(theta02, 3)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) + (1.0/360.0)*std::pow(theta02, 3) - 1.0/360.0*std::pow(theta31, 2)*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) + (1.0/360.0)*std::pow(theta31, 2);
    b_D[15] = -0.0027777777777777779*std::pow(theta02, 3)*(2*theta01*theta31 - 2*theta01 + std::pow(theta31, 2) - theta31)/(-phi0 + phi1) - 0.0027777777777777779*std::pow(theta31, 2)*(std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + 3*theta02*std::pow(theta32, 2) - 2*theta02*theta32 - 3*std::pow(theta32, 2))/(phi2 - phi3) - 1.0*((1.0/180.0)*std::pow(theta02, 3)*theta31 + (1.0/360.0)*std::pow(theta02, 3)*(std::pow(theta01, 2) + 2*theta01*theta31 - theta01 - 2*theta31) + (1.0/180.0)*theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - 1.0/180.0*theta31)/(phi1 - phi3) - 1.0*((1.0/120.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/120.0*std::pow(theta02, 2) + (1.0/360.0)*std::pow(theta31, 2)*(3*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*std::pow(theta32, 2) - 2*theta02*theta32 + std::pow(theta32, 3) - std::pow(theta32, 2)))/(-phi0 + phi2);
    b_H[16] = (1.0/60.0)*std::pow(theta01, 3)*theta02*theta31 - 1.0/60.0*std::pow(theta01, 3)*theta02 + (1.0/60.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/60.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/60.0*theta01*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/60.0*theta02*std::pow(theta31, 3) - 1.0/60.0*std::pow(theta31, 3)*theta32 + 1.0/60.0;
    b_ImH[16] = -1.0/60.0*std::pow(theta01, 3)*theta02*theta31 + (1.0/60.0)*std::pow(theta01, 3)*theta02 - 1.0/60.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/60.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/60.0*theta01*theta02*std::pow(theta31, 3) + (1.0/60.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/60.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/60.0)*theta02*std::pow(theta31, 3) + (1.0/60.0)*std::pow(theta31, 3)*theta32;
    b_D[16] = -1.0*((1.0/60.0)*theta02*std::pow(theta31, 3) - 1.0/60.0*std::pow(theta31, 3))/(phi2 - phi3) - 1.0*((1.0/60.0)*std::pow(theta01, 3)*theta02 + (1.0/30.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/60.0*std::pow(theta01, 2)*theta02 + (1.0/20.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/20.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/20.0*theta02*std::pow(theta31, 2) - 1.0/20.0*std::pow(theta31, 2)*theta32)/(phi1 - phi3) - 1.0*((1.0/60.0)*std::pow(theta01, 3)*theta31 - 1.0/60.0*std::pow(theta01, 3) + (1.0/60.0)*std::pow(theta01, 2)*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta31 + (1.0/60.0)*theta01*std::pow(theta31, 3) - 1.0/60.0*theta01*std::pow(theta31, 2) + (1.0/60.0)*std::pow(theta31, 3)*theta32 - 1.0/60.0*std::pow(theta31, 3))/(-phi0 + phi2) - 1.0*((1.0/20.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/20.0*std::pow(theta01, 2)*theta02 + (1.0/30.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/60.0)*theta02*std::pow(theta31, 3) - 1.0/60.0*theta02*std::pow(theta31, 2))/(-phi0 + phi1);
    b_H[17] = (1.0/360.0)*(12*std::pow(theta02, 4)*std::pow(theta31, 4) - 16*std::pow(theta02, 4)*std::pow(theta31, 3) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 3)*std::pow(theta31, 4) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 4) - 16*std::pow(theta02, 2)*std::pow(theta31, 3) + 4*std::pow(theta02, 2) - 3*theta02*std::pow(theta31, 4) + 4*theta02*std::pow(theta31, 3) - theta02 + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[17] = 1.0/360.0 - 1.0/360.0*(12*std::pow(theta02, 4)*std::pow(theta31, 4) - 16*std::pow(theta02, 4)*std::pow(theta31, 3) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 3)*std::pow(theta31, 4) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 4) - 16*std::pow(theta02, 2)*std::pow(theta31, 3) + 4*std::pow(theta02, 2) - 3*theta02*std::pow(theta31, 4) + 4*theta02*std::pow(theta31, 3) - theta02 + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[17] = 0.0027777777777777779*theta02*(3*std::pow(theta01, 2)*std::pow(theta31, 2) - 6*std::pow(theta01, 2)*theta31 + 3*std::pow(theta01, 2) + 4*theta01*std::pow(theta31, 3) - 8*theta01*std::pow(theta31, 2) + 4*theta01*theta31 + 3*std::pow(theta31, 4) - 6*std::pow(theta31, 3) + 3*std::pow(theta31, 2))/(-phi0 + phi1) - 0.0027777777777777779*std::pow(theta31, 3)*(-3*theta02*theta31 - 2*theta02*theta32 + 5*theta02 + 3*theta31 + 2*theta32 - 5)/(phi2 - phi3) - 0.0027777777777777779*(48*std::pow(theta02, 4)*std::pow(theta31, 3) - 48*std::pow(theta02, 4)*std::pow(theta31, 2) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 24*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 24*std::pow(theta02, 3)*std::pow(theta31, 3) + 24*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 24*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 48*std::pow(theta02, 2)*std::pow(theta31, 3) - 48*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*theta02*std::pow(theta31, 3) + 12*theta02*std::pow(theta31, 2) + 12*std::pow(theta31, 3) - 12*std::pow(theta31, 2) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*(2*std::pow(theta01, 3)*theta31 - 2*std::pow(theta01, 3) + 6*std::pow(theta01, 2)*std::pow(theta31, 2) - 8*std::pow(theta01, 2)*theta31 + 2*std::pow(theta01, 2) + 12*theta01*std::pow(theta31, 3) - 18*theta01*std::pow(theta31, 2) + 6*theta01*theta31 - 12*std::pow(theta31, 3) + 12*std::pow(theta31, 2)) + std::pow(theta31, 3)*(-3*theta02*theta32 + 3*theta02 + 3*theta32 - 3) + 3*std::pow(theta31, 2)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/360.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(12*std::pow(theta02, 4)*std::pow(theta31, 4) - 16*std::pow(theta02, 4)*std::pow(theta31, 3) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 3)*std::pow(theta31, 4) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 4) - 16*std::pow(theta02, 2)*std::pow(theta31, 3) + 4*std::pow(theta02, 2) - 3*theta02*std::pow(theta31, 4) + 4*theta02*std::pow(theta31, 3) - theta02 + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/360.0)*(-12*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 16*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 3*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 48*std::pow(theta02, 3)*std::pow(theta31, 4) + 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 64*std::pow(theta02, 3)*std::pow(theta31, 3) - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 18*std::pow(theta02, 2)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 18*std::pow(theta02, 2)*std::pow(theta31, 4) + 24*std::pow(theta02, 2)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 24*std::pow(theta02, 2)*std::pow(theta31, 3) - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 24*theta02*std::pow(theta31, 4) - 32*theta02*std::pow(theta31, 3) + 8*theta02 - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) - 2*std::pow(theta01, 2)*std::pow(theta31, 3) + 4*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 - 3*theta01*std::pow(theta31, 4) + 6*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*std::pow(theta31, 4) + std::pow(theta31, 3)*(-3*theta31*theta32 + 3*theta31 - std::pow(theta32, 2) + 5*theta32 - 4) - 4*std::pow(theta31, 3) + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[18] = (1.0/360.0)*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/360.0)*std::pow(theta02, 2)*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) - 1.0/360.0*std::pow(theta02, 2) + (1.0/360.0)*std::pow(theta31, 3)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/360.0*std::pow(theta31, 3) + 1.0/360.0;
    b_ImH[18] = -1.0/360.0*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/360.0*std::pow(theta02, 2)*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) + (1.0/360.0)*std::pow(theta02, 2) - 1.0/360.0*std::pow(theta31, 3)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + (1.0/360.0)*std::pow(theta31, 3);
    b_D[18] = -0.0027777777777777779*std::pow(theta02, 2)*(3*std::pow(theta01, 2)*theta31 - 3*std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + std::pow(theta31, 3) - std::pow(theta31, 2))/(-phi0 + phi1) - 0.0027777777777777779*std::pow(theta31, 3)*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/120.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/360.0)*std::pow(theta02, 2)*(std::pow(theta01, 3) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + 3*theta01*std::pow(theta31, 2) - 2*theta01*theta31 - 3*std::pow(theta31, 2)) + (1.0/120.0)*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/120.0*std::pow(theta31, 2))/(phi1 - phi3) - 1.0*((1.0/180.0)*theta02*std::pow(theta31, 3) + (1.0/180.0)*theta02*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) - 1.0/180.0*theta02 + (1.0/360.0)*std::pow(theta31, 3)*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))/(-phi0 + phi2);
    b_H[19] = (1.0/120.0)*theta02*std::pow(theta31, 4) + (1.0/120.0)*theta02*(std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + std::pow(theta01, 3)*std::pow(theta31, 2) - std::pow(theta01, 3)*theta31 + std::pow(theta01, 2)*std::pow(theta31, 3) - std::pow(theta01, 2)*std::pow(theta31, 2) + theta01*std::pow(theta31, 4) - theta01*std::pow(theta31, 3) - std::pow(theta31, 4) + 1) - 1.0/120.0*theta02 + (1.0/120.0)*std::pow(theta31, 4)*(theta02*theta32 - theta02 - theta32 + 1) - 1.0/120.0*std::pow(theta31, 4) + 1.0/120.0;
    b_ImH[19] = -1.0/120.0*theta02*std::pow(theta31, 4) - 1.0/120.0*theta02*(std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + std::pow(theta01, 3)*std::pow(theta31, 2) - std::pow(theta01, 3)*theta31 + std::pow(theta01, 2)*std::pow(theta31, 3) - std::pow(theta01, 2)*std::pow(theta31, 2) + theta01*std::pow(theta31, 4) - theta01*std::pow(theta31, 3) - std::pow(theta31, 4) + 1) + (1.0/120.0)*theta02 - 1.0/120.0*std::pow(theta31, 4)*(theta02*theta32 - theta02 - theta32 + 1) + (1.0/120.0)*std::pow(theta31, 4);
    b_D[19] = -0.0083333333333333332*theta02*(4*std::pow(theta01, 3)*theta31 - 4*std::pow(theta01, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) - 3*std::pow(theta01, 2)*theta31 + 2*theta01*std::pow(theta31, 3) - 2*theta01*std::pow(theta31, 2) + std::pow(theta31, 4) - std::pow(theta31, 3))/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 4)*(theta02 - 1)/(phi2 - phi3) - 1.0*((1.0/30.0)*theta02*std::pow(theta31, 3) + (1.0/120.0)*theta02*(std::pow(theta01, 4) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + 4*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) - 4*std::pow(theta31, 3)) + (1.0/30.0)*std::pow(theta31, 3)*(theta02*theta32 - theta02 - theta32 + 1) - 1.0/30.0*std::pow(theta31, 3))/(phi1 - phi3) - 1.0*((1.0/120.0)*std::pow(theta01, 4)*theta31 - 1.0/120.0*std::pow(theta01, 4) + (1.0/120.0)*std::pow(theta01, 3)*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta01, 3)*theta31 + (1.0/120.0)*std::pow(theta01, 2)*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta01, 2)*std::pow(theta31, 2) + (1.0/120.0)*theta01*std::pow(theta31, 4) - 1.0/120.0*theta01*std::pow(theta31, 3) + (1.0/120.0)*std::pow(theta31, 4)*(theta32 - 1))/(-phi0 + phi2);
  }

  template<>
inline void _calculate_b<4>(double theta01, double theta02, double theta31, double theta32,
                                double phi0, double phi1, double phi2, double phi3,
                                double* b_H, double* b_ImH, double* b_D)
  {
    b_H[0] = (1.0/6.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[0] = 1.0/6.0 - 1.0/6.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[0] = -0.16666666666666666*theta02*(theta31 - 1)/(-phi0 + phi1) - 0.16666666666666666*theta31*(theta02 - 1)/(phi2 - phi3) - 1.0*((1.0/6.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(-8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) + 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) + 2*theta02*theta31 - 2*theta02 - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (theta02*theta32 + theta02*(theta01 - 1) - theta02 - theta32 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/6.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 2) - 4*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 2) - 2*theta02*theta31 + theta02 - std::pow(theta31, 2) + 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/6.0)*(4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 16*std::pow(theta02, 3) + 6*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + std::pow(theta31, 2) - 2*theta31 + (theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(theta02*theta32 - theta02 - theta32 + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02) + (theta01*theta31 - theta01 + theta31*(theta32 - 1) - theta31 + 1)*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[1] = (1.0/24.0)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[1] = 1.0/24.0 - 1.0/24.0*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[1] = 0.041666666666666664*theta02*(std::pow(theta31, 2) - 2*theta31 + 1)/(-phi0 + phi1) + 0.041666666666666664*theta31*(theta02*theta31 + 2*theta02*theta32 - 3*theta02 - theta31 - 2*theta32 + 3)/(phi2 - phi3) - 0.041666666666666664*(8*std::pow(theta02, 4)*theta31 - 8*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*theta31 - 8*std::pow(theta02, 2) - 2*theta02*theta31 + 2*theta02 + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*theta31*theta32 + theta02*theta31 - theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta02*(2*theta01*theta31 - 2*theta01 - 2*theta31 + 2) - 2*theta02 + theta31*theta32 - theta31*(theta02*theta32 - theta02 - theta32 + 1) - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 2) + 4*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - theta02*std::pow(theta31, 2) + 2*theta02*theta31 - theta02 + std::pow(theta31, 2) - 2*theta31 - (theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) + theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 32*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 6*std::pow(theta02, 2)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2)*std::pow(theta31, 2) + 12*std::pow(theta02, 2)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 8*theta02*std::pow(theta31, 2) - 16*theta02*theta31 + 8*theta02 - std::pow(theta31, 2) + 2*theta31 + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(theta01*std::pow(theta31, 2) - 2*theta01*theta31 + theta01 - std::pow(theta31, 2) + 2*theta31 - 1) - theta31*(theta02*theta31*theta32 - theta02*theta31 + theta02*std::pow(theta32, 2) - 3*theta02*theta32 + 2*theta02 - theta31*theta32 + theta31 - std::pow(theta32, 2) + 3*theta32 - 2)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - theta31*(theta31*theta32 - theta31 + std::pow(theta32, 2) - 3*theta32 + 2) - 2*theta31 + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[2] = (1.0/60.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[2] = 1.0/60.0 - 1.0/60.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[2] = -0.016666666666666666*theta02*(std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 - 1)/(-phi0 + phi1) - 0.016666666666666666*theta31*(theta02*std::pow(theta31, 2) + 2*theta02*theta31*theta32 - 4*theta02*theta31 + 3*theta02*std::pow(theta32, 2) - 8*theta02*theta32 + 6*theta02 - std::pow(theta31, 2) - 2*theta31*theta32 + 4*theta31 - 3*std::pow(theta32, 2) + 8*theta32 - 6)/(phi2 - phi3) - 0.016666666666666666*(-12*std::pow(theta02, 4)*std::pow(theta31, 2) + 24*std::pow(theta02, 4)*theta31 - 12*std::pow(theta02, 4) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(2 - 2*theta31)*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 24*std::pow(theta02, 2)*theta31 - 12*std::pow(theta02, 2) + 3*theta02*std::pow(theta31, 2) - 6*theta02*theta31 + 3*theta02 - 3*std::pow(theta31, 2) + 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 + theta02*(3*theta01*std::pow(theta31, 2) - 6*theta01*theta31 + 3*theta01 - 3*std::pow(theta31, 2) + 6*theta31 - 3) - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 + theta31*(2*theta02*theta31*theta32 - 2*theta02*theta31 + theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 3*theta02 - 2*theta31*theta32 + 2*theta31 - std::pow(theta32, 2) + 4*theta32 - 3) - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3) - 3)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/60.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*std::pow(theta31, 3) - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + theta02*std::pow(theta31, 3) - 3*theta02*std::pow(theta31, 2) + 3*theta02*theta31 - theta02 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)/std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 3) + 48*std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 48*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 18*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 18*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 6*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 3) + 24*theta02*std::pow(theta31, 2) - 24*theta02*theta31 + 8*theta02 + std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 + (16*std::pow(theta02, 3) + 8*theta02)*(theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + theta02*theta31*std::pow(theta32, 2) - 4*theta02*theta31*theta32 + 3*theta02*theta31 + theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 3*theta02 - std::pow(theta31, 2)*theta32 + std::pow(theta31, 2) - theta31*std::pow(theta32, 2) + 4*theta31*theta32 - 3*theta31 - std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 6*theta32 + 3)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) + theta31*(std::pow(theta31, 2)*theta32 - std::pow(theta31, 2) + theta31*std::pow(theta32, 2) - 4*theta31*theta32 + 3*theta31 + std::pow(theta32, 3) - 4*std::pow(theta32, 2) + 6*theta32 - 3) - 3*theta31 + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[3] = -1.0/120.0*theta01*theta02*std::pow(theta31, 4) + (1.0/30.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/20.0*theta01*theta02*std::pow(theta31, 2) + (1.0/30.0)*theta01*theta02*theta31 - 1.0/120.0*theta01*theta02 - 1.0/120.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/120.0)*theta02*std::pow(theta31, 4) - 1.0/120.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/24.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/30.0*theta02*std::pow(theta31, 3) - 1.0/120.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/24.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/20.0)*theta02*std::pow(theta31, 2) - 1.0/120.0*theta02*theta31*std::pow(theta32, 4) + (1.0/24.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/12.0*theta02*theta31*std::pow(theta32, 2) + (1.0/12.0)*theta02*theta31*theta32 - 1.0/30.0*theta02*theta31 + (1.0/120.0)*std::pow(theta31, 4)*theta32 + (1.0/120.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/24.0*std::pow(theta31, 3)*theta32 + (1.0/120.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/24.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*std::pow(theta31, 2)*theta32 + (1.0/120.0)*theta31*std::pow(theta32, 4) - 1.0/24.0*theta31*std::pow(theta32, 3) + (1.0/12.0)*theta31*std::pow(theta32, 2) - 1.0/12.0*theta31*theta32 + 1.0/120.0;
    b_ImH[3] = (1.0/120.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/30.0*theta01*theta02*std::pow(theta31, 3) + (1.0/20.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/120.0)*theta01*theta02 + (1.0/120.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/120.0*theta02*std::pow(theta31, 4) + (1.0/120.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/24.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/30.0)*theta02*std::pow(theta31, 3) + (1.0/120.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/24.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/20.0*theta02*std::pow(theta31, 2) + (1.0/120.0)*theta02*theta31*std::pow(theta32, 4) - 1.0/24.0*theta02*theta31*std::pow(theta32, 3) + (1.0/12.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/12.0*theta02*theta31*theta32 + (1.0/30.0)*theta02*theta31 - 1.0/120.0*std::pow(theta31, 4)*theta32 - 1.0/120.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/24.0)*std::pow(theta31, 3)*theta32 - 1.0/120.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/24.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*std::pow(theta31, 2)*theta32 - 1.0/120.0*theta31*std::pow(theta32, 4) + (1.0/24.0)*theta31*std::pow(theta32, 3) - 1.0/12.0*theta31*std::pow(theta32, 2) + (1.0/12.0)*theta31*theta32;
    b_D[3] = -1.0*(-1.0/120.0*theta02*std::pow(theta31, 4) - 1.0/60.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/24.0)*theta02*std::pow(theta31, 3) - 1.0/40.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/12.0*theta02*std::pow(theta31, 2) - 1.0/30.0*theta02*theta31*std::pow(theta32, 3) + (1.0/8.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/6.0*theta02*theta31*theta32 + (1.0/12.0)*theta02*theta31 + (1.0/120.0)*std::pow(theta31, 4) + (1.0/60.0)*std::pow(theta31, 3)*theta32 - 1.0/24.0*std::pow(theta31, 3) + (1.0/40.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*std::pow(theta31, 2)*theta32 + (1.0/12.0)*std::pow(theta31, 2) + (1.0/30.0)*theta31*std::pow(theta32, 3) - 1.0/8.0*theta31*std::pow(theta32, 2) + (1.0/6.0)*theta31*theta32 - 1.0/12.0*theta31)/(phi2 - phi3) - 1.0*(-1.0/30.0*theta01*theta02*std::pow(theta31, 3) + (1.0/10.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/10.0*theta01*theta02*theta31 + (1.0/30.0)*theta01*theta02 - 1.0/30.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/30.0)*theta02*std::pow(theta31, 3) - 1.0/40.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/8.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/10.0*theta02*std::pow(theta31, 2) - 1.0/60.0*theta02*theta31*std::pow(theta32, 3) + (1.0/12.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/6.0*theta02*theta31*theta32 + (1.0/10.0)*theta02*theta31 - 1.0/120.0*theta02*std::pow(theta32, 4) + (1.0/24.0)*theta02*std::pow(theta32, 3) - 1.0/12.0*theta02*std::pow(theta32, 2) + (1.0/12.0)*theta02*theta32 - 1.0/30.0*theta02 + (1.0/30.0)*std::pow(theta31, 3)*theta32 + (1.0/40.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/8.0*std::pow(theta31, 2)*theta32 + (1.0/60.0)*theta31*std::pow(theta32, 3) - 1.0/12.0*theta31*std::pow(theta32, 2) + (1.0/6.0)*theta31*theta32 + (1.0/120.0)*std::pow(theta32, 4) - 1.0/24.0*std::pow(theta32, 3) + (1.0/12.0)*std::pow(theta32, 2) - 1.0/12.0*theta32)/(phi1 - phi3) - 1.0*(-1.0/120.0*theta01*std::pow(theta31, 4) + (1.0/30.0)*theta01*std::pow(theta31, 3) - 1.0/20.0*theta01*std::pow(theta31, 2) + (1.0/30.0)*theta01*theta31 - 1.0/120.0*theta01 - 1.0/120.0*std::pow(theta31, 4)*theta32 + (1.0/120.0)*std::pow(theta31, 4) - 1.0/120.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/24.0)*std::pow(theta31, 3)*theta32 - 1.0/30.0*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/24.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*std::pow(theta31, 2)*theta32 + (1.0/20.0)*std::pow(theta31, 2) - 1.0/120.0*theta31*std::pow(theta32, 4) + (1.0/24.0)*theta31*std::pow(theta32, 3) - 1.0/12.0*theta31*std::pow(theta32, 2) + (1.0/12.0)*theta31*theta32 - 1.0/30.0*theta31)/(-phi0 + phi2) - 1.0*(-1.0/120.0*theta02*std::pow(theta31, 4) + (1.0/30.0)*theta02*std::pow(theta31, 3) - 1.0/20.0*theta02*std::pow(theta31, 2) + (1.0/30.0)*theta02*theta31 - 1.0/120.0*theta02)/(-phi0 + phi1);
    b_H[4] = (1.0/210.0)*theta01*theta02*std::pow(theta31, 5) - 1.0/42.0*theta01*theta02*std::pow(theta31, 4) + (1.0/21.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/21.0*theta01*theta02*std::pow(theta31, 2) + (1.0/42.0)*theta01*theta02*theta31 - 1.0/210.0*theta01*theta02 + (1.0/210.0)*theta02*std::pow(theta31, 5)*theta32 - 1.0/210.0*theta02*std::pow(theta31, 5) + (1.0/210.0)*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/35.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/42.0)*theta02*std::pow(theta31, 4) + (1.0/210.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/35.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/14.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/21.0*theta02*std::pow(theta31, 3) + (1.0/210.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 4) - 1.0/35.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/14.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 2.0/21.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/21.0)*theta02*std::pow(theta31, 2) + (1.0/210.0)*theta02*theta31*std::pow(theta32, 5) - 1.0/35.0*theta02*theta31*std::pow(theta32, 4) + (1.0/14.0)*theta02*theta31*std::pow(theta32, 3) - 2.0/21.0*theta02*theta31*std::pow(theta32, 2) + (1.0/14.0)*theta02*theta31*theta32 - 1.0/42.0*theta02*theta31 - 1.0/210.0*std::pow(theta31, 5)*theta32 - 1.0/210.0*std::pow(theta31, 4)*std::pow(theta32, 2) + (1.0/35.0)*std::pow(theta31, 4)*theta32 - 1.0/210.0*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/35.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/14.0*std::pow(theta31, 3)*theta32 - 1.0/210.0*std::pow(theta31, 2)*std::pow(theta32, 4) + (1.0/35.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/14.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (2.0/21.0)*std::pow(theta31, 2)*theta32 - 1.0/210.0*theta31*std::pow(theta32, 5) + (1.0/35.0)*theta31*std::pow(theta32, 4) - 1.0/14.0*theta31*std::pow(theta32, 3) + (2.0/21.0)*theta31*std::pow(theta32, 2) - 1.0/14.0*theta31*theta32 + 1.0/210.0;
    b_ImH[4] = -1.0/210.0*theta01*theta02*std::pow(theta31, 5) + (1.0/42.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/21.0*theta01*theta02*std::pow(theta31, 3) + (1.0/21.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/42.0*theta01*theta02*theta31 + (1.0/210.0)*theta01*theta02 - 1.0/210.0*theta02*std::pow(theta31, 5)*theta32 + (1.0/210.0)*theta02*std::pow(theta31, 5) - 1.0/210.0*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) + (1.0/35.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/42.0*theta02*std::pow(theta31, 4) - 1.0/210.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/35.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/14.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/21.0)*theta02*std::pow(theta31, 3) - 1.0/210.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 4) + (1.0/35.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/14.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (2.0/21.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/21.0*theta02*std::pow(theta31, 2) - 1.0/210.0*theta02*theta31*std::pow(theta32, 5) + (1.0/35.0)*theta02*theta31*std::pow(theta32, 4) - 1.0/14.0*theta02*theta31*std::pow(theta32, 3) + (2.0/21.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/14.0*theta02*theta31*theta32 + (1.0/42.0)*theta02*theta31 + (1.0/210.0)*std::pow(theta31, 5)*theta32 + (1.0/210.0)*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/35.0*std::pow(theta31, 4)*theta32 + (1.0/210.0)*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/35.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/14.0)*std::pow(theta31, 3)*theta32 + (1.0/210.0)*std::pow(theta31, 2)*std::pow(theta32, 4) - 1.0/35.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/14.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 2.0/21.0*std::pow(theta31, 2)*theta32 + (1.0/210.0)*theta31*std::pow(theta32, 5) - 1.0/35.0*theta31*std::pow(theta32, 4) + (1.0/14.0)*theta31*std::pow(theta32, 3) - 2.0/21.0*theta31*std::pow(theta32, 2) + (1.0/14.0)*theta31*theta32;
    b_D[4] = -1.0*((1.0/210.0)*theta02*std::pow(theta31, 5) + (1.0/105.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/35.0*theta02*std::pow(theta31, 4) + (1.0/70.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 2.0/35.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/14.0)*theta02*std::pow(theta31, 3) + (2.0/105.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 3.0/35.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/7.0)*theta02*std::pow(theta31, 2)*theta32 - 2.0/21.0*theta02*std::pow(theta31, 2) + (1.0/42.0)*theta02*theta31*std::pow(theta32, 4) - 4.0/35.0*theta02*theta31*std::pow(theta32, 3) + (3.0/14.0)*theta02*theta31*std::pow(theta32, 2) - 4.0/21.0*theta02*theta31*theta32 + (1.0/14.0)*theta02*theta31 - 1.0/210.0*std::pow(theta31, 5) - 1.0/105.0*std::pow(theta31, 4)*theta32 + (1.0/35.0)*std::pow(theta31, 4) - 1.0/70.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (2.0/35.0)*std::pow(theta31, 3)*theta32 - 1.0/14.0*std::pow(theta31, 3) - 2.0/105.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (3.0/35.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/7.0*std::pow(theta31, 2)*theta32 + (2.0/21.0)*std::pow(theta31, 2) - 1.0/42.0*theta31*std::pow(theta32, 4) + (4.0/35.0)*theta31*std::pow(theta32, 3) - 3.0/14.0*theta31*std::pow(theta32, 2) + (4.0/21.0)*theta31*theta32 - 1.0/14.0*theta31)/(phi2 - phi3) - 1.0*((1.0/42.0)*theta01*theta02*std::pow(theta31, 4) - 2.0/21.0*theta01*theta02*std::pow(theta31, 3) + (1.0/7.0)*theta01*theta02*std::pow(theta31, 2) - 2.0/21.0*theta01*theta02*theta31 + (1.0/42.0)*theta01*theta02 + (1.0/42.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/42.0*theta02*std::pow(theta31, 4) + (2.0/105.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 4.0/35.0*theta02*std::pow(theta31, 3)*theta32 + (2.0/21.0)*theta02*std::pow(theta31, 3) + (1.0/70.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 3.0/35.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (3.0/14.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/7.0*theta02*std::pow(theta31, 2) + (1.0/105.0)*theta02*theta31*std::pow(theta32, 4) - 2.0/35.0*theta02*theta31*std::pow(theta32, 3) + (1.0/7.0)*theta02*theta31*std::pow(theta32, 2) - 4.0/21.0*theta02*theta31*theta32 + (2.0/21.0)*theta02*theta31 + (1.0/210.0)*theta02*std::pow(theta32, 5) - 1.0/35.0*theta02*std::pow(theta32, 4) + (1.0/14.0)*theta02*std::pow(theta32, 3) - 2.0/21.0*theta02*std::pow(theta32, 2) + (1.0/14.0)*theta02*theta32 - 1.0/42.0*theta02 - 1.0/42.0*std::pow(theta31, 4)*theta32 - 2.0/105.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (4.0/35.0)*std::pow(theta31, 3)*theta32 - 1.0/70.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (3.0/35.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 3.0/14.0*std::pow(theta31, 2)*theta32 - 1.0/105.0*theta31*std::pow(theta32, 4) + (2.0/35.0)*theta31*std::pow(theta32, 3) - 1.0/7.0*theta31*std::pow(theta32, 2) + (4.0/21.0)*theta31*theta32 - 1.0/210.0*std::pow(theta32, 5) + (1.0/35.0)*std::pow(theta32, 4) - 1.0/14.0*std::pow(theta32, 3) + (2.0/21.0)*std::pow(theta32, 2) - 1.0/14.0*theta32)/(phi1 - phi3) - 1.0*((1.0/210.0)*theta01*std::pow(theta31, 5) - 1.0/42.0*theta01*std::pow(theta31, 4) + (1.0/21.0)*theta01*std::pow(theta31, 3) - 1.0/21.0*theta01*std::pow(theta31, 2) + (1.0/42.0)*theta01*theta31 - 1.0/210.0*theta01 + (1.0/210.0)*std::pow(theta31, 5)*theta32 - 1.0/210.0*std::pow(theta31, 5) + (1.0/210.0)*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/35.0*std::pow(theta31, 4)*theta32 + (1.0/42.0)*std::pow(theta31, 4) + (1.0/210.0)*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/35.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/14.0)*std::pow(theta31, 3)*theta32 - 1.0/21.0*std::pow(theta31, 3) + (1.0/210.0)*std::pow(theta31, 2)*std::pow(theta32, 4) - 1.0/35.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/14.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 2.0/21.0*std::pow(theta31, 2)*theta32 + (1.0/21.0)*std::pow(theta31, 2) + (1.0/210.0)*theta31*std::pow(theta32, 5) - 1.0/35.0*theta31*std::pow(theta32, 4) + (1.0/14.0)*theta31*std::pow(theta32, 3) - 2.0/21.0*theta31*std::pow(theta32, 2) + (1.0/14.0)*theta31*theta32 - 1.0/42.0*theta31)/(-phi0 + phi2) - 1.0*((1.0/210.0)*theta02*std::pow(theta31, 5) - 1.0/42.0*theta02*std::pow(theta31, 4) + (1.0/21.0)*theta02*std::pow(theta31, 3) - 1.0/21.0*theta02*std::pow(theta31, 2) + (1.0/42.0)*theta02*theta31 - 1.0/210.0*theta02)/(-phi0 + phi1);
    b_H[5] = (1.0/24.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[5] = 1.0/24.0 - 1.0/24.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[5] = -0.041666666666666664*std::pow(theta02, 2)*(theta31 - 1)/(-phi0 + phi1) - 0.041666666666666664*theta31*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/24.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(-4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(theta01 - 1) - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/24.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/24.0)*(4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3)*theta31 + 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3) - 6*theta02*std::pow(theta31, 2) + 12*theta02*theta31 - 6*theta02 + (2*theta02*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[6] = (1.0/120.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[6] = 1.0/120.0 - 1.0/120.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[6] = -0.0083333333333333332*std::pow(theta02, 2)*(-std::pow(theta31, 2) + 2*theta31 - 1)/(-phi0 + phi1) + 0.0083333333333333332*theta31*(std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*theta31*theta32 - theta02*theta31 + 6*theta02*std::pow(theta32, 2) - 10*theta02*theta32 + 3*theta02 - 2*theta31*theta32 - 6*std::pow(theta32, 2) + 8*theta32)/(phi2 - phi3) - 0.0083333333333333332*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2) + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta02, 2)*theta31*theta32 + std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(-2*theta01*theta31 + 2*theta01 + 2*theta31 - 2) - 2*std::pow(theta02, 2) - theta02*theta31*std::pow(theta32, 2) + theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 5*theta02*std::pow(theta32, 2) - 3*theta02*theta32 + theta31*std::pow(theta32, 2) - theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - theta31 + 2*std::pow(theta32, 3) - 4*std::pow(theta32, 2) + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/120.0)*(-4*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 16*std::pow(theta02, 3)*theta31 - 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3) + 6*theta02*std::pow(theta31, 2) - 12*theta02*theta31 + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) + theta02*theta31*std::pow(theta32, 2) - theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 3*theta02*theta32 - theta31*std::pow(theta32, 2) + theta31 - 2*std::pow(theta32, 3) + 4*std::pow(theta32, 2) - 2)) + (2*theta02*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(2*theta02*theta31*theta32 - 2*theta02*theta31 + 2*theta02*std::pow(theta32, 2) - 6*theta02*theta32 + 4*theta02 + theta31*std::pow(theta32, 2) - theta31*theta32 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[7] = (1.0/360.0)*(-2*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 3) + 9*std::pow(theta02, 2)*std::pow(theta31, 2) - 9*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[7] = 1.0/360.0 - 1.0/360.0*(-2*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 3) + 9*std::pow(theta02, 2)*std::pow(theta31, 2) - 9*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[7] = -0.0027777777777777779*std::pow(theta02, 2)*(std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 - 1)/(-phi0 + phi1) - 0.0027777777777777779*theta31*(std::pow(theta02, 2)*std::pow(theta31, 2) + 2*std::pow(theta02, 2)*theta31*theta32 - 4*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 8*std::pow(theta02, 2)*theta32 + 6*std::pow(theta02, 2) + 2*theta02*std::pow(theta31, 2)*theta32 - theta02*std::pow(theta31, 2) + 6*theta02*theta31*std::pow(theta32, 2) - 12*theta02*theta31*theta32 + 4*theta02*theta31 + 12*theta02*std::pow(theta32, 3) - 33*theta02*std::pow(theta32, 2) + 28*theta02*theta32 - 6*theta02 - 2*std::pow(theta31, 2)*theta32 - 6*theta31*std::pow(theta32, 2) + 10*theta31*theta32 - 12*std::pow(theta32, 3) + 30*std::pow(theta32, 2) - 20*theta32)/(phi2 - phi3) - 0.0027777777777777779*(-6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 12*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(2 - 2*theta31)*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 18*std::pow(theta02, 2)*theta31 - 9*std::pow(theta02, 2) - 3*std::pow(theta31, 2) + 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 + std::pow(theta02, 2)*(3*theta01*std::pow(theta31, 2) - 6*theta01*theta31 + 3*theta01 - 3*std::pow(theta31, 2) + 6*theta31 - 3) - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) + theta31*(2*std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta32 + 3*std::pow(theta02, 2) + 2*theta02*theta31*std::pow(theta32, 2) - 2*theta02*theta31*theta32 + 2*theta02*std::pow(theta32, 3) - 6*theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 2*theta31*std::pow(theta32, 2) + 2*theta31 - 2*std::pow(theta32, 3) + 5*std::pow(theta32, 2) - 3) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3) - 3)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/360.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2) + 2*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 6*std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 2*std::pow(theta02, 4) - 3*std::pow(theta02, 2)*std::pow(theta31, 3) + 9*std::pow(theta02, 2)*std::pow(theta31, 2) - 9*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/360.0)*(4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 3) + 24*std::pow(theta02, 3)*std::pow(theta31, 2) + 8*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) - 24*std::pow(theta02, 3)*theta31 + 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) + 8*std::pow(theta02, 3) - 6*theta02*std::pow(theta31, 3) + 18*theta02*std::pow(theta31, 2) - 18*theta02*theta31 + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) + 6*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - theta02*std::pow(theta31, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 11*theta02*std::pow(theta32, 3) + 14*theta02*std::pow(theta32, 2) - 6*theta02*theta32 - std::pow(theta31, 2)*std::pow(theta32, 2) + std::pow(theta31, 2) - 2*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) - 3*theta31 - 3*std::pow(theta32, 4) + 10*std::pow(theta32, 3) - 10*std::pow(theta32, 2) + 3)) + (2*theta02*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(2*theta02*std::pow(theta31, 2)*theta32 - 2*theta02*std::pow(theta31, 2) + 2*theta02*theta31*std::pow(theta32, 2) - 8*theta02*theta31*theta32 + 6*theta02*theta31 + 2*theta02*std::pow(theta32, 3) - 8*theta02*std::pow(theta32, 2) + 12*theta02*theta32 - 6*theta02 + std::pow(theta31, 2)*std::pow(theta32, 2) - std::pow(theta31, 2)*theta32 + 2*theta31*std::pow(theta32, 3) - 6*theta31*std::pow(theta32, 2) + 4*theta31*theta32 + 3*std::pow(theta32, 4) - 11*std::pow(theta32, 3) + 14*std::pow(theta32, 2) - 6*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[8] = -1.0/840.0*theta01*std::pow(theta02, 2)*std::pow(theta31, 4) + (1.0/210.0)*theta01*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/140.0*theta01*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/210.0)*theta01*std::pow(theta02, 2)*theta31 - 1.0/840.0*theta01*std::pow(theta02, 2) - 1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 4)*theta32 + (1.0/840.0)*std::pow(theta02, 2)*std::pow(theta31, 4) - 1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/168.0)*std::pow(theta02, 2)*std::pow(theta31, 3)*theta32 - 1.0/210.0*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/168.0)*std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/84.0*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 + (1.0/140.0)*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/840.0*std::pow(theta02, 2)*theta31*std::pow(theta32, 4) + (1.0/168.0)*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - 1.0/84.0*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + (1.0/84.0)*std::pow(theta02, 2)*theta31*theta32 - 1.0/210.0*std::pow(theta02, 2)*theta31 - 1.0/840.0*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) + (1.0/840.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/420.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/120.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/168.0*theta02*std::pow(theta31, 3)*theta32 - 1.0/280.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 4) + (13.0/840.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/42.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/84.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/210.0*theta02*theta31*std::pow(theta32, 5) + (19.0/840.0)*theta02*theta31*std::pow(theta32, 4) - 1.0/24.0*theta02*theta31*std::pow(theta32, 3) + (1.0/28.0)*theta02*theta31*std::pow(theta32, 2) - 1.0/84.0*theta02*theta31*theta32 + (1.0/840.0)*std::pow(theta31, 4)*std::pow(theta32, 2) + (1.0/420.0)*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/140.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/280.0)*std::pow(theta31, 2)*std::pow(theta32, 4) - 1.0/70.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/56.0)*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/210.0)*theta31*std::pow(theta32, 5) - 3.0/140.0*theta31*std::pow(theta32, 4) + (1.0/28.0)*theta31*std::pow(theta32, 3) - 1.0/42.0*theta31*std::pow(theta32, 2) + 1.0/840.0;
    b_ImH[8] = (1.0/840.0)*theta01*std::pow(theta02, 2)*std::pow(theta31, 4) - 1.0/210.0*theta01*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/140.0)*theta01*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/210.0*theta01*std::pow(theta02, 2)*theta31 + (1.0/840.0)*theta01*std::pow(theta02, 2) + (1.0/840.0)*std::pow(theta02, 2)*std::pow(theta31, 4)*theta32 - 1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 4) + (1.0/840.0)*std::pow(theta02, 2)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/168.0*std::pow(theta02, 2)*std::pow(theta31, 3)*theta32 + (1.0/210.0)*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/840.0)*std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/168.0*std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/84.0)*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - 1.0/140.0*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/840.0)*std::pow(theta02, 2)*theta31*std::pow(theta32, 4) - 1.0/168.0*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) + (1.0/84.0)*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 1.0/84.0*std::pow(theta02, 2)*theta31*theta32 + (1.0/210.0)*std::pow(theta02, 2)*theta31 + (1.0/840.0)*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/840.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/420.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/120.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/168.0)*theta02*std::pow(theta31, 3)*theta32 + (1.0/280.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 4) - 13.0/840.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/42.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/84.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/210.0)*theta02*theta31*std::pow(theta32, 5) - 19.0/840.0*theta02*theta31*std::pow(theta32, 4) + (1.0/24.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/28.0*theta02*theta31*std::pow(theta32, 2) + (1.0/84.0)*theta02*theta31*theta32 - 1.0/840.0*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/420.0*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/140.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/280.0*std::pow(theta31, 2)*std::pow(theta32, 4) + (1.0/70.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/56.0*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/210.0*theta31*std::pow(theta32, 5) + (3.0/140.0)*theta31*std::pow(theta32, 4) - 1.0/28.0*theta31*std::pow(theta32, 3) + (1.0/42.0)*theta31*std::pow(theta32, 2);
    b_D[8] = -1.0*(-1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 4) - 1.0/420.0*std::pow(theta02, 2)*std::pow(theta31, 3)*theta32 + (1.0/168.0)*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/280.0*std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/84.0)*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - 1.0/84.0*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/210.0*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) + (1.0/56.0)*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 1.0/42.0*std::pow(theta02, 2)*theta31*theta32 + (1.0/84.0)*std::pow(theta02, 2)*theta31 - 1.0/420.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/840.0)*theta02*std::pow(theta31, 4) - 1.0/140.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/60.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/168.0*theta02*std::pow(theta31, 3) - 1.0/70.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (13.0/280.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/21.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/84.0)*theta02*std::pow(theta31, 2) - 1.0/42.0*theta02*theta31*std::pow(theta32, 4) + (19.0/210.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/8.0*theta02*theta31*std::pow(theta32, 2) + (1.0/14.0)*theta02*theta31*theta32 - 1.0/84.0*theta02*theta31 + (1.0/420.0)*std::pow(theta31, 4)*theta32 + (1.0/140.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/70.0*std::pow(theta31, 3)*theta32 + (1.0/70.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 3.0/70.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/28.0)*std::pow(theta31, 2)*theta32 + (1.0/42.0)*theta31*std::pow(theta32, 4) - 3.0/35.0*theta31*std::pow(theta32, 3) + (3.0/28.0)*theta31*std::pow(theta32, 2) - 1.0/21.0*theta31*theta32)/(phi2 - phi3) - 1.0*(-1.0/210.0*theta01*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/70.0)*theta01*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/70.0*theta01*std::pow(theta02, 2)*theta31 + (1.0/210.0)*theta01*std::pow(theta02, 2) - 1.0/210.0*std::pow(theta02, 2)*std::pow(theta31, 3)*theta32 + (1.0/210.0)*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/280.0*std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/56.0)*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - 1.0/70.0*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/420.0*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) + (1.0/84.0)*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 1.0/42.0*std::pow(theta02, 2)*theta31*theta32 + (1.0/70.0)*std::pow(theta02, 2)*theta31 - 1.0/840.0*std::pow(theta02, 2)*std::pow(theta32, 4) + (1.0/168.0)*std::pow(theta02, 2)*std::pow(theta32, 3) - 1.0/84.0*std::pow(theta02, 2)*std::pow(theta32, 2) + (1.0/84.0)*std::pow(theta02, 2)*theta32 - 1.0/210.0*std::pow(theta02, 2) - 1.0/210.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/210.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/140.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/40.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/56.0*theta02*std::pow(theta31, 2)*theta32 - 1.0/140.0*theta02*theta31*std::pow(theta32, 4) + (13.0/420.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/21.0*theta02*theta31*std::pow(theta32, 2) + (1.0/42.0)*theta02*theta31*theta32 - 1.0/210.0*theta02*std::pow(theta32, 5) + (19.0/840.0)*theta02*std::pow(theta32, 4) - 1.0/24.0*theta02*std::pow(theta32, 3) + (1.0/28.0)*theta02*std::pow(theta32, 2) - 1.0/84.0*theta02*theta32 + (1.0/210.0)*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/140.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 3.0/140.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/140.0)*theta31*std::pow(theta32, 4) - 1.0/35.0*theta31*std::pow(theta32, 3) + (1.0/28.0)*theta31*std::pow(theta32, 2) + (1.0/210.0)*std::pow(theta32, 5) - 3.0/140.0*std::pow(theta32, 4) + (1.0/28.0)*std::pow(theta32, 3) - 1.0/42.0*std::pow(theta32, 2))/(phi1 - phi3) - 1.0*(-1.0/420.0*theta01*theta02*std::pow(theta31, 4) + (1.0/105.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/70.0*theta01*theta02*std::pow(theta31, 2) + (1.0/105.0)*theta01*theta02*theta31 - 1.0/420.0*theta01*theta02 - 1.0/420.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/420.0)*theta02*std::pow(theta31, 4) - 1.0/420.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/84.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/105.0*theta02*std::pow(theta31, 3) - 1.0/420.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/84.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/42.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/70.0)*theta02*std::pow(theta31, 2) - 1.0/420.0*theta02*theta31*std::pow(theta32, 4) + (1.0/84.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/42.0*theta02*theta31*std::pow(theta32, 2) + (1.0/42.0)*theta02*theta31*theta32 - 1.0/105.0*theta02*theta31 - 1.0/840.0*std::pow(theta31, 4)*std::pow(theta32, 2) + (1.0/840.0)*std::pow(theta31, 4)*theta32 - 1.0/420.0*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/120.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/168.0*std::pow(theta31, 3)*theta32 - 1.0/280.0*std::pow(theta31, 2)*std::pow(theta32, 4) + (13.0/840.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/42.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/84.0)*std::pow(theta31, 2)*theta32 - 1.0/210.0*theta31*std::pow(theta32, 5) + (19.0/840.0)*theta31*std::pow(theta32, 4) - 1.0/24.0*theta31*std::pow(theta32, 3) + (1.0/28.0)*theta31*std::pow(theta32, 2) - 1.0/84.0*theta31*theta32)/(-phi0 + phi2) - 1.0*(-1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 4) + (1.0/210.0)*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/140.0*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta02, 2)*theta31 - 1.0/840.0*std::pow(theta02, 2))/(-phi0 + phi1);
    b_H[9] = (1.0/60.0)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[9] = 1.0/60.0 - 1.0/60.0*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[9] = -0.016666666666666666*std::pow(theta02, 3)*(theta31 - 1)/(-phi0 + phi1) - 0.016666666666666666*theta31*(std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + 3*theta02*std::pow(theta32, 2) - 2*theta02*theta32 - 3*std::pow(theta32, 2))/(phi2 - phi3) - 1.0*((1.0/60.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 5) - 8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 3)*theta32 + std::pow(theta02, 3)*(theta01 - 1) - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/60.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(2*std::pow(theta02, 5)*std::pow(theta31, 2) - 4*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/60.0)*(4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 4)*std::pow(theta31, 2) - 20*std::pow(theta02, 4)*theta31 + 10*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 4) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + (3*std::pow(theta02, 2)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(3*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*std::pow(theta32, 2) - 2*theta02*theta32 + std::pow(theta32, 3) - std::pow(theta32, 2)))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[10] = (1.0/360.0)*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5)*std::pow(theta31, 2) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[10] = 1.0/360.0 - 1.0/360.0*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5)*std::pow(theta31, 2) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[10] = -0.0027777777777777779*std::pow(theta02, 3)*(-std::pow(theta31, 2) + 2*theta31 - 1)/(-phi0 + phi1) + 0.0027777777777777779*theta31*(std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta31*theta32 - std::pow(theta02, 2)*theta31 + 6*std::pow(theta02, 2)*std::pow(theta32, 2) - 10*std::pow(theta02, 2)*theta32 + 3*std::pow(theta02, 2) + 3*theta02*theta31*std::pow(theta32, 2) - 2*theta02*theta31*theta32 + 12*theta02*std::pow(theta32, 3) - 21*theta02*std::pow(theta32, 2) + 8*theta02*theta32 - 3*theta31*std::pow(theta32, 2) - 12*std::pow(theta32, 3) + 15*std::pow(theta32, 2))/(phi2 - phi3) - 0.0027777777777777779*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5) + 8*std::pow(theta02, 4)*theta31 - 8*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*theta31 + 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*theta31 - 8*std::pow(theta02, 2) + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta02, 3)*theta31*theta32 + std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::pow(theta32, 2) + 3*std::pow(theta02, 3)*theta32 + std::pow(theta02, 3)*(-2*theta01*theta31 + 2*theta01 + 2*theta31 - 2) - 2*std::pow(theta02, 3) - std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*std::pow(theta32, 3) + 5*std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 - theta02*theta31*std::pow(theta32, 3) + theta02*theta31*std::pow(theta32, 2) - 3*theta02*std::pow(theta32, 4) + 7*theta02*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 2) + theta31*std::pow(theta32, 3) - theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - theta31 + 3*std::pow(theta32, 4) - 5*std::pow(theta32, 3) + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/360.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5)*std::pow(theta31, 2) + 4*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 4*std::pow(theta02, 4)*std::pow(theta31, 2) - 8*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) - std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/360.0)*(-4*std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 10*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 10*std::pow(theta02, 4)*std::pow(theta31, 2) + 20*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 20*std::pow(theta02, 4)*theta31 - 10*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 10*std::pow(theta02, 4) + 16*std::pow(theta02, 3)*std::pow(theta31, 2) - 32*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) + 8*theta02*std::pow(theta31, 2) - 16*theta02*theta31 + 8*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*theta32 + theta02*theta31*std::pow(theta32, 3) - theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 7*theta02*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 2) - theta31*std::pow(theta32, 3) + theta31 - 3*std::pow(theta32, 4) + 5*std::pow(theta32, 3) - 2)) + (3*std::pow(theta02, 2)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(3*std::pow(theta02, 2)*theta31*theta32 - 3*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 9*std::pow(theta02, 2)*theta32 + 6*std::pow(theta02, 2) + 2*theta02*theta31*std::pow(theta32, 2) - 2*theta02*theta31*theta32 + 4*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) + 6*theta02*theta32 + theta31*std::pow(theta32, 3) - theta31*std::pow(theta32, 2) + 3*std::pow(theta32, 4) - 7*std::pow(theta32, 3) + 4*std::pow(theta32, 2)))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[11] = (1.0/1260.0)*(2*std::pow(theta02, 5)*std::pow(theta31, 3) - 6*std::pow(theta02, 5)*std::pow(theta31, 2) + 2*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 3) - 3*std::pow(theta02, 3)*std::pow(theta31, 2) + 3*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 3)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 3)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 3)*theta31*theta32 + 3*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 3) - 4*std::pow(theta02, 3)*std::pow(theta32, 2) + 6*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - 6*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 11*std::pow(theta02, 2)*std::pow(theta32, 3) + 14*std::pow(theta02, 2)*std::pow(theta32, 2) - 6*std::pow(theta02, 2)*theta32 + theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*theta02*theta31*std::pow(theta32, 4) - 8*theta02*theta31*std::pow(theta32, 3) + 5*theta02*theta31*std::pow(theta32, 2) + 6*theta02*std::pow(theta32, 5) - 21*theta02*std::pow(theta32, 4) + 25*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) - std::pow(theta31, 2)*std::pow(theta32, 3) + std::pow(theta31, 2) - 3*theta31*std::pow(theta32, 4) + 6*theta31*std::pow(theta32, 3) - 3*theta31 - 6*std::pow(theta32, 5) + 18*std::pow(theta32, 4) - 15*std::pow(theta32, 3) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[11] = 1.0/1260.0 - 1.0/1260.0*(2*std::pow(theta02, 5)*std::pow(theta31, 3) - 6*std::pow(theta02, 5)*std::pow(theta31, 2) + 2*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 3) - 3*std::pow(theta02, 3)*std::pow(theta31, 2) + 3*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 3)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 3)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 3)*theta31*theta32 + 3*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 3) - 4*std::pow(theta02, 3)*std::pow(theta32, 2) + 6*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - 6*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 11*std::pow(theta02, 2)*std::pow(theta32, 3) + 14*std::pow(theta02, 2)*std::pow(theta32, 2) - 6*std::pow(theta02, 2)*theta32 + theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*theta02*theta31*std::pow(theta32, 4) - 8*theta02*theta31*std::pow(theta32, 3) + 5*theta02*theta31*std::pow(theta32, 2) + 6*theta02*std::pow(theta32, 5) - 21*theta02*std::pow(theta32, 4) + 25*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) - std::pow(theta31, 2)*std::pow(theta32, 3) + std::pow(theta31, 2) - 3*theta31*std::pow(theta32, 4) + 6*theta31*std::pow(theta32, 3) - 3*theta31 - 6*std::pow(theta32, 5) + 18*std::pow(theta32, 4) - 15*std::pow(theta32, 3) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[11] = -0.00079365079365079365*std::pow(theta02, 3)*(std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 3*theta31 - 1)/(-phi0 + phi1) - 0.00079365079365079365*theta31*(std::pow(theta02, 3)*std::pow(theta31, 2) + 2*std::pow(theta02, 3)*theta31*theta32 - 4*std::pow(theta02, 3)*theta31 + 3*std::pow(theta02, 3)*std::pow(theta32, 2) - 8*std::pow(theta02, 3)*theta32 + 6*std::pow(theta02, 3) + 2*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 2)*std::pow(theta31, 2) + 6*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 12*std::pow(theta02, 2)*theta31*theta32 + 4*std::pow(theta02, 2)*theta31 + 12*std::pow(theta02, 2)*std::pow(theta32, 3) - 33*std::pow(theta02, 2)*std::pow(theta32, 2) + 28*std::pow(theta02, 2)*theta32 - 6*std::pow(theta02, 2) + 3*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 2*theta02*std::pow(theta31, 2)*theta32 + 12*theta02*theta31*std::pow(theta32, 3) - 24*theta02*theta31*std::pow(theta32, 2) + 10*theta02*theta31*theta32 + 30*theta02*std::pow(theta32, 4) - 84*theta02*std::pow(theta32, 3) + 75*theta02*std::pow(theta32, 2) - 20*theta02*theta32 - 3*std::pow(theta31, 2)*std::pow(theta32, 2) - 12*theta31*std::pow(theta32, 3) + 18*theta31*std::pow(theta32, 2) - 30*std::pow(theta32, 4) + 72*std::pow(theta32, 3) - 45*std::pow(theta32, 2))/(phi2 - phi3) - 0.00079365079365079365*(6*std::pow(theta02, 5)*std::pow(theta31, 2) + 2*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(2 - 2*theta31)*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 5) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 24*std::pow(theta02, 4)*theta31 - 12*std::pow(theta02, 4) + 3*std::pow(theta02, 3)*std::pow(theta31, 2) - 6*std::pow(theta02, 3)*theta31 + 3*std::pow(theta02, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 24*std::pow(theta02, 2)*theta31 - 12*std::pow(theta02, 2) - 3*std::pow(theta31, 2) + 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(std::pow(theta02, 3)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 3)*theta31*theta32 + 3*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 3) - 4*std::pow(theta02, 3)*std::pow(theta32, 2) + 6*std::pow(theta02, 3)*theta32 + std::pow(theta02, 3)*(3*theta01*std::pow(theta31, 2) - 6*theta01*theta31 + 3*theta01 - 3*std::pow(theta31, 2) + 6*theta31 - 3) - 3*std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - 6*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 11*std::pow(theta02, 2)*std::pow(theta32, 3) + 14*std::pow(theta02, 2)*std::pow(theta32, 2) - 6*std::pow(theta02, 2)*theta32 + theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*theta02*theta31*std::pow(theta32, 4) - 8*theta02*theta31*std::pow(theta32, 3) + 5*theta02*theta31*std::pow(theta32, 2) + 6*theta02*std::pow(theta32, 5) - 21*theta02*std::pow(theta32, 4) + 25*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) - std::pow(theta31, 2)*std::pow(theta32, 3) + std::pow(theta31, 2) - 3*theta31*std::pow(theta32, 4) + 6*theta31*std::pow(theta32, 3) + theta31*(2*std::pow(theta02, 3)*theta31*theta32 - 2*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 2) - 4*std::pow(theta02, 3)*theta32 + 3*std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*std::pow(theta32, 3) - 6*std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 2*theta02*theta31*std::pow(theta32, 2) + 3*theta02*std::pow(theta32, 4) - 8*theta02*std::pow(theta32, 3) + 5*theta02*std::pow(theta32, 2) - 2*theta31*std::pow(theta32, 3) + 2*theta31 - 3*std::pow(theta32, 4) + 6*std::pow(theta32, 3) - 3) - 3*theta31 - 6*std::pow(theta32, 5) + 18*std::pow(theta32, 4) - 15*std::pow(theta32, 3) + 3) - 3)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/1260.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(2*std::pow(theta02, 5)*std::pow(theta31, 3) - 6*std::pow(theta02, 5)*std::pow(theta31, 2) + 2*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 5)*theta31 + 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 2*std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) - 12*std::pow(theta02, 4)*theta31 + 4*std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta31, 3) - 3*std::pow(theta02, 3)*std::pow(theta31, 2) + 3*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3) - 4*std::pow(theta02, 2)*std::pow(theta31, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + (std::pow(theta02, 3)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 3)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 3)*theta31*theta32 + 3*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 3) - 4*std::pow(theta02, 3)*std::pow(theta32, 2) + 6*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - 6*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 11*std::pow(theta02, 2)*std::pow(theta32, 3) + 14*std::pow(theta02, 2)*std::pow(theta32, 2) - 6*std::pow(theta02, 2)*theta32 + theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*theta02*theta31*std::pow(theta32, 4) - 8*theta02*theta31*std::pow(theta32, 3) + 5*theta02*theta31*std::pow(theta32, 2) + 6*theta02*std::pow(theta32, 5) - 21*theta02*std::pow(theta32, 4) + 25*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) - std::pow(theta31, 2)*std::pow(theta32, 3) + std::pow(theta31, 2) - 3*theta31*std::pow(theta32, 4) + 6*theta31*std::pow(theta32, 3) - 3*theta31 - 6*std::pow(theta32, 5) + 18*std::pow(theta32, 4) - 15*std::pow(theta32, 3) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/1260.0)*(4*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(-std::pow(theta31, 2) + 2*theta31 - 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 4)*std::pow(theta31, 3) - 30*std::pow(theta02, 4)*std::pow(theta31, 2) + 10*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 30*std::pow(theta02, 4)*theta31 + 10*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(-std::pow(theta31, 2) + 2*theta31 - 1) - 10*std::pow(theta02, 4) - 16*std::pow(theta02, 3)*std::pow(theta31, 3) + 48*std::pow(theta02, 3)*std::pow(theta31, 2) - 48*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta31, 3) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 9*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2) - 8*theta02*std::pow(theta31, 3) + 24*theta02*std::pow(theta31, 2) - 24*theta02*theta31 + 8*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 3)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(std::pow(theta02, 3)*std::pow(theta31, 2)*theta32 - std::pow(theta02, 3)*std::pow(theta31, 2) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - 4*std::pow(theta02, 3)*theta31*theta32 + 3*std::pow(theta02, 3)*theta31 + std::pow(theta02, 3)*std::pow(theta32, 3) - 4*std::pow(theta02, 3)*std::pow(theta32, 2) + 6*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta31, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - 6*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 11*std::pow(theta02, 2)*std::pow(theta32, 3) + 14*std::pow(theta02, 2)*std::pow(theta32, 2) - 6*std::pow(theta02, 2)*theta32 + theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*theta02*theta31*std::pow(theta32, 4) - 8*theta02*theta31*std::pow(theta32, 3) + 5*theta02*theta31*std::pow(theta32, 2) + 6*theta02*std::pow(theta32, 5) - 21*theta02*std::pow(theta32, 4) + 25*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) - std::pow(theta31, 2)*std::pow(theta32, 3) + std::pow(theta31, 2) - 3*theta31*std::pow(theta32, 4) + 6*theta31*std::pow(theta32, 3) - 3*theta31 - 6*std::pow(theta32, 5) + 18*std::pow(theta32, 4) - 15*std::pow(theta32, 3) + 3)) + (3*std::pow(theta02, 2)*(theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*theta01*theta31 - theta01 - std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 3*theta31 + 1) + theta31*(3*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 3*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 12*std::pow(theta02, 2)*theta31*theta32 + 9*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2)*std::pow(theta32, 3) - 12*std::pow(theta02, 2)*std::pow(theta32, 2) + 18*std::pow(theta02, 2)*theta32 - 9*std::pow(theta02, 2) + 2*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 2*theta02*std::pow(theta31, 2)*theta32 + 4*theta02*theta31*std::pow(theta32, 3) - 12*theta02*theta31*std::pow(theta32, 2) + 8*theta02*theta31*theta32 + 6*theta02*std::pow(theta32, 4) - 22*theta02*std::pow(theta32, 3) + 28*theta02*std::pow(theta32, 2) - 12*theta02*theta32 + std::pow(theta31, 2)*std::pow(theta32, 3) - std::pow(theta31, 2)*std::pow(theta32, 2) + 3*theta31*std::pow(theta32, 4) - 8*theta31*std::pow(theta32, 3) + 5*theta31*std::pow(theta32, 2) + 6*std::pow(theta32, 5) - 21*std::pow(theta32, 4) + 25*std::pow(theta32, 3) - 10*std::pow(theta32, 2)))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[12] = (1.0/120.0)*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[12] = 1.0/120.0 - 1.0/120.0*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[12] = -0.0083333333333333332*std::pow(theta02, 4)*(theta31 - 1)/(-phi0 + phi1) - 0.0083333333333333332*theta31*(std::pow(theta02, 4) + 2*std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 2*std::pow(theta02, 2)*theta32 + 4*theta02*std::pow(theta32, 3) - 3*theta02*std::pow(theta32, 2) - 4*std::pow(theta32, 3))/(phi2 - phi3) - 1.0*((1.0/120.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/120.0)*(4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 6) - 6*std::pow(theta02, 4)*theta31 + 6*std::pow(theta02, 4) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 4)*theta32 + std::pow(theta02, 4)*(theta01 - 1) - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(2*std::pow(theta02, 6)*std::pow(theta31, 2) - 4*std::pow(theta02, 6)*theta31 + 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6) - 3*std::pow(theta02, 4)*std::pow(theta31, 2) + 6*std::pow(theta02, 4)*theta31 - 3*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/120.0)*(4*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 12*std::pow(theta02, 5)*std::pow(theta31, 2) - 24*std::pow(theta02, 5)*theta31 + 12*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 12*std::pow(theta02, 5) - 12*std::pow(theta02, 3)*std::pow(theta31, 2) + 24*std::pow(theta02, 3)*theta31 - 12*std::pow(theta02, 3) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + (4*std::pow(theta02, 3)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(4*std::pow(theta02, 3)*theta32 - 4*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*theta02*std::pow(theta32, 3) - 2*theta02*std::pow(theta32, 2) + std::pow(theta32, 4) - std::pow(theta32, 3)))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[13] = (1.0/840.0)*(-2*std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 6)*std::pow(theta31, 2) + 4*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 6)*theta31 - 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 6) + 3*std::pow(theta02, 4)*std::pow(theta31, 2) - 6*std::pow(theta02, 4)*theta31 + 3*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 4)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 4)*theta31*theta32 - std::pow(theta02, 4)*theta31 + std::pow(theta02, 4)*std::pow(theta32, 2) - 3*std::pow(theta02, 4)*theta32 + 2*std::pow(theta02, 4) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*std::pow(theta32, 3) - 5*std::pow(theta02, 3)*std::pow(theta32, 2) + 3*std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 7*std::pow(theta02, 2)*std::pow(theta32, 3) + 4*std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*theta31*std::pow(theta32, 4) - theta02*theta31*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 5) - 9*theta02*std::pow(theta32, 4) + 5*theta02*std::pow(theta32, 3) - theta31*std::pow(theta32, 4) + theta31 - 4*std::pow(theta32, 5) + 6*std::pow(theta32, 4) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[13] = 1.0/840.0 - 1.0/840.0*(-2*std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 6)*std::pow(theta31, 2) + 4*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 6)*theta31 - 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 6) + 3*std::pow(theta02, 4)*std::pow(theta31, 2) - 6*std::pow(theta02, 4)*theta31 + 3*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 4)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 4)*theta31*theta32 - std::pow(theta02, 4)*theta31 + std::pow(theta02, 4)*std::pow(theta32, 2) - 3*std::pow(theta02, 4)*theta32 + 2*std::pow(theta02, 4) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*std::pow(theta32, 3) - 5*std::pow(theta02, 3)*std::pow(theta32, 2) + 3*std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 7*std::pow(theta02, 2)*std::pow(theta32, 3) + 4*std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*theta31*std::pow(theta32, 4) - theta02*theta31*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 5) - 9*theta02*std::pow(theta32, 4) + 5*theta02*std::pow(theta32, 3) - theta31*std::pow(theta32, 4) + theta31 - 4*std::pow(theta32, 5) + 6*std::pow(theta32, 4) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[13] = -0.0011904761904761906*std::pow(theta02, 4)*(-std::pow(theta31, 2) + 2*theta31 - 1)/(-phi0 + phi1) + 0.0011904761904761906*theta31*(std::pow(theta02, 4)*theta31 + 2*std::pow(theta02, 4)*theta32 - 3*std::pow(theta02, 4) + 2*std::pow(theta02, 3)*theta31*theta32 - std::pow(theta02, 3)*theta31 + 6*std::pow(theta02, 3)*std::pow(theta32, 2) - 10*std::pow(theta02, 3)*theta32 + 3*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 2*std::pow(theta02, 2)*theta31*theta32 + 12*std::pow(theta02, 2)*std::pow(theta32, 3) - 21*std::pow(theta02, 2)*std::pow(theta32, 2) + 8*std::pow(theta02, 2)*theta32 + 4*theta02*theta31*std::pow(theta32, 3) - 3*theta02*theta31*std::pow(theta32, 2) + 20*theta02*std::pow(theta32, 4) - 36*theta02*std::pow(theta32, 3) + 15*theta02*std::pow(theta32, 2) - 4*theta31*std::pow(theta32, 3) - 20*std::pow(theta32, 4) + 24*std::pow(theta32, 3))/(phi2 - phi3) - 0.0011904761904761906*(-2*std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 6)*theta31 - 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 6) + 6*std::pow(theta02, 4)*theta31 - 6*std::pow(theta02, 4) + 8*std::pow(theta02, 2)*theta31 - 8*std::pow(theta02, 2) + 2*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta02, 4)*theta31*theta32 + std::pow(theta02, 4)*theta31 - std::pow(theta02, 4)*std::pow(theta32, 2) + 3*std::pow(theta02, 4)*theta32 + std::pow(theta02, 4)*(-2*theta01*theta31 + 2*theta01 + 2*theta31 - 2) - 2*std::pow(theta02, 4) - std::pow(theta02, 3)*theta31*std::pow(theta32, 2) + std::pow(theta02, 3)*theta31*theta32 - 2*std::pow(theta02, 3)*std::pow(theta32, 3) + 5*std::pow(theta02, 3)*std::pow(theta32, 2) - 3*std::pow(theta02, 3)*theta32 - std::pow(theta02, 2)*theta31*std::pow(theta32, 3) + std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*std::pow(theta32, 4) + 7*std::pow(theta02, 2)*std::pow(theta32, 3) - 4*std::pow(theta02, 2)*std::pow(theta32, 2) - theta02*theta31*std::pow(theta32, 4) + theta02*theta31*std::pow(theta32, 3) - 4*theta02*std::pow(theta32, 5) + 9*theta02*std::pow(theta32, 4) - 5*theta02*std::pow(theta32, 3) + theta31*std::pow(theta32, 4) - theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1) - theta31 + 4*std::pow(theta32, 5) - 6*std::pow(theta32, 4) + 2) - 2)/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/840.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-2*std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 6)*std::pow(theta31, 2) + 4*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 6)*theta31 - 2*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 6) + 3*std::pow(theta02, 4)*std::pow(theta31, 2) - 6*std::pow(theta02, 4)*theta31 + 3*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*std::pow(theta31, 2) - 8*std::pow(theta02, 2)*theta31 + 4*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + (std::pow(theta02, 4)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 4)*theta31*theta32 - std::pow(theta02, 4)*theta31 + std::pow(theta02, 4)*std::pow(theta32, 2) - 3*std::pow(theta02, 4)*theta32 + 2*std::pow(theta02, 4) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*std::pow(theta32, 3) - 5*std::pow(theta02, 3)*std::pow(theta32, 2) + 3*std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 7*std::pow(theta02, 2)*std::pow(theta32, 3) + 4*std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*theta31*std::pow(theta32, 4) - theta02*theta31*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 5) - 9*theta02*std::pow(theta32, 4) + 5*theta02*std::pow(theta32, 3) - theta31*std::pow(theta32, 4) + theta31 - 4*std::pow(theta32, 5) + 6*std::pow(theta32, 4) - 2))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/840.0)*(-4*std::pow(theta02, 7)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 7)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 6)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 5)*std::pow(theta31, 2) + 24*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 24*std::pow(theta02, 5)*theta31 - 12*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 5) + 12*std::pow(theta02, 3)*std::pow(theta31, 2) - 24*std::pow(theta02, 3)*theta31 + 12*std::pow(theta02, 3) + 8*theta02*std::pow(theta31, 2) - 16*theta02*theta31 + 8*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 4)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(std::pow(theta02, 4)*theta31*theta32 - std::pow(theta02, 4)*theta31 + std::pow(theta02, 4)*std::pow(theta32, 2) - 3*std::pow(theta02, 4)*theta32 + 2*std::pow(theta02, 4) + std::pow(theta02, 3)*theta31*std::pow(theta32, 2) - std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*std::pow(theta32, 3) - 5*std::pow(theta02, 3)*std::pow(theta32, 2) + 3*std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*theta31*std::pow(theta32, 3) - std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 3*std::pow(theta02, 2)*std::pow(theta32, 4) - 7*std::pow(theta02, 2)*std::pow(theta32, 3) + 4*std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*theta31*std::pow(theta32, 4) - theta02*theta31*std::pow(theta32, 3) + 4*theta02*std::pow(theta32, 5) - 9*theta02*std::pow(theta32, 4) + 5*theta02*std::pow(theta32, 3) - theta31*std::pow(theta32, 4) + theta31 - 4*std::pow(theta32, 5) + 6*std::pow(theta32, 4) - 2)) + (4*std::pow(theta02, 3)*(-theta01*std::pow(theta31, 2) + 2*theta01*theta31 - theta01 + std::pow(theta31, 2) - 2*theta31 + 1) - theta31*(4*std::pow(theta02, 3)*theta31*theta32 - 4*std::pow(theta02, 3)*theta31 + 4*std::pow(theta02, 3)*std::pow(theta32, 2) - 12*std::pow(theta02, 3)*theta32 + 8*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta31*theta32 + 6*std::pow(theta02, 2)*std::pow(theta32, 3) - 15*std::pow(theta02, 2)*std::pow(theta32, 2) + 9*std::pow(theta02, 2)*theta32 + 2*theta02*theta31*std::pow(theta32, 3) - 2*theta02*theta31*std::pow(theta32, 2) + 6*theta02*std::pow(theta32, 4) - 14*theta02*std::pow(theta32, 3) + 8*theta02*std::pow(theta32, 2) + theta31*std::pow(theta32, 4) - theta31*std::pow(theta32, 3) + 4*std::pow(theta32, 5) - 9*std::pow(theta32, 4) + 5*std::pow(theta32, 3)))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[14] = (1.0/210.0)*(2*std::pow(theta02, 7)*std::pow(theta31, 2) - 4*std::pow(theta02, 7)*theta31 + 2*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 7) + std::pow(theta02, 5)*std::pow(theta31, 2) - 2*std::pow(theta02, 5)*theta31 + std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 5)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 5)*theta32 - std::pow(theta02, 5) + std::pow(theta02, 4)*std::pow(theta32, 2) - std::pow(theta02, 4)*theta32 + std::pow(theta02, 3)*std::pow(theta32, 3) - std::pow(theta02, 3)*std::pow(theta32, 2) + std::pow(theta02, 2)*std::pow(theta32, 4) - std::pow(theta02, 2)*std::pow(theta32, 3) + theta02*std::pow(theta32, 5) - theta02*std::pow(theta32, 4) - std::pow(theta32, 5) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_ImH[14] = 1.0/210.0 - 1.0/210.0*(2*std::pow(theta02, 7)*std::pow(theta31, 2) - 4*std::pow(theta02, 7)*theta31 + 2*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 7) + std::pow(theta02, 5)*std::pow(theta31, 2) - 2*std::pow(theta02, 5)*theta31 + std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 5)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 5)*theta32 - std::pow(theta02, 5) + std::pow(theta02, 4)*std::pow(theta32, 2) - std::pow(theta02, 4)*theta32 + std::pow(theta02, 3)*std::pow(theta32, 3) - std::pow(theta02, 3)*std::pow(theta32, 2) + std::pow(theta02, 2)*std::pow(theta32, 4) - std::pow(theta02, 2)*std::pow(theta32, 3) + theta02*std::pow(theta32, 5) - theta02*std::pow(theta32, 4) - std::pow(theta32, 5) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1);
    b_D[14] = -0.0047619047619047623*std::pow(theta02, 5)*(theta31 - 1)/(-phi0 + phi1) - 0.0047619047619047623*theta31*(std::pow(theta02, 5) + 2*std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + 3*std::pow(theta02, 3)*std::pow(theta32, 2) - 2*std::pow(theta02, 3)*theta32 + 4*std::pow(theta02, 2)*std::pow(theta32, 3) - 3*std::pow(theta02, 2)*std::pow(theta32, 2) + 5*theta02*std::pow(theta32, 4) - 4*theta02*std::pow(theta32, 3) - 5*std::pow(theta32, 4))/(phi2 - phi3) - 1.0*((1.0/210.0)*(-4*std::pow(theta02, 4) - 4*std::pow(theta02, 2) - 1)*(2*std::pow(theta02, 7)*std::pow(theta31, 2) - 4*std::pow(theta02, 7)*theta31 + 2*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 7) + std::pow(theta02, 5)*std::pow(theta31, 2) - 2*std::pow(theta02, 5)*theta31 + std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 5)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 5)*theta32 - std::pow(theta02, 5) + std::pow(theta02, 4)*std::pow(theta32, 2) - std::pow(theta02, 4)*theta32 + std::pow(theta02, 3)*std::pow(theta32, 3) - std::pow(theta02, 3)*std::pow(theta32, 2) + std::pow(theta02, 2)*std::pow(theta32, 4) - std::pow(theta02, 2)*std::pow(theta32, 3) + theta02*std::pow(theta32, 5) - theta02*std::pow(theta32, 4) - std::pow(theta32, 5) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/210.0)*(4*std::pow(theta02, 7)*theta31 + 2*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(2*theta31 - 2) + 2*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 4*std::pow(theta02, 7) + 2*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5) - 8*std::pow(theta02, 4)*theta31 + 8*std::pow(theta02, 4) - 8*std::pow(theta02, 2)*theta31 + 8*std::pow(theta02, 2) - 2*theta31 + (std::pow(theta02, 5)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 5)*theta32 - std::pow(theta02, 5) + std::pow(theta02, 4)*std::pow(theta32, 2) - std::pow(theta02, 4)*theta32 + std::pow(theta02, 3)*std::pow(theta32, 3) - std::pow(theta02, 3)*std::pow(theta32, 2) + std::pow(theta02, 2)*std::pow(theta32, 4) - std::pow(theta02, 2)*std::pow(theta32, 3) + theta02*std::pow(theta32, 5) - theta02*std::pow(theta32, 4) - std::pow(theta32, 5) + 1))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + (4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1)*(std::pow(theta02, 5)*theta32 + std::pow(theta02, 5)*(theta01 - 1) - std::pow(theta02, 5) + std::pow(theta02, 4)*std::pow(theta32, 2) - std::pow(theta02, 4)*theta32 + std::pow(theta02, 3)*std::pow(theta32, 3) - std::pow(theta02, 3)*std::pow(theta32, 2) + std::pow(theta02, 2)*std::pow(theta32, 4) - std::pow(theta02, 2)*std::pow(theta32, 3) + theta02*std::pow(theta32, 5) - theta02*std::pow(theta32, 4) - std::pow(theta32, 5) + 1) + 2)/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(phi1 - phi3) - 1.0*((1.0/210.0)*(-16*std::pow(theta02, 3)*theta31 + 16*std::pow(theta02, 3) - 8*theta02*theta31 + 8*theta02)*(2*std::pow(theta02, 7)*std::pow(theta31, 2) - 4*std::pow(theta02, 7)*theta31 + 2*std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 2*std::pow(theta02, 7) + std::pow(theta02, 5)*std::pow(theta31, 2) - 2*std::pow(theta02, 5)*theta31 + std::pow(theta02, 5) - 4*std::pow(theta02, 4)*std::pow(theta31, 2) + 8*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) - 4*std::pow(theta02, 2)*std::pow(theta31, 2) + 8*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) - std::pow(theta31, 2) + 2*theta31 + (std::pow(theta02, 5)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 5)*theta32 - std::pow(theta02, 5) + std::pow(theta02, 4)*std::pow(theta32, 2) - std::pow(theta02, 4)*theta32 + std::pow(theta02, 3)*std::pow(theta32, 3) - std::pow(theta02, 3)*std::pow(theta32, 2) + std::pow(theta02, 2)*std::pow(theta32, 4) - std::pow(theta02, 2)*std::pow(theta32, 3) + theta02*std::pow(theta32, 5) - theta02*std::pow(theta32, 4) - std::pow(theta32, 5) + 1))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) - 1)/std::pow(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1, 2) + (1.0/210.0)*(4*std::pow(theta02, 8)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/std::sqrt(2*std::pow(theta02, 2) + 1) + std::pow(theta02, 7)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 14*std::pow(theta02, 6)*std::pow(theta31, 2) - 28*std::pow(theta02, 6)*theta31 + 14*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(std::pow(theta31, 2) - 2*theta31 + 1) + 14*std::pow(theta02, 6) + 5*std::pow(theta02, 4)*std::pow(theta31, 2) - 10*std::pow(theta02, 4)*theta31 + 5*std::pow(theta02, 4) - 16*std::pow(theta02, 3)*std::pow(theta31, 2) + 32*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) - 8*theta02*std::pow(theta31, 2) + 16*theta02*theta31 - 8*theta02 + (5*std::pow(theta02, 4)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(5*std::pow(theta02, 4)*theta32 - 5*std::pow(theta02, 4) + 4*std::pow(theta02, 3)*std::pow(theta32, 2) - 4*std::pow(theta02, 3)*theta32 + 3*std::pow(theta02, 2)*std::pow(theta32, 3) - 3*std::pow(theta02, 2)*std::pow(theta32, 2) + 2*theta02*std::pow(theta32, 4) - 2*theta02*std::pow(theta32, 3) + std::pow(theta32, 5) - std::pow(theta32, 4)))*(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1) + (std::pow(theta02, 5)*(theta01*theta31 - theta01 - theta31 + 1) + theta31*(std::pow(theta02, 5)*theta32 - std::pow(theta02, 5) + std::pow(theta02, 4)*std::pow(theta32, 2) - std::pow(theta02, 4)*theta32 + std::pow(theta02, 3)*std::pow(theta32, 3) - std::pow(theta02, 3)*std::pow(theta32, 2) + std::pow(theta02, 2)*std::pow(theta32, 4) - std::pow(theta02, 2)*std::pow(theta32, 3) + theta02*std::pow(theta32, 5) - theta02*std::pow(theta32, 4) - std::pow(theta32, 5) + 1))*(16*std::pow(theta02, 3)*theta31 - 16*std::pow(theta02, 3) + 8*theta02*theta31 - 8*theta02))/(4*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 4) + 4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + theta31 - 1))/(-phi0 + phi2);
    b_H[15] = (1.0/24.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/24.0*std::pow(theta01, 2)*theta02 + (1.0/24.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/24.0*theta01*theta02*theta31 + (1.0/24.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/24.0*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2)*theta32 + 1.0/24.0;
    b_ImH[15] = -1.0/24.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/24.0)*std::pow(theta01, 2)*theta02 - 1.0/24.0*theta01*theta02*std::pow(theta31, 2) + (1.0/24.0)*theta01*theta02*theta31 - 1.0/24.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/24.0)*theta02*std::pow(theta31, 2) + (1.0/24.0)*std::pow(theta31, 2)*theta32;
    b_D[15] = -1.0*((1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*std::pow(theta31, 2))/(phi2 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta02 + (1.0/12.0)*theta01*theta02*theta31 - 1.0/24.0*theta01*theta02 + (1.0/12.0)*theta02*theta31*theta32 - 1.0/12.0*theta02*theta31 - 1.0/12.0*theta31*theta32)/(phi1 - phi3) - 1.0*((1.0/24.0)*std::pow(theta01, 2)*theta31 - 1.0/24.0*std::pow(theta01, 2) + (1.0/24.0)*theta01*std::pow(theta31, 2) - 1.0/24.0*theta01*theta31 + (1.0/24.0)*std::pow(theta31, 2)*theta32 - 1.0/24.0*std::pow(theta31, 2))/(-phi0 + phi2) - 1.0*((1.0/12.0)*theta01*theta02*theta31 - 1.0/12.0*theta01*theta02 + (1.0/24.0)*theta02*std::pow(theta31, 2) - 1.0/24.0*theta02*theta31)/(-phi0 + phi1);
    b_H[16] = (1.0/120.0)*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[16] = 1.0/120.0 - 1.0/120.0*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[16] = 0.0083333333333333332*theta02*(2*theta01*std::pow(theta31, 2) - 4*theta01*theta31 + 2*theta01 + 2*std::pow(theta31, 3) - 4*std::pow(theta31, 2) + 2*theta31)/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 2)*(-2*theta02*theta31 - 2*theta02*theta32 + 4*theta02 + 2*theta31 + 2*theta32 - 4)/(phi2 - phi3) - 0.0083333333333333332*(24*std::pow(theta02, 4)*std::pow(theta31, 2) - 24*std::pow(theta02, 4)*theta31 - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 3)*std::pow(theta31, 2) + 12*std::pow(theta02, 3)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 24*std::pow(theta02, 2)*std::pow(theta31, 2) - 24*std::pow(theta02, 2)*theta31 - 6*theta02*std::pow(theta31, 2) + 6*theta02*theta31 + 6*std::pow(theta31, 2) - 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*(2*std::pow(theta01, 2)*theta31 - 2*std::pow(theta01, 2) + 6*theta01*std::pow(theta31, 2) - 8*theta01*theta31 + 2*theta01 - 6*std::pow(theta31, 2) + 6*theta31) + std::pow(theta31, 2)*(-2*theta02*theta32 + 2*theta02 + 2*theta32 - 2) + 2*theta31*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/120.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 3) + 6*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) - 2*theta02*std::pow(theta31, 3) + 3*theta02*std::pow(theta31, 2) - theta02 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/120.0)*(-8*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 32*std::pow(theta02, 3)*std::pow(theta31, 3) + 3*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 48*std::pow(theta02, 3)*std::pow(theta31, 2) - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 2)*std::pow(theta31, 3) + 18*std::pow(theta02, 2)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 18*std::pow(theta02, 2)*std::pow(theta31, 2) - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 16*theta02*std::pow(theta31, 3) - 24*theta02*std::pow(theta31, 2) + 8*theta02 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 3) - 4*theta01*std::pow(theta31, 2) + 2*theta01*theta31 - 2*std::pow(theta31, 3) + 3*std::pow(theta31, 2) - 1) + std::pow(theta31, 2)*(-2*theta02*theta31*theta32 + 2*theta02*theta31 - theta02*std::pow(theta32, 2) + 4*theta02*theta32 - 3*theta02 + 2*theta31*theta32 - 2*theta31 + std::pow(theta32, 2) - 4*theta32 + 3)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) + std::pow(theta31, 2)*(-2*theta31*theta32 + 2*theta31 - std::pow(theta32, 2) + 4*theta32 - 3) - 3*std::pow(theta31, 2) + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[17] = (1.0/360.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/360.0*std::pow(theta01, 2)*theta02 + (1.0/120.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/40.0*theta01*theta02*std::pow(theta31, 3) + (1.0/40.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/120.0*theta01*theta02*theta31 + (1.0/120.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/120.0*theta02*std::pow(theta31, 4) + (1.0/180.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/36.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/45.0)*theta02*std::pow(theta31, 3) + (1.0/360.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/72.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/60.0*theta02*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta31, 4)*theta32 - 1.0/180.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 3)*theta32 - 1.0/360.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/72.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/36.0*std::pow(theta31, 2)*theta32 + 1.0/360.0;
    b_ImH[17] = -1.0/360.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) + (1.0/120.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/360.0)*std::pow(theta01, 2)*theta02 - 1.0/120.0*theta01*theta02*std::pow(theta31, 4) + (1.0/40.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/40.0*theta01*theta02*std::pow(theta31, 2) + (1.0/120.0)*theta01*theta02*theta31 - 1.0/120.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/120.0)*theta02*std::pow(theta31, 4) - 1.0/180.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/36.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/45.0*theta02*std::pow(theta31, 3) - 1.0/360.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/72.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/36.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/60.0)*theta02*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta31, 4)*theta32 + (1.0/180.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/36.0*std::pow(theta31, 3)*theta32 + (1.0/360.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/72.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 2)*theta32;
    b_D[17] = -1.0*((1.0/120.0)*theta02*std::pow(theta31, 4) + (1.0/90.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/36.0*theta02*std::pow(theta31, 3) + (1.0/120.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/36.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/36.0)*theta02*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta31, 4) - 1.0/90.0*std::pow(theta31, 3)*theta32 + (1.0/36.0)*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 2)*theta32 - 1.0/36.0*std::pow(theta31, 2))/(phi2 - phi3) - 1.0*((1.0/120.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/120.0)*std::pow(theta01, 2)*theta02 + (1.0/30.0)*theta01*theta02*std::pow(theta31, 3) - 3.0/40.0*theta01*theta02*std::pow(theta31, 2) + (1.0/20.0)*theta01*theta02*theta31 - 1.0/120.0*theta01*theta02 + (1.0/30.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/30.0*theta02*std::pow(theta31, 3) + (1.0/60.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/12.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/15.0)*theta02*std::pow(theta31, 2) + (1.0/180.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/36.0*theta02*theta31*std::pow(theta32, 2) + (1.0/18.0)*theta02*theta31*theta32 - 1.0/30.0*theta02*theta31 - 1.0/30.0*std::pow(theta31, 3)*theta32 - 1.0/60.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/12.0)*std::pow(theta31, 2)*theta32 - 1.0/180.0*theta31*std::pow(theta32, 3) + (1.0/36.0)*theta31*std::pow(theta32, 2) - 1.0/18.0*theta31*theta32)/(phi1 - phi3) - 1.0*((1.0/360.0)*std::pow(theta01, 2)*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta01, 2)*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta01, 2)*theta31 - 1.0/360.0*std::pow(theta01, 2) + (1.0/120.0)*theta01*std::pow(theta31, 4) - 1.0/40.0*theta01*std::pow(theta31, 3) + (1.0/40.0)*theta01*std::pow(theta31, 2) - 1.0/120.0*theta01*theta31 + (1.0/120.0)*std::pow(theta31, 4)*theta32 - 1.0/120.0*std::pow(theta31, 4) + (1.0/180.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/36.0*std::pow(theta31, 3)*theta32 + (1.0/45.0)*std::pow(theta31, 3) + (1.0/360.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/72.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/36.0)*std::pow(theta31, 2)*theta32 - 1.0/60.0*std::pow(theta31, 2))/(-phi0 + phi2) - 1.0*((1.0/180.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/60.0*theta01*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta01*theta02*theta31 - 1.0/180.0*theta01*theta02 + (1.0/120.0)*theta02*std::pow(theta31, 4) - 1.0/40.0*theta02*std::pow(theta31, 3) + (1.0/40.0)*theta02*std::pow(theta31, 2) - 1.0/120.0*theta02*theta31)/(-phi0 + phi1);
    b_H[18] = -1.0/840.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 4) + (1.0/210.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) - 1.0/140.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/840.0*std::pow(theta01, 2)*theta02 - 1.0/210.0*theta01*theta02*std::pow(theta31, 5) + (2.0/105.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/35.0*theta01*theta02*std::pow(theta31, 3) + (2.0/105.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/210.0*theta01*theta02*theta31 - 1.0/210.0*theta02*std::pow(theta31, 5)*theta32 + (1.0/210.0)*theta02*std::pow(theta31, 5) - 1.0/280.0*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) + (3.0/140.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/56.0*theta02*std::pow(theta31, 4) - 1.0/420.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/70.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/28.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/42.0)*theta02*std::pow(theta31, 3) - 1.0/840.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 4) + (1.0/140.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/56.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/42.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/84.0*theta02*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta31, 5)*theta32 + (1.0/280.0)*std::pow(theta31, 4)*std::pow(theta32, 2) - 3.0/140.0*std::pow(theta31, 4)*theta32 + (1.0/420.0)*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/70.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/28.0)*std::pow(theta31, 3)*theta32 + (1.0/840.0)*std::pow(theta31, 2)*std::pow(theta32, 4) - 1.0/140.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/56.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/42.0*std::pow(theta31, 2)*theta32 + 1.0/840.0;
    b_ImH[18] = (1.0/840.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 4) - 1.0/210.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) + (1.0/140.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/210.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/840.0)*std::pow(theta01, 2)*theta02 + (1.0/210.0)*theta01*theta02*std::pow(theta31, 5) - 2.0/105.0*theta01*theta02*std::pow(theta31, 4) + (1.0/35.0)*theta01*theta02*std::pow(theta31, 3) - 2.0/105.0*theta01*theta02*std::pow(theta31, 2) + (1.0/210.0)*theta01*theta02*theta31 + (1.0/210.0)*theta02*std::pow(theta31, 5)*theta32 - 1.0/210.0*theta02*std::pow(theta31, 5) + (1.0/280.0)*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) - 3.0/140.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/56.0)*theta02*std::pow(theta31, 4) + (1.0/420.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/70.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/28.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/42.0*theta02*std::pow(theta31, 3) + (1.0/840.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 4) - 1.0/140.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/56.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/42.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/84.0)*theta02*std::pow(theta31, 2) - 1.0/210.0*std::pow(theta31, 5)*theta32 - 1.0/280.0*std::pow(theta31, 4)*std::pow(theta32, 2) + (3.0/140.0)*std::pow(theta31, 4)*theta32 - 1.0/420.0*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/70.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/28.0*std::pow(theta31, 3)*theta32 - 1.0/840.0*std::pow(theta31, 2)*std::pow(theta32, 4) + (1.0/140.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/56.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/42.0)*std::pow(theta31, 2)*theta32;
    b_D[18] = -1.0*(-1.0/210.0*theta02*std::pow(theta31, 5) - 1.0/140.0*theta02*std::pow(theta31, 4)*theta32 + (3.0/140.0)*theta02*std::pow(theta31, 4) - 1.0/140.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/35.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/28.0*theta02*std::pow(theta31, 3) - 1.0/210.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (3.0/140.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/28.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/42.0)*theta02*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta31, 5) + (1.0/140.0)*std::pow(theta31, 4)*theta32 - 3.0/140.0*std::pow(theta31, 4) + (1.0/140.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/35.0*std::pow(theta31, 3)*theta32 + (1.0/28.0)*std::pow(theta31, 3) + (1.0/210.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 3.0/140.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/28.0)*std::pow(theta31, 2)*theta32 - 1.0/42.0*std::pow(theta31, 2))/(phi2 - phi3) - 1.0*(-1.0/210.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) + (1.0/70.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/70.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/210.0)*std::pow(theta01, 2)*theta02 - 1.0/42.0*theta01*theta02*std::pow(theta31, 4) + (8.0/105.0)*theta01*theta02*std::pow(theta31, 3) - 3.0/35.0*theta01*theta02*std::pow(theta31, 2) + (4.0/105.0)*theta01*theta02*theta31 - 1.0/210.0*theta01*theta02 - 1.0/42.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/42.0)*theta02*std::pow(theta31, 4) - 1.0/70.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (3.0/35.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/14.0*theta02*std::pow(theta31, 3) - 1.0/140.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) + (3.0/70.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 3.0/28.0*theta02*std::pow(theta31, 2)*theta32 + (1.0/14.0)*theta02*std::pow(theta31, 2) - 1.0/420.0*theta02*theta31*std::pow(theta32, 4) + (1.0/70.0)*theta02*theta31*std::pow(theta32, 3) - 1.0/28.0*theta02*theta31*std::pow(theta32, 2) + (1.0/21.0)*theta02*theta31*theta32 - 1.0/42.0*theta02*theta31 + (1.0/42.0)*std::pow(theta31, 4)*theta32 + (1.0/70.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 3.0/35.0*std::pow(theta31, 3)*theta32 + (1.0/140.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 3.0/70.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (3.0/28.0)*std::pow(theta31, 2)*theta32 + (1.0/420.0)*theta31*std::pow(theta32, 4) - 1.0/70.0*theta31*std::pow(theta32, 3) + (1.0/28.0)*theta31*std::pow(theta32, 2) - 1.0/21.0*theta31*theta32)/(phi1 - phi3) - 1.0*(-1.0/840.0*std::pow(theta01, 2)*std::pow(theta31, 4) + (1.0/210.0)*std::pow(theta01, 2)*std::pow(theta31, 3) - 1.0/140.0*std::pow(theta01, 2)*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta01, 2)*theta31 - 1.0/840.0*std::pow(theta01, 2) - 1.0/210.0*theta01*std::pow(theta31, 5) + (2.0/105.0)*theta01*std::pow(theta31, 4) - 1.0/35.0*theta01*std::pow(theta31, 3) + (2.0/105.0)*theta01*std::pow(theta31, 2) - 1.0/210.0*theta01*theta31 - 1.0/210.0*std::pow(theta31, 5)*theta32 + (1.0/210.0)*std::pow(theta31, 5) - 1.0/280.0*std::pow(theta31, 4)*std::pow(theta32, 2) + (3.0/140.0)*std::pow(theta31, 4)*theta32 - 1.0/56.0*std::pow(theta31, 4) - 1.0/420.0*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/70.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/28.0*std::pow(theta31, 3)*theta32 + (1.0/42.0)*std::pow(theta31, 3) - 1.0/840.0*std::pow(theta31, 2)*std::pow(theta32, 4) + (1.0/140.0)*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/56.0*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/42.0)*std::pow(theta31, 2)*theta32 - 1.0/84.0*std::pow(theta31, 2))/(-phi0 + phi2) - 1.0*(-1.0/420.0*theta01*theta02*std::pow(theta31, 4) + (1.0/105.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/70.0*theta01*theta02*std::pow(theta31, 2) + (1.0/105.0)*theta01*theta02*theta31 - 1.0/420.0*theta01*theta02 - 1.0/210.0*theta02*std::pow(theta31, 5) + (2.0/105.0)*theta02*std::pow(theta31, 4) - 1.0/35.0*theta02*std::pow(theta31, 3) + (2.0/105.0)*theta02*std::pow(theta31, 2) - 1.0/210.0*theta02*theta31)/(-phi0 + phi1);
    b_H[19] = (1.0/120.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/120.0*std::pow(theta02, 2) + (1.0/120.0)*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/120.0*std::pow(theta31, 2) + 1.0/120.0;
    b_ImH[19] = -1.0/120.0*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) + (1.0/120.0)*std::pow(theta02, 2) - 1.0/120.0*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + (1.0/120.0)*std::pow(theta31, 2);
    b_D[19] = -0.0083333333333333332*std::pow(theta02, 2)*(2*theta01*theta31 - 2*theta01 + std::pow(theta31, 2) - theta31)/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 2)*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/60.0)*std::pow(theta02, 2)*theta31 + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2) + 2*theta01*theta31 - theta01 - 2*theta31) + (1.0/60.0)*theta31*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/60.0*theta31)/(phi1 - phi3) - 1.0*((1.0/60.0)*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta02*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/60.0*theta02 + (1.0/120.0)*std::pow(theta31, 2)*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))/(-phi0 + phi2);
    b_H[20] = (1.0/720.0)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 4)*std::pow(theta31, 2) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 3*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[20] = 1.0/720.0 - 1.0/720.0*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 4)*std::pow(theta31, 2) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 3*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[20] = -0.0013888888888888889*std::pow(theta02, 2)*(-2*theta01*std::pow(theta31, 2) + 4*theta01*theta31 - 2*theta01 - 2*std::pow(theta31, 3) + 4*std::pow(theta31, 2) - 2*theta31)/(-phi0 + phi1) - 0.0013888888888888889*std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31 - 2*std::pow(theta02, 2)*theta32 + 4*std::pow(theta02, 2) - 4*theta02*theta31*theta32 + 2*theta02*theta31 - 6*theta02*std::pow(theta32, 2) + 12*theta02*theta32 - 4*theta02 + 4*theta31*theta32 + 6*std::pow(theta32, 2) - 10*theta32)/(phi2 - phi3) - 0.0013888888888888889*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 12*std::pow(theta02, 4)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 4)*theta31 - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 18*std::pow(theta02, 2)*std::pow(theta31, 2) - 18*std::pow(theta02, 2)*theta31 + 6*std::pow(theta31, 2) - 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(std::pow(theta02, 2)*(-2*std::pow(theta01, 2)*theta31 + 2*std::pow(theta01, 2) - 6*theta01*std::pow(theta31, 2) + 8*theta01*theta31 - 2*theta01 + 6*std::pow(theta31, 2) - 6*theta31) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta32 + 2*std::pow(theta02, 2) - 2*theta02*std::pow(theta32, 2) + 2*theta02*theta32 + 2*std::pow(theta32, 2) - 2) + 2*theta31*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/720.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 4*std::pow(theta02, 4)*std::pow(theta31, 3) + 6*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 4)*std::pow(theta31, 2) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 6*std::pow(theta02, 2)*std::pow(theta31, 3) - 9*std::pow(theta02, 2)*std::pow(theta31, 2) + 3*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/720.0)*(-8*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 3*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 16*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 16*std::pow(theta02, 3)*std::pow(theta31, 3) + 24*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 24*std::pow(theta02, 3)*std::pow(theta31, 2) - 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3) + 12*theta02*std::pow(theta31, 3) - 18*theta02*std::pow(theta31, 2) + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 4*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) - 2*theta02*theta31*std::pow(theta32, 2) + 2*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 6*theta02*std::pow(theta32, 2) - 4*theta02*theta32 + 2*theta31*std::pow(theta32, 2) - 2*theta31 + 2*std::pow(theta32, 3) - 5*std::pow(theta32, 2) + 3)) + (2*theta02*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-4*theta02*theta31*theta32 + 4*theta02*theta31 - 2*theta02*std::pow(theta32, 2) + 8*theta02*theta32 - 6*theta02 - 2*theta31*std::pow(theta32, 2) + 2*theta31*theta32 - 2*std::pow(theta32, 3) + 6*std::pow(theta32, 2) - 4*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[21] = (1.0/840.0)*std::pow(theta02, 2)*std::pow(theta31, 4) - 1.0/315.0*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/420.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/2520.0)*std::pow(theta02, 2)*(std::pow(theta01, 2)*std::pow(theta31, 3) - 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 3*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + 3*theta01*std::pow(theta31, 4) - 9*theta01*std::pow(theta31, 3) + 9*theta01*std::pow(theta31, 2) - 3*theta01*theta31 - 3*std::pow(theta31, 4) + 8*std::pow(theta31, 3) - 6*std::pow(theta31, 2) + 1) - 1.0/2520.0*std::pow(theta02, 2) - 1.0/840.0*std::pow(theta31, 4) + (1.0/315.0)*std::pow(theta31, 3) + (1.0/2520.0)*std::pow(theta31, 2)*(3*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 10*std::pow(theta02, 2)*theta31*theta32 + 8*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 10*std::pow(theta02, 2)*theta32 - 6*std::pow(theta02, 2) + 3*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 3*theta02*std::pow(theta31, 2)*theta32 + 4*theta02*theta31*std::pow(theta32, 3) - 14*theta02*theta31*std::pow(theta32, 2) + 10*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 13*theta02*std::pow(theta32, 3) + 20*theta02*std::pow(theta32, 2) - 10*theta02*theta32 - 3*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*std::pow(theta31, 2) - 4*theta31*std::pow(theta32, 3) + 12*theta31*std::pow(theta32, 2) - 8*theta31 - 3*std::pow(theta32, 4) + 12*std::pow(theta32, 3) - 15*std::pow(theta32, 2) + 6) - 1.0/420.0*std::pow(theta31, 2) + 1.0/2520.0;
    b_ImH[21] = -1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 4) + (1.0/315.0)*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/420.0*std::pow(theta02, 2)*std::pow(theta31, 2) - 1.0/2520.0*std::pow(theta02, 2)*(std::pow(theta01, 2)*std::pow(theta31, 3) - 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 3*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + 3*theta01*std::pow(theta31, 4) - 9*theta01*std::pow(theta31, 3) + 9*theta01*std::pow(theta31, 2) - 3*theta01*theta31 - 3*std::pow(theta31, 4) + 8*std::pow(theta31, 3) - 6*std::pow(theta31, 2) + 1) + (1.0/2520.0)*std::pow(theta02, 2) + (1.0/840.0)*std::pow(theta31, 4) - 1.0/315.0*std::pow(theta31, 3) - 1.0/2520.0*std::pow(theta31, 2)*(3*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 10*std::pow(theta02, 2)*theta31*theta32 + 8*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 10*std::pow(theta02, 2)*theta32 - 6*std::pow(theta02, 2) + 3*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 3*theta02*std::pow(theta31, 2)*theta32 + 4*theta02*theta31*std::pow(theta32, 3) - 14*theta02*theta31*std::pow(theta32, 2) + 10*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 13*theta02*std::pow(theta32, 3) + 20*theta02*std::pow(theta32, 2) - 10*theta02*theta32 - 3*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*std::pow(theta31, 2) - 4*theta31*std::pow(theta32, 3) + 12*theta31*std::pow(theta32, 2) - 8*theta31 - 3*std::pow(theta32, 4) + 12*std::pow(theta32, 3) - 15*std::pow(theta32, 2) + 6) + (1.0/420.0)*std::pow(theta31, 2);
    b_D[21] = -0.00039682539682539683*std::pow(theta02, 2)*(2*theta01*std::pow(theta31, 3) - 6*theta01*std::pow(theta31, 2) + 6*theta01*theta31 - 2*theta01 + 3*std::pow(theta31, 4) - 9*std::pow(theta31, 3) + 9*std::pow(theta31, 2) - 3*theta31)/(-phi0 + phi1) - 0.00039682539682539683*std::pow(theta31, 2)*(3*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2)*theta31*theta32 - 10*std::pow(theta02, 2)*theta31 + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 10*std::pow(theta02, 2)*theta32 + 10*std::pow(theta02, 2) + 6*theta02*std::pow(theta31, 2)*theta32 - 3*theta02*std::pow(theta31, 2) + 12*theta02*theta31*std::pow(theta32, 2) - 28*theta02*theta31*theta32 + 10*theta02*theta31 + 12*theta02*std::pow(theta32, 3) - 39*theta02*std::pow(theta32, 2) + 40*theta02*theta32 - 10*theta02 - 6*std::pow(theta31, 2)*theta32 - 12*theta31*std::pow(theta32, 2) + 24*theta31*theta32 - 12*std::pow(theta32, 3) + 36*std::pow(theta32, 2) - 30*theta32)/(phi2 - phi3) - 1.0*((1.0/210.0)*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/105.0*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta02, 2)*theta31 + (1.0/2520.0)*std::pow(theta02, 2)*(3*std::pow(theta01, 2)*std::pow(theta31, 2) - 6*std::pow(theta01, 2)*theta31 + 3*std::pow(theta01, 2) + 12*theta01*std::pow(theta31, 3) - 27*theta01*std::pow(theta31, 2) + 18*theta01*theta31 - 3*theta01 - 12*std::pow(theta31, 3) + 24*std::pow(theta31, 2) - 12*theta31) - 1.0/210.0*std::pow(theta31, 3) + (1.0/2520.0)*std::pow(theta31, 2)*(6*std::pow(theta02, 2)*theta31*theta32 - 6*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2)*std::pow(theta32, 2) - 10*std::pow(theta02, 2)*theta32 + 8*std::pow(theta02, 2) + 6*theta02*theta31*std::pow(theta32, 2) - 6*theta02*theta31*theta32 + 4*theta02*std::pow(theta32, 3) - 14*theta02*std::pow(theta32, 2) + 10*theta02*theta32 - 6*theta31*std::pow(theta32, 2) + 6*theta31 - 4*std::pow(theta32, 3) + 12*std::pow(theta32, 2) - 8) + (1.0/105.0)*std::pow(theta31, 2) + (1.0/1260.0)*theta31*(3*std::pow(theta02, 2)*std::pow(theta31, 2)*theta32 - 3*std::pow(theta02, 2)*std::pow(theta31, 2) + 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) - 10*std::pow(theta02, 2)*theta31*theta32 + 8*std::pow(theta02, 2)*theta31 + std::pow(theta02, 2)*std::pow(theta32, 3) - 5*std::pow(theta02, 2)*std::pow(theta32, 2) + 10*std::pow(theta02, 2)*theta32 - 6*std::pow(theta02, 2) + 3*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) - 3*theta02*std::pow(theta31, 2)*theta32 + 4*theta02*theta31*std::pow(theta32, 3) - 14*theta02*theta31*std::pow(theta32, 2) + 10*theta02*theta31*theta32 + 3*theta02*std::pow(theta32, 4) - 13*theta02*std::pow(theta32, 3) + 20*theta02*std::pow(theta32, 2) - 10*theta02*theta32 - 3*std::pow(theta31, 2)*std::pow(theta32, 2) + 3*std::pow(theta31, 2) - 4*theta31*std::pow(theta32, 3) + 12*theta31*std::pow(theta32, 2) - 8*theta31 - 3*std::pow(theta32, 4) + 12*std::pow(theta32, 3) - 15*std::pow(theta32, 2) + 6) - 1.0/210.0*theta31)/(phi1 - phi3) - 1.0*((1.0/420.0)*theta02*std::pow(theta31, 4) - 2.0/315.0*theta02*std::pow(theta31, 3) + (1.0/210.0)*theta02*std::pow(theta31, 2) + (1.0/1260.0)*theta02*(std::pow(theta01, 2)*std::pow(theta31, 3) - 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 3*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + 3*theta01*std::pow(theta31, 4) - 9*theta01*std::pow(theta31, 3) + 9*theta01*std::pow(theta31, 2) - 3*theta01*theta31 - 3*std::pow(theta31, 4) + 8*std::pow(theta31, 3) - 6*std::pow(theta31, 2) + 1) - 1.0/1260.0*theta02 + (1.0/2520.0)*std::pow(theta31, 2)*(6*theta02*std::pow(theta31, 2)*theta32 - 6*theta02*std::pow(theta31, 2) + 4*theta02*theta31*std::pow(theta32, 2) - 20*theta02*theta31*theta32 + 16*theta02*theta31 + 2*theta02*std::pow(theta32, 3) - 10*theta02*std::pow(theta32, 2) + 20*theta02*theta32 - 12*theta02 + 3*std::pow(theta31, 2)*std::pow(theta32, 2) - 3*std::pow(theta31, 2)*theta32 + 4*theta31*std::pow(theta32, 3) - 14*theta31*std::pow(theta32, 2) + 10*theta31*theta32 + 3*std::pow(theta32, 4) - 13*std::pow(theta32, 3) + 20*std::pow(theta32, 2) - 10*theta32))/(-phi0 + phi2);
    b_H[22] = (1.0/360.0)*std::pow(theta02, 3)*std::pow(theta31, 2) + (1.0/360.0)*std::pow(theta02, 3)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/360.0*std::pow(theta02, 3) + (1.0/360.0)*std::pow(theta31, 2)*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - 1.0/360.0*std::pow(theta31, 2) + 1.0/360.0;
    b_ImH[22] = -1.0/360.0*std::pow(theta02, 3)*std::pow(theta31, 2) - 1.0/360.0*std::pow(theta02, 3)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) + (1.0/360.0)*std::pow(theta02, 3) - 1.0/360.0*std::pow(theta31, 2)*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) + (1.0/360.0)*std::pow(theta31, 2);
    b_D[22] = -0.0027777777777777779*std::pow(theta02, 3)*(2*theta01*theta31 - 2*theta01 + std::pow(theta31, 2) - theta31)/(-phi0 + phi1) - 0.0027777777777777779*std::pow(theta31, 2)*(std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + 3*theta02*std::pow(theta32, 2) - 2*theta02*theta32 - 3*std::pow(theta32, 2))/(phi2 - phi3) - 1.0*((1.0/180.0)*std::pow(theta02, 3)*theta31 + (1.0/360.0)*std::pow(theta02, 3)*(std::pow(theta01, 2) + 2*theta01*theta31 - theta01 - 2*theta31) + (1.0/180.0)*theta31*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - 1.0/180.0*theta31)/(phi1 - phi3) - 1.0*((1.0/120.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/120.0)*std::pow(theta02, 2)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/120.0*std::pow(theta02, 2) + (1.0/360.0)*std::pow(theta31, 2)*(3*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*std::pow(theta32, 2) - 2*theta02*theta32 + std::pow(theta32, 3) - std::pow(theta32, 2)))/(-phi0 + phi2);
    b_H[23] = (1.0/2520.0)*(-4*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::pow(theta31, 3) + 6*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 5)*std::pow(theta31, 2) - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 3) + 3*std::pow(theta02, 3)*std::pow(theta31, 2) - std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 3)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::pow(theta32, 2) + 4*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) - 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 2*std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*std::pow(theta32, 3) + 6*std::pow(theta02, 2)*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta32 - 2*theta02*theta31*std::pow(theta32, 3) + 2*theta02*theta31*std::pow(theta32, 2) - 3*theta02*std::pow(theta32, 4) + 8*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 2*theta31*std::pow(theta32, 3) - 2*theta31 + 3*std::pow(theta32, 4) - 6*std::pow(theta32, 3) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[23] = 1.0/2520.0 - 1.0/2520.0*(-4*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::pow(theta31, 3) + 6*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 5)*std::pow(theta31, 2) - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 3) + 3*std::pow(theta02, 3)*std::pow(theta31, 2) - std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 3)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::pow(theta32, 2) + 4*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) - 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 2*std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*std::pow(theta32, 3) + 6*std::pow(theta02, 2)*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta32 - 2*theta02*theta31*std::pow(theta32, 3) + 2*theta02*theta31*std::pow(theta32, 2) - 3*theta02*std::pow(theta32, 4) + 8*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 2*theta31*std::pow(theta32, 3) - 2*theta31 + 3*std::pow(theta32, 4) - 6*std::pow(theta32, 3) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[23] = -0.00039682539682539683*std::pow(theta02, 3)*(-2*theta01*std::pow(theta31, 2) + 4*theta01*theta31 - 2*theta01 - 2*std::pow(theta31, 3) + 4*std::pow(theta31, 2) - 2*theta31)/(-phi0 + phi1) - 0.00039682539682539683*std::pow(theta31, 2)*(-2*std::pow(theta02, 3)*theta31 - 2*std::pow(theta02, 3)*theta32 + 4*std::pow(theta02, 3) - 4*std::pow(theta02, 2)*theta31*theta32 + 2*std::pow(theta02, 2)*theta31 - 6*std::pow(theta02, 2)*std::pow(theta32, 2) + 12*std::pow(theta02, 2)*theta32 - 4*std::pow(theta02, 2) - 6*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 - 12*theta02*std::pow(theta32, 3) + 24*theta02*std::pow(theta32, 2) - 10*theta02*theta32 + 6*theta31*std::pow(theta32, 2) + 12*std::pow(theta32, 3) - 18*std::pow(theta32, 2))/(phi2 - phi3) - 0.00039682539682539683*(-4*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 6*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 12*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 12*std::pow(theta02, 5)*std::pow(theta31, 2) + 12*std::pow(theta02, 5)*theta31*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 5)*theta31 - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 24*std::pow(theta02, 4)*std::pow(theta31, 2) - 24*std::pow(theta02, 4)*theta31 - 6*std::pow(theta02, 3)*std::pow(theta31, 2) + 6*std::pow(theta02, 3)*theta31 + 24*std::pow(theta02, 2)*std::pow(theta31, 2) - 24*std::pow(theta02, 2)*theta31 + 6*std::pow(theta31, 2) - 6*theta31 + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(std::pow(theta02, 3)*(-2*std::pow(theta01, 2)*theta31 + 2*std::pow(theta01, 2) - 6*theta01*std::pow(theta31, 2) + 8*theta01*theta31 - 2*theta01 + 6*std::pow(theta31, 2) - 6*theta31) + std::pow(theta31, 2)*(-2*std::pow(theta02, 3)*theta32 + 2*std::pow(theta02, 3) - 2*std::pow(theta02, 2)*std::pow(theta32, 2) + 2*std::pow(theta02, 2)*theta32 - 2*theta02*std::pow(theta32, 3) + 2*theta02*std::pow(theta32, 2) + 2*std::pow(theta32, 3) - 2) + 2*theta31*(-2*std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::pow(theta32, 2) + 4*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) - 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 2*std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*std::pow(theta32, 3) + 6*std::pow(theta02, 2)*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta32 - 2*theta02*theta31*std::pow(theta32, 3) + 2*theta02*theta31*std::pow(theta32, 2) - 3*theta02*std::pow(theta32, 4) + 8*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 2*theta31*std::pow(theta32, 3) - 2*theta31 + 3*std::pow(theta32, 4) - 6*std::pow(theta32, 3) + 3)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/2520.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-4*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::pow(theta31, 3) + 6*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 5)*std::pow(theta31, 2) - 2*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5) + 8*std::pow(theta02, 4)*std::pow(theta31, 3) - 12*std::pow(theta02, 4)*std::pow(theta31, 2) + 4*std::pow(theta02, 4) - 2*std::pow(theta02, 3)*std::pow(theta31, 3) + 3*std::pow(theta02, 3)*std::pow(theta31, 2) - std::pow(theta02, 3) + 8*std::pow(theta02, 2)*std::pow(theta31, 3) - 12*std::pow(theta02, 2)*std::pow(theta31, 2) + 4*std::pow(theta02, 2) + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + (std::pow(theta02, 3)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::pow(theta32, 2) + 4*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) - 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 2*std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*std::pow(theta32, 3) + 6*std::pow(theta02, 2)*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta32 - 2*theta02*theta31*std::pow(theta32, 3) + 2*theta02*theta31*std::pow(theta32, 2) - 3*theta02*std::pow(theta32, 4) + 8*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 2*theta31*std::pow(theta32, 3) - 2*theta31 + 3*std::pow(theta32, 4) - 6*std::pow(theta32, 3) + 3))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/2520.0)*(-8*std::pow(theta02, 6)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 12*std::pow(theta02, 6)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 6)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 3*std::pow(theta02, 5)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 20*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 20*std::pow(theta02, 4)*std::pow(theta31, 3) + 30*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 30*std::pow(theta02, 4)*std::pow(theta31, 2) - 10*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 10*std::pow(theta02, 4) + 32*std::pow(theta02, 3)*std::pow(theta31, 3) - 48*std::pow(theta02, 3)*std::pow(theta31, 2) + 16*std::pow(theta02, 3) - 6*std::pow(theta02, 2)*std::pow(theta31, 3) + 9*std::pow(theta02, 2)*std::pow(theta31, 2) - 3*std::pow(theta02, 2) + 16*theta02*std::pow(theta31, 3) - 24*theta02*std::pow(theta31, 2) + 8*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 3)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-2*std::pow(theta02, 3)*theta31*theta32 + 2*std::pow(theta02, 3)*theta31 - std::pow(theta02, 3)*std::pow(theta32, 2) + 4*std::pow(theta02, 3)*theta32 - 3*std::pow(theta02, 3) - 2*std::pow(theta02, 2)*theta31*std::pow(theta32, 2) + 2*std::pow(theta02, 2)*theta31*theta32 - 2*std::pow(theta02, 2)*std::pow(theta32, 3) + 6*std::pow(theta02, 2)*std::pow(theta32, 2) - 4*std::pow(theta02, 2)*theta32 - 2*theta02*theta31*std::pow(theta32, 3) + 2*theta02*theta31*std::pow(theta32, 2) - 3*theta02*std::pow(theta32, 4) + 8*theta02*std::pow(theta32, 3) - 5*theta02*std::pow(theta32, 2) + 2*theta31*std::pow(theta32, 3) - 2*theta31 + 3*std::pow(theta32, 4) - 6*std::pow(theta32, 3) + 3)) + (3*std::pow(theta02, 2)*(-std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) - 2*theta01*std::pow(theta31, 3) + 4*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + 2*std::pow(theta31, 3) - 3*std::pow(theta31, 2) + 1) + std::pow(theta31, 2)*(-6*std::pow(theta02, 2)*theta31*theta32 + 6*std::pow(theta02, 2)*theta31 - 3*std::pow(theta02, 2)*std::pow(theta32, 2) + 12*std::pow(theta02, 2)*theta32 - 9*std::pow(theta02, 2) - 4*theta02*theta31*std::pow(theta32, 2) + 4*theta02*theta31*theta32 - 4*theta02*std::pow(theta32, 3) + 12*theta02*std::pow(theta32, 2) - 8*theta02*theta32 - 2*theta31*std::pow(theta32, 3) + 2*theta31*std::pow(theta32, 2) - 3*std::pow(theta32, 4) + 8*std::pow(theta32, 3) - 5*std::pow(theta32, 2)))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[24] = (1.0/840.0)*std::pow(theta02, 4)*std::pow(theta31, 2) + (1.0/840.0)*std::pow(theta02, 4)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/840.0*std::pow(theta02, 4) + (1.0/840.0)*std::pow(theta31, 2)*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1) - 1.0/840.0*std::pow(theta31, 2) + 1.0/840.0;
    b_ImH[24] = -1.0/840.0*std::pow(theta02, 4)*std::pow(theta31, 2) - 1.0/840.0*std::pow(theta02, 4)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) + (1.0/840.0)*std::pow(theta02, 4) - 1.0/840.0*std::pow(theta31, 2)*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1) + (1.0/840.0)*std::pow(theta31, 2);
    b_D[24] = -0.0011904761904761906*std::pow(theta02, 4)*(2*theta01*theta31 - 2*theta01 + std::pow(theta31, 2) - theta31)/(-phi0 + phi1) - 0.0011904761904761906*std::pow(theta31, 2)*(std::pow(theta02, 4) + 2*std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 2*std::pow(theta02, 2)*theta32 + 4*theta02*std::pow(theta32, 3) - 3*theta02*std::pow(theta32, 2) - 4*std::pow(theta32, 3))/(phi2 - phi3) - 1.0*((1.0/420.0)*std::pow(theta02, 4)*theta31 + (1.0/840.0)*std::pow(theta02, 4)*(std::pow(theta01, 2) + 2*theta01*theta31 - theta01 - 2*theta31) + (1.0/420.0)*theta31*(std::pow(theta02, 4)*theta32 - std::pow(theta02, 4) + std::pow(theta02, 3)*std::pow(theta32, 2) - std::pow(theta02, 3)*theta32 + std::pow(theta02, 2)*std::pow(theta32, 3) - std::pow(theta02, 2)*std::pow(theta32, 2) + theta02*std::pow(theta32, 4) - theta02*std::pow(theta32, 3) - std::pow(theta32, 4) + 1) - 1.0/420.0*theta31)/(phi1 - phi3) - 1.0*((1.0/210.0)*std::pow(theta02, 3)*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta02, 3)*(std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + theta01*std::pow(theta31, 2) - theta01*theta31 - std::pow(theta31, 2) + 1) - 1.0/210.0*std::pow(theta02, 3) + (1.0/840.0)*std::pow(theta31, 2)*(4*std::pow(theta02, 3)*theta32 - 4*std::pow(theta02, 3) + 3*std::pow(theta02, 2)*std::pow(theta32, 2) - 3*std::pow(theta02, 2)*theta32 + 2*theta02*std::pow(theta32, 3) - 2*theta02*std::pow(theta32, 2) + std::pow(theta32, 4) - std::pow(theta32, 3)))/(-phi0 + phi2);
    b_H[25] = (1.0/60.0)*std::pow(theta01, 3)*theta02*theta31 - 1.0/60.0*std::pow(theta01, 3)*theta02 + (1.0/60.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/60.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/60.0*theta01*theta02*std::pow(theta31, 2) + (1.0/60.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/60.0*theta02*std::pow(theta31, 3) - 1.0/60.0*std::pow(theta31, 3)*theta32 + 1.0/60.0;
    b_ImH[25] = -1.0/60.0*std::pow(theta01, 3)*theta02*theta31 + (1.0/60.0)*std::pow(theta01, 3)*theta02 - 1.0/60.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/60.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/60.0*theta01*theta02*std::pow(theta31, 3) + (1.0/60.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/60.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/60.0)*theta02*std::pow(theta31, 3) + (1.0/60.0)*std::pow(theta31, 3)*theta32;
    b_D[25] = -1.0*((1.0/60.0)*theta02*std::pow(theta31, 3) - 1.0/60.0*std::pow(theta31, 3))/(phi2 - phi3) - 1.0*((1.0/60.0)*std::pow(theta01, 3)*theta02 + (1.0/30.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/60.0*std::pow(theta01, 2)*theta02 + (1.0/20.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/20.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/20.0*theta02*std::pow(theta31, 2) - 1.0/20.0*std::pow(theta31, 2)*theta32)/(phi1 - phi3) - 1.0*((1.0/60.0)*std::pow(theta01, 3)*theta31 - 1.0/60.0*std::pow(theta01, 3) + (1.0/60.0)*std::pow(theta01, 2)*std::pow(theta31, 2) - 1.0/60.0*std::pow(theta01, 2)*theta31 + (1.0/60.0)*theta01*std::pow(theta31, 3) - 1.0/60.0*theta01*std::pow(theta31, 2) + (1.0/60.0)*std::pow(theta31, 3)*theta32 - 1.0/60.0*std::pow(theta31, 3))/(-phi0 + phi2) - 1.0*((1.0/20.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/20.0*std::pow(theta01, 2)*theta02 + (1.0/30.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/30.0*theta01*theta02*theta31 + (1.0/60.0)*theta02*std::pow(theta31, 3) - 1.0/60.0*theta02*std::pow(theta31, 2))/(-phi0 + phi1);
    b_H[26] = (1.0/360.0)*(12*std::pow(theta02, 4)*std::pow(theta31, 4) - 16*std::pow(theta02, 4)*std::pow(theta31, 3) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 3)*std::pow(theta31, 4) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 4) - 16*std::pow(theta02, 2)*std::pow(theta31, 3) + 4*std::pow(theta02, 2) - 3*theta02*std::pow(theta31, 4) + 4*theta02*std::pow(theta31, 3) - theta02 + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[26] = 1.0/360.0 - 1.0/360.0*(12*std::pow(theta02, 4)*std::pow(theta31, 4) - 16*std::pow(theta02, 4)*std::pow(theta31, 3) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 3)*std::pow(theta31, 4) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 4) - 16*std::pow(theta02, 2)*std::pow(theta31, 3) + 4*std::pow(theta02, 2) - 3*theta02*std::pow(theta31, 4) + 4*theta02*std::pow(theta31, 3) - theta02 + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[26] = 0.0027777777777777779*theta02*(3*std::pow(theta01, 2)*std::pow(theta31, 2) - 6*std::pow(theta01, 2)*theta31 + 3*std::pow(theta01, 2) + 4*theta01*std::pow(theta31, 3) - 8*theta01*std::pow(theta31, 2) + 4*theta01*theta31 + 3*std::pow(theta31, 4) - 6*std::pow(theta31, 3) + 3*std::pow(theta31, 2))/(-phi0 + phi1) - 0.0027777777777777779*std::pow(theta31, 3)*(-3*theta02*theta31 - 2*theta02*theta32 + 5*theta02 + 3*theta31 + 2*theta32 - 5)/(phi2 - phi3) - 0.0027777777777777779*(48*std::pow(theta02, 4)*std::pow(theta31, 3) - 48*std::pow(theta02, 4)*std::pow(theta31, 2) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 24*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 24*std::pow(theta02, 3)*std::pow(theta31, 3) + 24*std::pow(theta02, 3)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 24*std::pow(theta02, 3)*std::pow(theta31, 2) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 48*std::pow(theta02, 2)*std::pow(theta31, 3) - 48*std::pow(theta02, 2)*std::pow(theta31, 2) - 12*theta02*std::pow(theta31, 3) + 12*theta02*std::pow(theta31, 2) + 12*std::pow(theta31, 3) - 12*std::pow(theta31, 2) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*(2*std::pow(theta01, 3)*theta31 - 2*std::pow(theta01, 3) + 6*std::pow(theta01, 2)*std::pow(theta31, 2) - 8*std::pow(theta01, 2)*theta31 + 2*std::pow(theta01, 2) + 12*theta01*std::pow(theta31, 3) - 18*theta01*std::pow(theta31, 2) + 6*theta01*theta31 - 12*std::pow(theta31, 3) + 12*std::pow(theta31, 2)) + std::pow(theta31, 3)*(-3*theta02*theta32 + 3*theta02 + 3*theta32 - 3) + 3*std::pow(theta31, 2)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/360.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(12*std::pow(theta02, 4)*std::pow(theta31, 4) - 16*std::pow(theta02, 4)*std::pow(theta31, 3) + 4*std::pow(theta02, 4) - 6*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 3)*std::pow(theta31, 4) + 8*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3)*std::pow(theta31, 3) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 12*std::pow(theta02, 2)*std::pow(theta31, 4) - 16*std::pow(theta02, 2)*std::pow(theta31, 3) + 4*std::pow(theta02, 2) - 3*theta02*std::pow(theta31, 4) + 4*theta02*std::pow(theta31, 3) - theta02 + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/360.0)*(-12*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 16*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 3*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 48*std::pow(theta02, 3)*std::pow(theta31, 4) + 4*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 64*std::pow(theta02, 3)*std::pow(theta31, 3) - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 18*std::pow(theta02, 2)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 18*std::pow(theta02, 2)*std::pow(theta31, 4) + 24*std::pow(theta02, 2)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 24*std::pow(theta02, 2)*std::pow(theta31, 3) - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 24*theta02*std::pow(theta31, 4) - 32*theta02*std::pow(theta31, 3) + 8*theta02 - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + std::pow(theta01, 3) + 2*std::pow(theta01, 2)*std::pow(theta31, 3) - 4*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*std::pow(theta01, 2)*theta31 + 3*theta01*std::pow(theta31, 4) - 6*theta01*std::pow(theta31, 3) + 3*theta01*std::pow(theta31, 2) - 3*std::pow(theta31, 4) + 4*std::pow(theta31, 3) - 1) + std::pow(theta31, 3)*(-3*theta02*theta31*theta32 + 3*theta02*theta31 - theta02*std::pow(theta32, 2) + 5*theta02*theta32 - 4*theta02 + 3*theta31*theta32 - 3*theta31 + std::pow(theta32, 2) - 5*theta32 + 4)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) - 2*std::pow(theta01, 2)*std::pow(theta31, 3) + 4*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 - 3*theta01*std::pow(theta31, 4) + 6*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*std::pow(theta31, 4) + std::pow(theta31, 3)*(-3*theta31*theta32 + 3*theta31 - std::pow(theta32, 2) + 5*theta32 - 4) - 4*std::pow(theta31, 3) + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[27] = (1.0/1260.0)*std::pow(theta01, 3)*theta02*std::pow(theta31, 3) - 1.0/420.0*std::pow(theta01, 3)*theta02*std::pow(theta31, 2) + (1.0/420.0)*std::pow(theta01, 3)*theta02*theta31 - 1.0/1260.0*std::pow(theta01, 3)*theta02 + (1.0/420.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 4) - 1.0/140.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) + (1.0/140.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) - 1.0/420.0*std::pow(theta01, 2)*theta02*theta31 + (1.0/210.0)*theta01*theta02*std::pow(theta31, 5) - 1.0/70.0*theta01*theta02*std::pow(theta31, 4) + (1.0/70.0)*theta01*theta02*std::pow(theta31, 3) - 1.0/210.0*theta01*theta02*std::pow(theta31, 2) + (1.0/210.0)*theta02*std::pow(theta31, 5)*theta32 - 1.0/210.0*theta02*std::pow(theta31, 5) + (1.0/420.0)*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/70.0*theta02*std::pow(theta31, 4)*theta32 + (1.0/84.0)*theta02*std::pow(theta31, 4) + (1.0/1260.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/210.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/84.0)*theta02*std::pow(theta31, 3)*theta32 - 1.0/126.0*theta02*std::pow(theta31, 3) - 1.0/210.0*std::pow(theta31, 5)*theta32 - 1.0/420.0*std::pow(theta31, 4)*std::pow(theta32, 2) + (1.0/70.0)*std::pow(theta31, 4)*theta32 - 1.0/1260.0*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/210.0)*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/84.0*std::pow(theta31, 3)*theta32 + 1.0/1260.0;
    b_ImH[27] = -1.0/1260.0*std::pow(theta01, 3)*theta02*std::pow(theta31, 3) + (1.0/420.0)*std::pow(theta01, 3)*theta02*std::pow(theta31, 2) - 1.0/420.0*std::pow(theta01, 3)*theta02*theta31 + (1.0/1260.0)*std::pow(theta01, 3)*theta02 - 1.0/420.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 4) + (1.0/140.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) - 1.0/140.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/420.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/210.0*theta01*theta02*std::pow(theta31, 5) + (1.0/70.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/70.0*theta01*theta02*std::pow(theta31, 3) + (1.0/210.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/210.0*theta02*std::pow(theta31, 5)*theta32 + (1.0/210.0)*theta02*std::pow(theta31, 5) - 1.0/420.0*theta02*std::pow(theta31, 4)*std::pow(theta32, 2) + (1.0/70.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/84.0*theta02*std::pow(theta31, 4) - 1.0/1260.0*theta02*std::pow(theta31, 3)*std::pow(theta32, 3) + (1.0/210.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/84.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/126.0)*theta02*std::pow(theta31, 3) + (1.0/210.0)*std::pow(theta31, 5)*theta32 + (1.0/420.0)*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/70.0*std::pow(theta31, 4)*theta32 + (1.0/1260.0)*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/210.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/84.0)*std::pow(theta31, 3)*theta32;
    b_D[27] = -1.0*((1.0/210.0)*theta02*std::pow(theta31, 5) + (1.0/210.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/70.0*theta02*std::pow(theta31, 4) + (1.0/420.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 1.0/105.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/84.0)*theta02*std::pow(theta31, 3) - 1.0/210.0*std::pow(theta31, 5) - 1.0/210.0*std::pow(theta31, 4)*theta32 + (1.0/70.0)*std::pow(theta31, 4) - 1.0/420.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/105.0)*std::pow(theta31, 3)*theta32 - 1.0/84.0*std::pow(theta31, 3))/(phi2 - phi3) - 1.0*((1.0/420.0)*std::pow(theta01, 3)*theta02*std::pow(theta31, 2) - 1.0/210.0*std::pow(theta01, 3)*theta02*theta31 + (1.0/420.0)*std::pow(theta01, 3)*theta02 + (1.0/105.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) - 3.0/140.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/70.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/420.0*std::pow(theta01, 2)*theta02 + (1.0/42.0)*theta01*theta02*std::pow(theta31, 4) - 2.0/35.0*theta01*theta02*std::pow(theta31, 3) + (3.0/70.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/105.0*theta01*theta02*theta31 + (1.0/42.0)*theta02*std::pow(theta31, 4)*theta32 - 1.0/42.0*theta02*std::pow(theta31, 4) + (1.0/105.0)*theta02*std::pow(theta31, 3)*std::pow(theta32, 2) - 2.0/35.0*theta02*std::pow(theta31, 3)*theta32 + (1.0/21.0)*theta02*std::pow(theta31, 3) + (1.0/420.0)*theta02*std::pow(theta31, 2)*std::pow(theta32, 3) - 1.0/70.0*theta02*std::pow(theta31, 2)*std::pow(theta32, 2) + (1.0/28.0)*theta02*std::pow(theta31, 2)*theta32 - 1.0/42.0*theta02*std::pow(theta31, 2) - 1.0/42.0*std::pow(theta31, 4)*theta32 - 1.0/105.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (2.0/35.0)*std::pow(theta31, 3)*theta32 - 1.0/420.0*std::pow(theta31, 2)*std::pow(theta32, 3) + (1.0/70.0)*std::pow(theta31, 2)*std::pow(theta32, 2) - 1.0/28.0*std::pow(theta31, 2)*theta32)/(phi1 - phi3) - 1.0*((1.0/1260.0)*std::pow(theta01, 3)*std::pow(theta31, 3) - 1.0/420.0*std::pow(theta01, 3)*std::pow(theta31, 2) + (1.0/420.0)*std::pow(theta01, 3)*theta31 - 1.0/1260.0*std::pow(theta01, 3) + (1.0/420.0)*std::pow(theta01, 2)*std::pow(theta31, 4) - 1.0/140.0*std::pow(theta01, 2)*std::pow(theta31, 3) + (1.0/140.0)*std::pow(theta01, 2)*std::pow(theta31, 2) - 1.0/420.0*std::pow(theta01, 2)*theta31 + (1.0/210.0)*theta01*std::pow(theta31, 5) - 1.0/70.0*theta01*std::pow(theta31, 4) + (1.0/70.0)*theta01*std::pow(theta31, 3) - 1.0/210.0*theta01*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta31, 5)*theta32 - 1.0/210.0*std::pow(theta31, 5) + (1.0/420.0)*std::pow(theta31, 4)*std::pow(theta32, 2) - 1.0/70.0*std::pow(theta31, 4)*theta32 + (1.0/84.0)*std::pow(theta31, 4) + (1.0/1260.0)*std::pow(theta31, 3)*std::pow(theta32, 3) - 1.0/210.0*std::pow(theta31, 3)*std::pow(theta32, 2) + (1.0/84.0)*std::pow(theta31, 3)*theta32 - 1.0/126.0*std::pow(theta31, 3))/(-phi0 + phi2) - 1.0*((1.0/420.0)*std::pow(theta01, 2)*theta02*std::pow(theta31, 3) - 1.0/140.0*std::pow(theta01, 2)*theta02*std::pow(theta31, 2) + (1.0/140.0)*std::pow(theta01, 2)*theta02*theta31 - 1.0/420.0*std::pow(theta01, 2)*theta02 + (1.0/210.0)*theta01*theta02*std::pow(theta31, 4) - 1.0/70.0*theta01*theta02*std::pow(theta31, 3) + (1.0/70.0)*theta01*theta02*std::pow(theta31, 2) - 1.0/210.0*theta01*theta02*theta31 + (1.0/210.0)*theta02*std::pow(theta31, 5) - 1.0/70.0*theta02*std::pow(theta31, 4) + (1.0/70.0)*theta02*std::pow(theta31, 3) - 1.0/210.0*theta02*std::pow(theta31, 2))/(-phi0 + phi1);
    b_H[28] = (1.0/360.0)*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/360.0)*std::pow(theta02, 2)*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) - 1.0/360.0*std::pow(theta02, 2) + (1.0/360.0)*std::pow(theta31, 3)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/360.0*std::pow(theta31, 3) + 1.0/360.0;
    b_ImH[28] = -1.0/360.0*std::pow(theta02, 2)*std::pow(theta31, 3) - 1.0/360.0*std::pow(theta02, 2)*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) + (1.0/360.0)*std::pow(theta02, 2) - 1.0/360.0*std::pow(theta31, 3)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + (1.0/360.0)*std::pow(theta31, 3);
    b_D[28] = -0.0027777777777777779*std::pow(theta02, 2)*(3*std::pow(theta01, 2)*theta31 - 3*std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + std::pow(theta31, 3) - std::pow(theta31, 2))/(-phi0 + phi1) - 0.0027777777777777779*std::pow(theta31, 3)*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/120.0)*std::pow(theta02, 2)*std::pow(theta31, 2) + (1.0/360.0)*std::pow(theta02, 2)*(std::pow(theta01, 3) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + 3*theta01*std::pow(theta31, 2) - 2*theta01*theta31 - 3*std::pow(theta31, 2)) + (1.0/120.0)*std::pow(theta31, 2)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/120.0*std::pow(theta31, 2))/(phi1 - phi3) - 1.0*((1.0/180.0)*theta02*std::pow(theta31, 3) + (1.0/180.0)*theta02*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) - 1.0/180.0*theta02 + (1.0/360.0)*std::pow(theta31, 3)*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))/(-phi0 + phi2);
    b_H[29] = (1.0/2520.0)*(-6*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 4)*std::pow(theta31, 4) + 8*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 8*std::pow(theta02, 4)*std::pow(theta31, 3) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 9*std::pow(theta02, 2)*std::pow(theta31, 4) - 12*std::pow(theta02, 2)*std::pow(theta31, 3) + 3*std::pow(theta02, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (std::pow(theta02, 2)*(-std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) - 2*std::pow(theta01, 2)*std::pow(theta31, 3) + 4*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 - 3*theta01*std::pow(theta31, 4) + 6*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + 1) + std::pow(theta31, 3)*(-3*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 5*std::pow(theta02, 2)*theta32 - 4*std::pow(theta02, 2) - 3*theta02*theta31*std::pow(theta32, 2) + 3*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 7*theta02*std::pow(theta32, 2) - 5*theta02*theta32 + 3*theta31*std::pow(theta32, 2) - 3*theta31 + 2*std::pow(theta32, 3) - 6*std::pow(theta32, 2) + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[29] = 1.0/2520.0 - 1.0/2520.0*(-6*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 4)*std::pow(theta31, 4) + 8*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 8*std::pow(theta02, 4)*std::pow(theta31, 3) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 9*std::pow(theta02, 2)*std::pow(theta31, 4) - 12*std::pow(theta02, 2)*std::pow(theta31, 3) + 3*std::pow(theta02, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (std::pow(theta02, 2)*(-std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) - 2*std::pow(theta01, 2)*std::pow(theta31, 3) + 4*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 - 3*theta01*std::pow(theta31, 4) + 6*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + 1) + std::pow(theta31, 3)*(-3*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 5*std::pow(theta02, 2)*theta32 - 4*std::pow(theta02, 2) - 3*theta02*theta31*std::pow(theta32, 2) + 3*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 7*theta02*std::pow(theta32, 2) - 5*theta02*theta32 + 3*theta31*std::pow(theta32, 2) - 3*theta31 + 2*std::pow(theta32, 3) - 6*std::pow(theta32, 2) + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[29] = -0.00039682539682539683*std::pow(theta02, 2)*(-3*std::pow(theta01, 2)*std::pow(theta31, 2) + 6*std::pow(theta01, 2)*theta31 - 3*std::pow(theta01, 2) - 4*theta01*std::pow(theta31, 3) + 8*theta01*std::pow(theta31, 2) - 4*theta01*theta31 - 3*std::pow(theta31, 4) + 6*std::pow(theta31, 3) - 3*std::pow(theta31, 2))/(-phi0 + phi1) - 0.00039682539682539683*std::pow(theta31, 3)*(-3*std::pow(theta02, 2)*theta31 - 2*std::pow(theta02, 2)*theta32 + 5*std::pow(theta02, 2) - 6*theta02*theta31*theta32 + 3*theta02*theta31 - 6*theta02*std::pow(theta32, 2) + 14*theta02*theta32 - 5*theta02 + 6*theta31*theta32 + 6*std::pow(theta32, 2) - 12*theta32)/(phi2 - phi3) - 0.00039682539682539683*(-6*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 8*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 24*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 24*std::pow(theta02, 4)*std::pow(theta31, 3) + 24*std::pow(theta02, 4)*std::pow(theta31, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 24*std::pow(theta02, 4)*std::pow(theta31, 2) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 36*std::pow(theta02, 2)*std::pow(theta31, 3) - 36*std::pow(theta02, 2)*std::pow(theta31, 2) + 12*std::pow(theta31, 3) - 12*std::pow(theta31, 2) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(std::pow(theta02, 2)*(-2*std::pow(theta01, 3)*theta31 + 2*std::pow(theta01, 3) - 6*std::pow(theta01, 2)*std::pow(theta31, 2) + 8*std::pow(theta01, 2)*theta31 - 2*std::pow(theta01, 2) - 12*theta01*std::pow(theta31, 3) + 18*theta01*std::pow(theta31, 2) - 6*theta01*theta31 + 12*std::pow(theta31, 3) - 12*std::pow(theta31, 2)) + std::pow(theta31, 3)*(-3*std::pow(theta02, 2)*theta32 + 3*std::pow(theta02, 2) - 3*theta02*std::pow(theta32, 2) + 3*theta02*theta32 + 3*std::pow(theta32, 2) - 3) + 3*std::pow(theta31, 2)*(-3*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 5*std::pow(theta02, 2)*theta32 - 4*std::pow(theta02, 2) - 3*theta02*theta31*std::pow(theta32, 2) + 3*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 7*theta02*std::pow(theta32, 2) - 5*theta02*theta32 + 3*theta31*std::pow(theta32, 2) - 3*theta31 + 2*std::pow(theta32, 3) - 6*std::pow(theta32, 2) + 4)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/2520.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(-6*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 6*std::pow(theta02, 4)*std::pow(theta31, 4) + 8*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 8*std::pow(theta02, 4)*std::pow(theta31, 3) - 2*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 2*std::pow(theta02, 4) + 9*std::pow(theta02, 2)*std::pow(theta31, 4) - 12*std::pow(theta02, 2)*std::pow(theta31, 3) + 3*std::pow(theta02, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + (std::pow(theta02, 2)*(-std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) - 2*std::pow(theta01, 2)*std::pow(theta31, 3) + 4*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 - 3*theta01*std::pow(theta31, 4) + 6*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + 1) + std::pow(theta31, 3)*(-3*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 5*std::pow(theta02, 2)*theta32 - 4*std::pow(theta02, 2) - 3*theta02*theta31*std::pow(theta32, 2) + 3*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 7*theta02*std::pow(theta32, 2) - 5*theta02*theta32 + 3*theta31*std::pow(theta32, 2) - 3*theta31 + 2*std::pow(theta32, 3) - 6*std::pow(theta32, 2) + 4))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/2520.0)*(-12*std::pow(theta02, 5)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 16*std::pow(theta02, 5)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 3*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 4*std::pow(theta02, 4)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 24*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 24*std::pow(theta02, 3)*std::pow(theta31, 4) + 32*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 32*std::pow(theta02, 3)*std::pow(theta31, 3) - 8*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 8*std::pow(theta02, 3) + 18*theta02*std::pow(theta31, 4) - 24*theta02*std::pow(theta31, 3) + 6*theta02 + (16*std::pow(theta02, 3) + 8*theta02)*(std::pow(theta02, 2)*(-std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) - 2*std::pow(theta01, 2)*std::pow(theta31, 3) + 4*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 - 3*theta01*std::pow(theta31, 4) + 6*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + 1) + std::pow(theta31, 3)*(-3*std::pow(theta02, 2)*theta31*theta32 + 3*std::pow(theta02, 2)*theta31 - std::pow(theta02, 2)*std::pow(theta32, 2) + 5*std::pow(theta02, 2)*theta32 - 4*std::pow(theta02, 2) - 3*theta02*theta31*std::pow(theta32, 2) + 3*theta02*theta31*theta32 - 2*theta02*std::pow(theta32, 3) + 7*theta02*std::pow(theta32, 2) - 5*theta02*theta32 + 3*theta31*std::pow(theta32, 2) - 3*theta31 + 2*std::pow(theta32, 3) - 6*std::pow(theta32, 2) + 4)) + (2*theta02*(-std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) - 2*std::pow(theta01, 2)*std::pow(theta31, 3) + 4*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 - 3*theta01*std::pow(theta31, 4) + 6*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) + 3*std::pow(theta31, 4) - 4*std::pow(theta31, 3) + 1) + std::pow(theta31, 3)*(-6*theta02*theta31*theta32 + 6*theta02*theta31 - 2*theta02*std::pow(theta32, 2) + 10*theta02*theta32 - 8*theta02 - 3*theta31*std::pow(theta32, 2) + 3*theta31*theta32 - 2*std::pow(theta32, 3) + 7*std::pow(theta32, 2) - 5*theta32))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[30] = (1.0/1260.0)*std::pow(theta02, 3)*std::pow(theta31, 3) + (1.0/1260.0)*std::pow(theta02, 3)*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) - 1.0/1260.0*std::pow(theta02, 3) + (1.0/1260.0)*std::pow(theta31, 3)*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - 1.0/1260.0*std::pow(theta31, 3) + 1.0/1260.0;
    b_ImH[30] = -1.0/1260.0*std::pow(theta02, 3)*std::pow(theta31, 3) - 1.0/1260.0*std::pow(theta02, 3)*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) + (1.0/1260.0)*std::pow(theta02, 3) - 1.0/1260.0*std::pow(theta31, 3)*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) + (1.0/1260.0)*std::pow(theta31, 3);
    b_D[30] = -0.00079365079365079365*std::pow(theta02, 3)*(3*std::pow(theta01, 2)*theta31 - 3*std::pow(theta01, 2) + 2*theta01*std::pow(theta31, 2) - 2*theta01*theta31 + std::pow(theta31, 3) - std::pow(theta31, 2))/(-phi0 + phi1) - 0.00079365079365079365*std::pow(theta31, 3)*(std::pow(theta02, 3) + 2*std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + 3*theta02*std::pow(theta32, 2) - 2*theta02*theta32 - 3*std::pow(theta32, 2))/(phi2 - phi3) - 1.0*((1.0/420.0)*std::pow(theta02, 3)*std::pow(theta31, 2) + (1.0/1260.0)*std::pow(theta02, 3)*(std::pow(theta01, 3) + 2*std::pow(theta01, 2)*theta31 - std::pow(theta01, 2) + 3*theta01*std::pow(theta31, 2) - 2*theta01*theta31 - 3*std::pow(theta31, 2)) + (1.0/420.0)*std::pow(theta31, 2)*(std::pow(theta02, 3)*theta32 - std::pow(theta02, 3) + std::pow(theta02, 2)*std::pow(theta32, 2) - std::pow(theta02, 2)*theta32 + theta02*std::pow(theta32, 3) - theta02*std::pow(theta32, 2) - std::pow(theta32, 3) + 1) - 1.0/420.0*std::pow(theta31, 2))/(phi1 - phi3) - 1.0*((1.0/420.0)*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/420.0)*std::pow(theta02, 2)*(std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + std::pow(theta01, 2)*std::pow(theta31, 2) - std::pow(theta01, 2)*theta31 + theta01*std::pow(theta31, 3) - theta01*std::pow(theta31, 2) - std::pow(theta31, 3) + 1) - 1.0/420.0*std::pow(theta02, 2) + (1.0/1260.0)*std::pow(theta31, 3)*(3*std::pow(theta02, 2)*theta32 - 3*std::pow(theta02, 2) + 2*theta02*std::pow(theta32, 2) - 2*theta02*theta32 + std::pow(theta32, 3) - std::pow(theta32, 2)))/(-phi0 + phi2);
    b_H[31] = (1.0/120.0)*theta02*std::pow(theta31, 4) + (1.0/120.0)*theta02*(std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + std::pow(theta01, 3)*std::pow(theta31, 2) - std::pow(theta01, 3)*theta31 + std::pow(theta01, 2)*std::pow(theta31, 3) - std::pow(theta01, 2)*std::pow(theta31, 2) + theta01*std::pow(theta31, 4) - theta01*std::pow(theta31, 3) - std::pow(theta31, 4) + 1) - 1.0/120.0*theta02 + (1.0/120.0)*std::pow(theta31, 4)*(theta02*theta32 - theta02 - theta32 + 1) - 1.0/120.0*std::pow(theta31, 4) + 1.0/120.0;
    b_ImH[31] = -1.0/120.0*theta02*std::pow(theta31, 4) - 1.0/120.0*theta02*(std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + std::pow(theta01, 3)*std::pow(theta31, 2) - std::pow(theta01, 3)*theta31 + std::pow(theta01, 2)*std::pow(theta31, 3) - std::pow(theta01, 2)*std::pow(theta31, 2) + theta01*std::pow(theta31, 4) - theta01*std::pow(theta31, 3) - std::pow(theta31, 4) + 1) + (1.0/120.0)*theta02 - 1.0/120.0*std::pow(theta31, 4)*(theta02*theta32 - theta02 - theta32 + 1) + (1.0/120.0)*std::pow(theta31, 4);
    b_D[31] = -0.0083333333333333332*theta02*(4*std::pow(theta01, 3)*theta31 - 4*std::pow(theta01, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) - 3*std::pow(theta01, 2)*theta31 + 2*theta01*std::pow(theta31, 3) - 2*theta01*std::pow(theta31, 2) + std::pow(theta31, 4) - std::pow(theta31, 3))/(-phi0 + phi1) - 0.0083333333333333332*std::pow(theta31, 4)*(theta02 - 1)/(phi2 - phi3) - 1.0*((1.0/30.0)*theta02*std::pow(theta31, 3) + (1.0/120.0)*theta02*(std::pow(theta01, 4) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + 4*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) - 4*std::pow(theta31, 3)) + (1.0/30.0)*std::pow(theta31, 3)*(theta02*theta32 - theta02 - theta32 + 1) - 1.0/30.0*std::pow(theta31, 3))/(phi1 - phi3) - 1.0*((1.0/120.0)*std::pow(theta01, 4)*theta31 - 1.0/120.0*std::pow(theta01, 4) + (1.0/120.0)*std::pow(theta01, 3)*std::pow(theta31, 2) - 1.0/120.0*std::pow(theta01, 3)*theta31 + (1.0/120.0)*std::pow(theta01, 2)*std::pow(theta31, 3) - 1.0/120.0*std::pow(theta01, 2)*std::pow(theta31, 2) + (1.0/120.0)*theta01*std::pow(theta31, 4) - 1.0/120.0*theta01*std::pow(theta31, 3) + (1.0/120.0)*std::pow(theta31, 4)*(theta32 - 1))/(-phi0 + phi2);
    b_H[32] = (1.0/840.0)*(16*std::pow(theta02, 4)*std::pow(theta31, 5) - 20*std::pow(theta02, 4)*std::pow(theta31, 4) + 4*std::pow(theta02, 4) - 8*std::pow(theta02, 3)*std::pow(theta31, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 5) + 10*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 10*std::pow(theta02, 3)*std::pow(theta31, 4) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 16*std::pow(theta02, 2)*std::pow(theta31, 5) - 20*std::pow(theta02, 2)*std::pow(theta31, 4) + 4*std::pow(theta02, 2) - 4*theta02*std::pow(theta31, 5) + 5*theta02*std::pow(theta31, 4) - theta02 + 4*std::pow(theta31, 5) - 5*std::pow(theta31, 4) + (-theta02*(std::pow(theta01, 4)*std::pow(theta31, 2) - 2*std::pow(theta01, 4)*theta31 + std::pow(theta01, 4) + 2*std::pow(theta01, 3)*std::pow(theta31, 3) - 4*std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 + 3*std::pow(theta01, 2)*std::pow(theta31, 4) - 6*std::pow(theta01, 2)*std::pow(theta31, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 4*theta01*std::pow(theta31, 5) - 8*theta01*std::pow(theta31, 4) + 4*theta01*std::pow(theta31, 3) - 4*std::pow(theta31, 5) + 5*std::pow(theta31, 4) - 1) + std::pow(theta31, 4)*(-4*theta02*theta31*theta32 + 4*theta02*theta31 - theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 5*theta02 + 4*theta31*theta32 - 4*theta31 + std::pow(theta32, 2) - 6*theta32 + 5))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_ImH[32] = 1.0/840.0 - 1.0/840.0*(16*std::pow(theta02, 4)*std::pow(theta31, 5) - 20*std::pow(theta02, 4)*std::pow(theta31, 4) + 4*std::pow(theta02, 4) - 8*std::pow(theta02, 3)*std::pow(theta31, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 5) + 10*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 10*std::pow(theta02, 3)*std::pow(theta31, 4) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 16*std::pow(theta02, 2)*std::pow(theta31, 5) - 20*std::pow(theta02, 2)*std::pow(theta31, 4) + 4*std::pow(theta02, 2) - 4*theta02*std::pow(theta31, 5) + 5*theta02*std::pow(theta31, 4) - theta02 + 4*std::pow(theta31, 5) - 5*std::pow(theta31, 4) + (-theta02*(std::pow(theta01, 4)*std::pow(theta31, 2) - 2*std::pow(theta01, 4)*theta31 + std::pow(theta01, 4) + 2*std::pow(theta01, 3)*std::pow(theta31, 3) - 4*std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 + 3*std::pow(theta01, 2)*std::pow(theta31, 4) - 6*std::pow(theta01, 2)*std::pow(theta31, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 4*theta01*std::pow(theta31, 5) - 8*theta01*std::pow(theta31, 4) + 4*theta01*std::pow(theta31, 3) - 4*std::pow(theta31, 5) + 5*std::pow(theta31, 4) - 1) + std::pow(theta31, 4)*(-4*theta02*theta31*theta32 + 4*theta02*theta31 - theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 5*theta02 + 4*theta31*theta32 - 4*theta31 + std::pow(theta32, 2) - 6*theta32 + 5))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1);
    b_D[32] = 0.0011904761904761906*theta02*(4*std::pow(theta01, 3)*std::pow(theta31, 2) - 8*std::pow(theta01, 3)*theta31 + 4*std::pow(theta01, 3) + 6*std::pow(theta01, 2)*std::pow(theta31, 3) - 12*std::pow(theta01, 2)*std::pow(theta31, 2) + 6*std::pow(theta01, 2)*theta31 + 6*theta01*std::pow(theta31, 4) - 12*theta01*std::pow(theta31, 3) + 6*theta01*std::pow(theta31, 2) + 4*std::pow(theta31, 5) - 8*std::pow(theta31, 4) + 4*std::pow(theta31, 3))/(-phi0 + phi1) - 0.0011904761904761906*std::pow(theta31, 4)*(-4*theta02*theta31 - 2*theta02*theta32 + 6*theta02 + 4*theta31 + 2*theta32 - 6)/(phi2 - phi3) - 0.0011904761904761906*(80*std::pow(theta02, 4)*std::pow(theta31, 4) - 80*std::pow(theta02, 4)*std::pow(theta31, 3) - 8*std::pow(theta02, 3)*std::pow(theta31, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 10*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 40*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 40*std::pow(theta02, 3)*std::pow(theta31, 4) + 40*std::pow(theta02, 3)*std::pow(theta31, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 40*std::pow(theta02, 3)*std::pow(theta31, 3) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*((1.0/2.0)*(2 - 2*theta31)*(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/std::pow(std::pow(theta31, 2) - 2*theta31 + 1, 2) + (1.0/2.0)*(4*std::pow(theta02, 2)*theta31 - 4*std::pow(theta02, 2) + 2*theta31 - 2)/(std::pow(theta31, 2) - 2*theta31 + 1))*(std::pow(theta31, 2) - 2*theta31 + 1)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 80*std::pow(theta02, 2)*std::pow(theta31, 4) - 80*std::pow(theta02, 2)*std::pow(theta31, 3) - 20*theta02*std::pow(theta31, 4) + 20*theta02*std::pow(theta31, 3) + 20*std::pow(theta31, 4) - 20*std::pow(theta31, 3) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-theta02*(2*std::pow(theta01, 4)*theta31 - 2*std::pow(theta01, 4) + 6*std::pow(theta01, 3)*std::pow(theta31, 2) - 8*std::pow(theta01, 3)*theta31 + 2*std::pow(theta01, 3) + 12*std::pow(theta01, 2)*std::pow(theta31, 3) - 18*std::pow(theta01, 2)*std::pow(theta31, 2) + 6*std::pow(theta01, 2)*theta31 + 20*theta01*std::pow(theta31, 4) - 32*theta01*std::pow(theta31, 3) + 12*theta01*std::pow(theta31, 2) - 20*std::pow(theta31, 4) + 20*std::pow(theta31, 3)) + std::pow(theta31, 4)*(-4*theta02*theta32 + 4*theta02 + 4*theta32 - 4) + 4*std::pow(theta31, 3)*(-4*theta02*theta31*theta32 + 4*theta02*theta31 - theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 5*theta02 + 4*theta31*theta32 - 4*theta31 + std::pow(theta32, 2) - 6*theta32 + 5)))/((phi1 - phi3)*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)) - 1.0*((1.0/840.0)*(-16*std::pow(theta02, 3) - 8*theta02)*(16*std::pow(theta02, 4)*std::pow(theta31, 5) - 20*std::pow(theta02, 4)*std::pow(theta31, 4) + 4*std::pow(theta02, 4) - 8*std::pow(theta02, 3)*std::pow(theta31, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 8*std::pow(theta02, 3)*std::pow(theta31, 5) + 10*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 10*std::pow(theta02, 3)*std::pow(theta31, 4) - 2*std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 2*std::pow(theta02, 3) + 16*std::pow(theta02, 2)*std::pow(theta31, 5) - 20*std::pow(theta02, 2)*std::pow(theta31, 4) + 4*std::pow(theta02, 2) - 4*theta02*std::pow(theta31, 5) + 5*theta02*std::pow(theta31, 4) - theta02 + 4*std::pow(theta31, 5) - 5*std::pow(theta31, 4) + (-theta02*(std::pow(theta01, 4)*std::pow(theta31, 2) - 2*std::pow(theta01, 4)*theta31 + std::pow(theta01, 4) + 2*std::pow(theta01, 3)*std::pow(theta31, 3) - 4*std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 + 3*std::pow(theta01, 2)*std::pow(theta31, 4) - 6*std::pow(theta01, 2)*std::pow(theta31, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 4*theta01*std::pow(theta31, 5) - 8*theta01*std::pow(theta31, 4) + 4*theta01*std::pow(theta31, 3) - 4*std::pow(theta31, 5) + 5*std::pow(theta31, 4) - 1) + std::pow(theta31, 4)*(-4*theta02*theta31*theta32 + 4*theta02*theta31 - theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 5*theta02 + 4*theta31*theta32 - 4*theta31 + std::pow(theta32, 2) - 6*theta32 + 5))*(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1) + 1)/std::pow(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1, 2) + (1.0/840.0)*(-16*std::pow(theta02, 4)*std::pow(theta31, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) + 20*std::pow(theta02, 4)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))/std::sqrt(2*std::pow(theta02, 2) + 1) - 4*std::pow(theta02, 3)*std::pow(theta31, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 64*std::pow(theta02, 3)*std::pow(theta31, 5) + 5*std::pow(theta02, 3)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) - 80*std::pow(theta02, 3)*std::pow(theta31, 4) - std::pow(theta02, 3)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1)*(4*theta02*std::pow(theta31, 2) - 8*theta02*theta31 + 4*theta02)/(2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1) + 16*std::pow(theta02, 3) - 24*std::pow(theta02, 2)*std::pow(theta31, 5)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 24*std::pow(theta02, 2)*std::pow(theta31, 5) + 30*std::pow(theta02, 2)*std::pow(theta31, 4)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) + 30*std::pow(theta02, 2)*std::pow(theta31, 4) - 6*std::pow(theta02, 2)*std::sqrt((2*std::pow(theta02, 2)*std::pow(theta31, 2) - 4*std::pow(theta02, 2)*theta31 + 2*std::pow(theta02, 2) + std::pow(theta31, 2) - 2*theta31 + 1)/(std::pow(theta31, 2) - 2*theta31 + 1))*std::sqrt(2*std::pow(theta02, 2) + 1) - 6*std::pow(theta02, 2) + 32*theta02*std::pow(theta31, 5) - 40*theta02*std::pow(theta31, 4) + 8*theta02 - 4*std::pow(theta31, 5) + 5*std::pow(theta31, 4) + (16*std::pow(theta02, 3) + 8*theta02)*(-theta02*(std::pow(theta01, 4)*std::pow(theta31, 2) - 2*std::pow(theta01, 4)*theta31 + std::pow(theta01, 4) + 2*std::pow(theta01, 3)*std::pow(theta31, 3) - 4*std::pow(theta01, 3)*std::pow(theta31, 2) + 2*std::pow(theta01, 3)*theta31 + 3*std::pow(theta01, 2)*std::pow(theta31, 4) - 6*std::pow(theta01, 2)*std::pow(theta31, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 4*theta01*std::pow(theta31, 5) - 8*theta01*std::pow(theta31, 4) + 4*theta01*std::pow(theta31, 3) - 4*std::pow(theta31, 5) + 5*std::pow(theta31, 4) - 1) + std::pow(theta31, 4)*(-4*theta02*theta31*theta32 + 4*theta02*theta31 - theta02*std::pow(theta32, 2) + 6*theta02*theta32 - 5*theta02 + 4*theta31*theta32 - 4*theta31 + std::pow(theta32, 2) - 6*theta32 + 5)) + (4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1)*(-std::pow(theta01, 4)*std::pow(theta31, 2) + 2*std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) - 2*std::pow(theta01, 3)*std::pow(theta31, 3) + 4*std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 - 3*std::pow(theta01, 2)*std::pow(theta31, 4) + 6*std::pow(theta01, 2)*std::pow(theta31, 3) - 3*std::pow(theta01, 2)*std::pow(theta31, 2) - 4*theta01*std::pow(theta31, 5) + 8*theta01*std::pow(theta31, 4) - 4*theta01*std::pow(theta31, 3) + 4*std::pow(theta31, 5) + std::pow(theta31, 4)*(-4*theta31*theta32 + 4*theta31 - std::pow(theta32, 2) + 6*theta32 - 5) - 5*std::pow(theta31, 4) + 1) - 1)/(4*std::pow(theta02, 4) + 4*std::pow(theta02, 2) + 1))/(-phi0 + phi2);
    b_H[33] = (1.0/840.0)*std::pow(theta02, 2)*std::pow(theta31, 4) + (1.0/840.0)*std::pow(theta02, 2)*(std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + std::pow(theta01, 3)*std::pow(theta31, 2) - std::pow(theta01, 3)*theta31 + std::pow(theta01, 2)*std::pow(theta31, 3) - std::pow(theta01, 2)*std::pow(theta31, 2) + theta01*std::pow(theta31, 4) - theta01*std::pow(theta31, 3) - std::pow(theta31, 4) + 1) - 1.0/840.0*std::pow(theta02, 2) + (1.0/840.0)*std::pow(theta31, 4)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/840.0*std::pow(theta31, 4) + 1.0/840.0;
    b_ImH[33] = -1.0/840.0*std::pow(theta02, 2)*std::pow(theta31, 4) - 1.0/840.0*std::pow(theta02, 2)*(std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + std::pow(theta01, 3)*std::pow(theta31, 2) - std::pow(theta01, 3)*theta31 + std::pow(theta01, 2)*std::pow(theta31, 3) - std::pow(theta01, 2)*std::pow(theta31, 2) + theta01*std::pow(theta31, 4) - theta01*std::pow(theta31, 3) - std::pow(theta31, 4) + 1) + (1.0/840.0)*std::pow(theta02, 2) - 1.0/840.0*std::pow(theta31, 4)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) + (1.0/840.0)*std::pow(theta31, 4);
    b_D[33] = -0.0011904761904761906*std::pow(theta02, 2)*(4*std::pow(theta01, 3)*theta31 - 4*std::pow(theta01, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) - 3*std::pow(theta01, 2)*theta31 + 2*theta01*std::pow(theta31, 3) - 2*theta01*std::pow(theta31, 2) + std::pow(theta31, 4) - std::pow(theta31, 3))/(-phi0 + phi1) - 0.0011904761904761906*std::pow(theta31, 4)*(std::pow(theta02, 2) + 2*theta02*theta32 - theta02 - 2*theta32)/(phi2 - phi3) - 1.0*((1.0/210.0)*std::pow(theta02, 2)*std::pow(theta31, 3) + (1.0/840.0)*std::pow(theta02, 2)*(std::pow(theta01, 4) + 2*std::pow(theta01, 3)*theta31 - std::pow(theta01, 3) + 3*std::pow(theta01, 2)*std::pow(theta31, 2) - 2*std::pow(theta01, 2)*theta31 + 4*theta01*std::pow(theta31, 3) - 3*theta01*std::pow(theta31, 2) - 4*std::pow(theta31, 3)) + (1.0/210.0)*std::pow(theta31, 3)*(std::pow(theta02, 2)*theta32 - std::pow(theta02, 2) + theta02*std::pow(theta32, 2) - theta02*theta32 - std::pow(theta32, 2) + 1) - 1.0/210.0*std::pow(theta31, 3))/(phi1 - phi3) - 1.0*((1.0/420.0)*theta02*std::pow(theta31, 4) + (1.0/420.0)*theta02*(std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + std::pow(theta01, 3)*std::pow(theta31, 2) - std::pow(theta01, 3)*theta31 + std::pow(theta01, 2)*std::pow(theta31, 3) - std::pow(theta01, 2)*std::pow(theta31, 2) + theta01*std::pow(theta31, 4) - theta01*std::pow(theta31, 3) - std::pow(theta31, 4) + 1) - 1.0/420.0*theta02 + (1.0/840.0)*std::pow(theta31, 4)*(2*theta02*theta32 - 2*theta02 + std::pow(theta32, 2) - theta32))/(-phi0 + phi2);
    b_H[34] = (1.0/210.0)*theta02*std::pow(theta31, 5) + (1.0/210.0)*theta02*(std::pow(theta01, 5)*theta31 - std::pow(theta01, 5) + std::pow(theta01, 4)*std::pow(theta31, 2) - std::pow(theta01, 4)*theta31 + std::pow(theta01, 3)*std::pow(theta31, 3) - std::pow(theta01, 3)*std::pow(theta31, 2) + std::pow(theta01, 2)*std::pow(theta31, 4) - std::pow(theta01, 2)*std::pow(theta31, 3) + theta01*std::pow(theta31, 5) - theta01*std::pow(theta31, 4) - std::pow(theta31, 5) + 1) - 1.0/210.0*theta02 + (1.0/210.0)*std::pow(theta31, 5)*(theta02*theta32 - theta02 - theta32 + 1) - 1.0/210.0*std::pow(theta31, 5) + 1.0/210.0;
    b_ImH[34] = -1.0/210.0*theta02*std::pow(theta31, 5) - 1.0/210.0*theta02*(std::pow(theta01, 5)*theta31 - std::pow(theta01, 5) + std::pow(theta01, 4)*std::pow(theta31, 2) - std::pow(theta01, 4)*theta31 + std::pow(theta01, 3)*std::pow(theta31, 3) - std::pow(theta01, 3)*std::pow(theta31, 2) + std::pow(theta01, 2)*std::pow(theta31, 4) - std::pow(theta01, 2)*std::pow(theta31, 3) + theta01*std::pow(theta31, 5) - theta01*std::pow(theta31, 4) - std::pow(theta31, 5) + 1) + (1.0/210.0)*theta02 - 1.0/210.0*std::pow(theta31, 5)*(theta02*theta32 - theta02 - theta32 + 1) + (1.0/210.0)*std::pow(theta31, 5);
    b_D[34] = -0.0047619047619047623*theta02*(5*std::pow(theta01, 4)*theta31 - 5*std::pow(theta01, 4) + 4*std::pow(theta01, 3)*std::pow(theta31, 2) - 4*std::pow(theta01, 3)*theta31 + 3*std::pow(theta01, 2)*std::pow(theta31, 3) - 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 2*theta01*std::pow(theta31, 4) - 2*theta01*std::pow(theta31, 3) + std::pow(theta31, 5) - std::pow(theta31, 4))/(-phi0 + phi1) - 0.0047619047619047623*std::pow(theta31, 5)*(theta02 - 1)/(phi2 - phi3) - 1.0*((1.0/42.0)*theta02*std::pow(theta31, 4) + (1.0/210.0)*theta02*(std::pow(theta01, 5) + 2*std::pow(theta01, 4)*theta31 - std::pow(theta01, 4) + 3*std::pow(theta01, 3)*std::pow(theta31, 2) - 2*std::pow(theta01, 3)*theta31 + 4*std::pow(theta01, 2)*std::pow(theta31, 3) - 3*std::pow(theta01, 2)*std::pow(theta31, 2) + 5*theta01*std::pow(theta31, 4) - 4*theta01*std::pow(theta31, 3) - 5*std::pow(theta31, 4)) + (1.0/42.0)*std::pow(theta31, 4)*(theta02*theta32 - theta02 - theta32 + 1) - 1.0/42.0*std::pow(theta31, 4))/(phi1 - phi3) - 1.0*((1.0/210.0)*std::pow(theta01, 5)*theta31 - 1.0/210.0*std::pow(theta01, 5) + (1.0/210.0)*std::pow(theta01, 4)*std::pow(theta31, 2) - 1.0/210.0*std::pow(theta01, 4)*theta31 + (1.0/210.0)*std::pow(theta01, 3)*std::pow(theta31, 3) - 1.0/210.0*std::pow(theta01, 3)*std::pow(theta31, 2) + (1.0/210.0)*std::pow(theta01, 2)*std::pow(theta31, 4) - 1.0/210.0*std::pow(theta01, 2)*std::pow(theta31, 3) + (1.0/210.0)*theta01*std::pow(theta31, 5) - 1.0/210.0*theta01*std::pow(theta31, 4) + (1.0/210.0)*std::pow(theta31, 5)*(theta32 - 1))/(-phi0 + phi2);
  }

}//equivalent_polynomials
#endif
